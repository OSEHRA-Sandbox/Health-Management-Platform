VPRJTQU ;SLC/KCM -- Unit tests for query utilities
 ;;1.0;JSON DATA STORE;;Sep 01, 2012
 ;
STARTUP  ; Run once before all tests
 Q
SHUTDOWN ; Run once after all tests
 Q
SETUP    ; Run before each test
 Q
TEARDOWN ; Run after each test
 Q
ASSERT(EXPECT,ACTUAL) ; convenience
 D EQ^VPRJT(EXPECT,ACTUAL)
 Q
 ;
ADJNUM   ;; @TEST incrementing and decrementing numbers
 ; use CHKTF, CHKEQ, FAIL, CHKLEAKS to test calls
 N X
 S X=$$ADJNUM^VPRJPQU(100)       D ASSERT(101,X)
 S X=$$ADJNUM^VPRJPQU(1.009)     D ASSERT(1.01,X)
 S X=$$ADJNUM^VPRJPQU(1.001,"-") D ASSERT(1,X)
 S X=$$ADJNUM^VPRJPQU(100,"-")   D ASSERT(99,X)
 Q
ADJSTR   ;; @TEST bumping strings up and down in collation
 N X
 S X=$$ADJSTR^VPRJPQU("SMILE","-") D ASSERT("SMILD"_$C(255),X)
 S X=$$ADJSTR^VPRJPQU("SMI")       D ASSERT("SMI"_$C(255),X)
 Q
RNG2VAL  ;; @TEST converting ranges to START, STOP
 N START,STOP,MAXC
 S MAXC=$C(255)
 ;
 ; default is include endpoints and assume each is "starts with"
 D RNG2VAL^VPRJPQU("201209191045..201210200620",.START,.STOP,"T")
 D ASSERT("201209191045",START),ASSERT("201210200620 ",STOP)
 ; (start:stop) gets the values between start and stop (exclude endpoints)
 D RNG2VAL^VPRJPQU("]201209191045..201210200620[",.START,.STOP,"T")
 D ASSERT("201209191045 ",START),ASSERT("201210200620",STOP)
 ; [start:stop] changes start/stop so that $O will include endpoints
 D RNG2VAL^VPRJPQU("[201209191045..201210200620]",.START,.STOP,"T")
 D ASSERT("201209191045",START),ASSERT("201210200620 ",STOP)
 D RNG2VAL^VPRJPQU("20121101",.START,.STOP,"T")
 D ASSERT("20121101",START),ASSERT("20121101 ",STOP)
 D RNG2VAL^VPRJPQU("201211011045",.START,.STOP,"T")
 D ASSERT("201211011045",START),ASSERT("201211011045 ",STOP)
 ;
 D RNG2VAL^VPRJPQU("ACETAMINOPHEN..ASPIRIN",.START,.STOP,"S")
 D ASSERT("ACETAMINOPHEN",START),ASSERT("ASPIRIN ",STOP)
 D RNG2VAL^VPRJPQU("]ACETAMINOPHEN..ASPIRIN[",.START,.STOP,"S")
 D ASSERT("ACETAMINOPHEN ",START),ASSERT("ASPIRIN",STOP)
 D RNG2VAL^VPRJPQU("[ACETAMINOPHEN..ASPIRIN]",.START,.STOP,"S")
 D ASSERT("ACETAMINOPHEN",START),ASSERT("ASPIRIN ",STOP)
 ;
 D RNG2VAL^VPRJPQU("ASPIRIN*",.START,.STOP,"S")
 D ASSERT("ASPIRIN",START),ASSERT("ASPIRIN"_MAXC,STOP)
 D RNG2VAL^VPRJPQU("ASP*",.START,.STOP,"S")
 D ASSERT("ASP",START),ASSERT("ASP"_MAXC,STOP)
 ;
 D RNG2VAL^VPRJPQU("10..20",.START,.STOP,"N")
 D ASSERT(9,START),ASSERT(20,STOP)
 D RNG2VAL^VPRJPQU("[10..20]",.START,.STOP,"N")
 D ASSERT(9,START),ASSERT(20,STOP)
 D RNG2VAL^VPRJPQU("]1.001..3.1416[",.START,.STOP,"N")
 D ASSERT(1.001,START),ASSERT(3.1415,STOP)
 D RNG2VAL^VPRJPQU("[1.001..3.1416]",.START,.STOP,"N")
 D ASSERT(1,START),ASSERT(3.1416,STOP)
 Q
RNG2VAL2 ;; @TEST convert range to start, stop (2nd edition)
 ;; -- string collation, space appended to each entry in index
 ;;SMILE       "SMILE"   Q:X]"SMILE "   []  equals SMILE
 ;;[SMILE]     "SMILE"   Q:X]"SMILE "   []  equals SMILE
 ;;SMI..SOR    "SMI"     Q:X]"SOR "     []  startswith SMI thru startswith SOR
 ;;[SMI..SOR]  "SMI"     Q:X]"SOR "     []  SMI thru SOR (not startswith) 
 ;;]SMI..SOR[  "SMI "    Q:X]"SOR"      ()  SMI thru SOR excluding SMI and SOR
 ;;SMI*        "SMI"     Q:X]"SMIÿ"     [*  startswith SMI
 ;;]SMI*       "SMI "    Q:X]"SMIÿ"     (*  startswith SMI, excluding SMI itself
 ;; 
 ;; -- time collation, space appended to each entry in index
 ;;20121101..20121117    "20121101"       Q:X]"20121117 "      []
 ;;20121101              "20121101"       Q:X]"20121101 "      []
 ;;[20121101..20121117]  "20121101"       Q:X]"20121117 "      []
 ;;]20121101..20121117[  "20121101 "      Q:X]"20121117"       ()
 ;;201211011045          "201211011045"   Q:X]"201211011045 "  []
 ;;201211*               "201211"         Q:X]"201211ÿ"        [*
 ;;]201211*              "201211 "        Q:X]"201211ÿ"        (*
 ;;
 ;; -- inverse time collation, number inverted and space appended
 ;;20121101..20121117    "79878882:"      Q:X]"79878898="      []
 ;;20121101              "79878898:"      Q:X]"79878898="      []
 ;;[20121101..20121117]  "79878882:"      Q:X]"79878898="      []
 ;;]20121101..20121117[  "79878882="      Q:X]"79878898:"      ()
 ;;201211011045          "798788988954:"  Q:X]"798788988954="  []
 ;;201211*               "798788 "        Q:X]"798788="        [*
 ;;]201211*              "798788 "        Q:X]"798788:"        (*
 ;;
 ;; -- numeric collation, each entry in index is "plused"
 ;;123456.654321..65432.789    123456.654320   Q:X>65432.789   []
 ;;[123456.654321..65432.789]  123456.654320   Q:X>65432.789   []
 ;;]123456.654321..65432.789[  123456.654321   Q:X>65432.788   ()
 ;
 N START,STOP,MAXC
 S MAXC=$C(255)
 D RNG2VAL^VPRJPQU("SMILE",.START,.STOP,"S")      D ASSERT("SMILE",START) D ASSERT("SMILE ",STOP)
 D RNG2VAL^VPRJPQU("[SMILE]",.START,.STOP,"S")    D ASSERT("SMILE",START) D ASSERT("SMILE ",STOP)
 D RNG2VAL^VPRJPQU("SMI..SOR",.START,.STOP,"S")   D ASSERT("SMI",START)   D ASSERT("SOR ",STOP)
 D RNG2VAL^VPRJPQU("[SMI..SOR]",.START,.STOP,"S") D ASSERT("SMI",START)   D ASSERT("SOR ",STOP)
 D RNG2VAL^VPRJPQU("]SMI..SOR[",.START,.STOP,"S") D ASSERT("SMI ",START)  D ASSERT("SOR",STOP)
 D RNG2VAL^VPRJPQU("SMI*",.START,.STOP,"S")       D ASSERT("SMI",START)   D ASSERT("SMI"_MAXC,STOP)
 D RNG2VAL^VPRJPQU("]SMI*",.START,STOP,"S")       D ASSERT("SMI ",START)  D ASSERT("SMI"_MAXC,STOP)
 ;
 D RNG2VAL^VPRJPQU("20121101..20121117",.START,.STOP,"T")   D ASSERT("20121101",START)     D ASSERT("20121117 ",STOP)
 D RNG2VAL^VPRJPQU("20121101",.START,.STOP,"T")             D ASSERT("20121101",START)     D ASSERT("20121101 ",STOP)
 D RNG2VAL^VPRJPQU("[20121101..20121117]",.START,.STOP,"T") D ASSERT("20121101",START)     D ASSERT("20121117 ",STOP)
 D RNG2VAL^VPRJPQU("]20121101..20121117[",.START,.STOP,"T") D ASSERT("20121101 ",START)    D ASSERT("20121117",STOP)
 D RNG2VAL^VPRJPQU("201211011045",.START,.STOP,"T")         D ASSERT("201211011045",START) D ASSERT("201211011045 ",STOP)
 D RNG2VAL^VPRJPQU("201211*",.START,.STOP,"T")              D ASSERT("201211",START)       D ASSERT("201211"_MAXC,STOP)
 D RNG2VAL^VPRJPQU("]201211*",.START,.STOP,"T")             D ASSERT("201211 ",START)      D ASSERT("201211"_MAXC,STOP)
 ;
 D RNG2VAL^VPRJPQU("20121101..20121117",.START,.STOP,"V")   D ASSERT("79878882:",START)     D ASSERT("79878898=",STOP)
 D RNG2VAL^VPRJPQU("20121101",.START,.STOP,"V")             D ASSERT("79878898:",START)     D ASSERT("79878898=",STOP)
 D RNG2VAL^VPRJPQU("[20121101..20121117]",.START,.STOP,"V") D ASSERT("79878882:",START)     D ASSERT("79878898=",STOP)
 D RNG2VAL^VPRJPQU("]20121101..20121117[",.START,.STOP,"V") D ASSERT("79878882=",START)     D ASSERT("79878898:",STOP)
 D RNG2VAL^VPRJPQU("201211011045",.START,.STOP,"V")         D ASSERT("798788988954:",START) D ASSERT("798788988954=",STOP)
 D RNG2VAL^VPRJPQU("201211*",.START,.STOP,"V")              D ASSERT("798788 ",START)       D ASSERT("798788=",STOP)
 D RNG2VAL^VPRJPQU("]201211*",.START,.STOP,"V")             D ASSERT("798788 ",START)       D ASSERT("798788:",STOP)
 ;
 D RNG2VAL^VPRJPQU("12345.654321..65432.789",.START,.STOP,"N")   D ASSERT(12345.65432,START)  D ASSERT(65432.789,STOP)
 D RNG2VAL^VPRJPQU("[12345.654321..65432.789]",.START,.STOP,"N") D ASSERT(12345.65432,START)  D ASSERT(65432.789,STOP)
 D RNG2VAL^VPRJPQU("]12345.654321..65432.789[",.START,.STOP,"N") D ASSERT(12345.654321,START) D ASSERT(65432.788,STOP)
 ;
 D RNG2VAL^VPRJPQU("2014..1999",.START,.STOP,"T") D ASSERT("1999",START) D ASSERT("2014 ",STOP)
 Q