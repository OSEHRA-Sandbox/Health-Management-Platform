VPRJD ;SLC/KCM -- Save JSON objects
 ;;1.0;JSON DATA STORE;;Sep 01, 2012
 ;
SAVE(JSON) ; Save a JSON encoded object
 N UID,COLL,KEY,OBJECT,OLDOBJ,VPRJERR,INDEXER,TLTARY
 ;
 ; decode JSON into object and extract required fields
 D DECODE^VPRJSON("JSON","OBJECT","VPRJERR")
 I $L($G(VPRJERR)) D SETERROR^VPRJRUT(202,VPRJERR) QUIT ""
 S UID=$G(OBJECT("uid")) I '$L(UID) D SETERROR^VPRJRUT(207) QUIT ""
 ;
 ; Parse out the collection, and key from the UID
 ; Currently assuming UID is urn:va:type:vistaAccount...
 ; For example:  urn:va:fresh:93EF
 N COLL S COLL=$P(UID,":",3)
 I '$L(COLL) D SETERROR^VPRJRUT(210,UID) QUIT ""
 ;
 L +^VPRJD(UID):2 E  D SETERROR^VPRJRUT(502) QUIT ""
 ; kill the old indexes and object
 S OLDOBJ="" M OLDOBJ=^VPRJD(UID)
 D BLDTLT(COLL,.OBJECT,.TLTARY)
 TSTART
 K ^VPRJD(UID)
 K ^VPRJD("JSON",UID)
 ;
 M ^VPRJD("JSON",UID)=JSON
 M ^VPRJD("TEMPLATE",UID)=TLTARY
 M ^VPRJD(UID)=OBJECT
 D INDEX^VPRJDX(UID,.OLDOBJ,.OBJECT)
 TCOMMIT
 L -^VPRJD(UID)
 ;
 Q $$URLENC^VPRJRUT(UID)  ; no errors
 ;
DELETE(KEY) ; Delete an object given its UID
 N OLDOBJ,OBJECT,COLL
 S COLL=$P(KEY,":",3)
 I '$L(COLL) D SETERROR^VPRJRUT(210,KEY) QUIT ""
 ;
 L +^VPRJD(KEY):2 E  D SETERROR^VPRJRUT(502) QUIT ""
 ; kill the old indexes and object
 S OBJECT=""
 S OLDOBJ="" M OLDOBJ=^VPRJD(KEY)
 TSTART
 K ^VPRJD(KEY)
 K ^VPRJD("JSON",KEY)
 K ^VPRJD("TEMPLATE",KEY)
 D INDEX^VPRJDX(KEY,.OLDOBJ,.OBJECT)
 TCOMMIT
 L -^VPRJD(KEY)
 Q
BLDTLT(COLL,OBJECT,TLTARY) ; Build JSON objects for associated templates
 Q
DELCTN(COLL) ; Delete a collection given its name
 I '$L(COLL) D SETERROR^VPRJRUT(215) QUIT ""
 N PREFIX,X
 S PREFIX="urn:va:"_COLL_":",X=PREFIX
 F  S X=$O(^VPRJD(X)) Q:$E(X,1,$L(PREFIX))'=PREFIX  D DELETE(X)
 I $G(^VPRJDX("count","collection",COLL)) D SETERROR^VPRJRUT(216) QUIT ""
 K ^VPRJDX("count","collection",COLL)
 Q