KIDS Distribution saved on Dec 19, 2012@15:28:37
VPR*1*3 for P34 -- 12/19/2012
**KIDS**:VPR*1.0*3^

**INSTALL NAME**
VPR*1.0*3
"BLD",8216,0)
VPR*1.0*3^VIRTUAL PATIENT RECORD^0^3121219^y
"BLD",8216,1,0)
^^2^2^3120925^
"BLD",8216,1,1,0)
The Virtual Patient Record (VPR) monitors a VistA system for new data
"BLD",8216,1,2,0)
and activity, and makes that data available to a subscribing client.
"BLD",8216,4,0)
^9.64PA^560.11^5
"BLD",8216,4,560,0)
560
"BLD",8216,4,560,222)
y^y^f^^^^n
"BLD",8216,4,560.1,0)
560.1
"BLD",8216,4,560.1,222)
y^y^f^^^^n
"BLD",8216,4,560.11,0)
560.11
"BLD",8216,4,560.11,222)
y^y^f^^^^n
"BLD",8216,4,561,0)
561
"BLD",8216,4,561,222)
y^y^f^^^^n
"BLD",8216,4,561.2,0)
561.2
"BLD",8216,4,561.2,222)
y^y^f^^^^n
"BLD",8216,4,"B",560,560)

"BLD",8216,4,"B",560.1,560.1)

"BLD",8216,4,"B",560.11,560.11)

"BLD",8216,4,"B",561,561)

"BLD",8216,4,"B",561.2,561.2)

"BLD",8216,6.3)
55
"BLD",8216,"ABPKG")
n
"BLD",8216,"INI")
PRE^VPRP3I
"BLD",8216,"INIT")
POST^VPRP3I
"BLD",8216,"KRN",0)
^9.67PA^779.2^20
"BLD",8216,"KRN",.4,0)
.4
"BLD",8216,"KRN",.401,0)
.401
"BLD",8216,"KRN",.402,0)
.402
"BLD",8216,"KRN",.403,0)
.403
"BLD",8216,"KRN",.5,0)
.5
"BLD",8216,"KRN",.84,0)
.84
"BLD",8216,"KRN",3.6,0)
3.6
"BLD",8216,"KRN",3.8,0)
3.8
"BLD",8216,"KRN",9.2,0)
9.2
"BLD",8216,"KRN",9.8,0)
9.8
"BLD",8216,"KRN",9.8,"NM",0)
^9.68A^26^25
"BLD",8216,"KRN",9.8,"NM",1,0)
VPRCORD^^0^B5720725
"BLD",8216,"KRN",9.8,"NM",2,0)
VPRCORD1^^0^B121238708
"BLD",8216,"KRN",9.8,"NM",3,0)
VPRCORD2^^0^B74000719
"BLD",8216,"KRN",9.8,"NM",4,0)
VPRCPAT^^0^B1076093
"BLD",8216,"KRN",9.8,"NM",5,0)
VPRCPAT1^^0^B7071755
"BLD",8216,"KRN",9.8,"NM",6,0)
VPRCRPC^^0^B5035795
"BLD",8216,"KRN",9.8,"NM",7,0)
VPRCRPC1^^0^B72920747
"BLD",8216,"KRN",9.8,"NM",9,0)
VPREVNT^^0^B63363805
"BLD",8216,"KRN",9.8,"NM",10,0)
VPRFPTC^^0^B14007897
"BLD",8216,"KRN",9.8,"NM",11,0)
VPRHTTP^^0^B14174140
"BLD",8216,"KRN",9.8,"NM",12,0)
VPRIDX^^0^B8711715
"BLD",8216,"KRN",9.8,"NM",13,0)
VPRPANEL^^0^B9307129
"BLD",8216,"KRN",9.8,"NM",14,0)
VPRPATS^^0^B45481720
"BLD",8216,"KRN",9.8,"NM",15,0)
VPRPRODC^^0^B2553308
"BLD",8216,"KRN",9.8,"NM",16,0)
VPRROS2^^0^B104600206
"BLD",8216,"KRN",9.8,"NM",17,0)
VPRROS3^^0^B71479404
"BLD",8216,"KRN",9.8,"NM",18,0)
VPRROS4^^0^B87434809
"BLD",8216,"KRN",9.8,"NM",19,0)
VPRROS5^^0^B9403802
"BLD",8216,"KRN",9.8,"NM",20,0)
VPRSR^^0^B406288
"BLD",8216,"KRN",9.8,"NM",21,0)
VPRDJX^^0^B15763133
"BLD",8216,"KRN",9.8,"NM",22,0)
VPRPARAM^^0^B12487700
"BLD",8216,"KRN",9.8,"NM",23,0)
VPRDJ1^^0^B7627637
"BLD",8216,"KRN",9.8,"NM",24,0)
VPRPXRM^^0^B3625288
"BLD",8216,"KRN",9.8,"NM",25,0)
MDCPROTD^^0^B6783608
"BLD",8216,"KRN",9.8,"NM",26,0)
VPRDJ2^^0^B11062182
"BLD",8216,"KRN",9.8,"NM","B","MDCPROTD",25)

"BLD",8216,"KRN",9.8,"NM","B","VPRCORD",1)

"BLD",8216,"KRN",9.8,"NM","B","VPRCORD1",2)

"BLD",8216,"KRN",9.8,"NM","B","VPRCORD2",3)

"BLD",8216,"KRN",9.8,"NM","B","VPRCPAT",4)

"BLD",8216,"KRN",9.8,"NM","B","VPRCPAT1",5)

"BLD",8216,"KRN",9.8,"NM","B","VPRCRPC",6)

"BLD",8216,"KRN",9.8,"NM","B","VPRCRPC1",7)

"BLD",8216,"KRN",9.8,"NM","B","VPRDJ1",23)

"BLD",8216,"KRN",9.8,"NM","B","VPRDJ2",26)

"BLD",8216,"KRN",9.8,"NM","B","VPRDJX",21)

"BLD",8216,"KRN",9.8,"NM","B","VPREVNT",9)

"BLD",8216,"KRN",9.8,"NM","B","VPRFPTC",10)

"BLD",8216,"KRN",9.8,"NM","B","VPRHTTP",11)

"BLD",8216,"KRN",9.8,"NM","B","VPRIDX",12)

"BLD",8216,"KRN",9.8,"NM","B","VPRPANEL",13)

"BLD",8216,"KRN",9.8,"NM","B","VPRPARAM",22)

"BLD",8216,"KRN",9.8,"NM","B","VPRPATS",14)

"BLD",8216,"KRN",9.8,"NM","B","VPRPRODC",15)

"BLD",8216,"KRN",9.8,"NM","B","VPRPXRM",24)

"BLD",8216,"KRN",9.8,"NM","B","VPRROS2",16)

"BLD",8216,"KRN",9.8,"NM","B","VPRROS3",17)

"BLD",8216,"KRN",9.8,"NM","B","VPRROS4",18)

"BLD",8216,"KRN",9.8,"NM","B","VPRROS5",19)

"BLD",8216,"KRN",9.8,"NM","B","VPRSR",20)

"BLD",8216,"KRN",19,0)
19
"BLD",8216,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8216,"KRN",19,"NM",1,0)
VPR APPLICATION PROXY^^0
"BLD",8216,"KRN",19,"NM",2,0)
VPR PATIENT DATA MONITOR^^0
"BLD",8216,"KRN",19,"NM",3,0)
VPR SYNCHRONIZATION CONTEXT^^0
"BLD",8216,"KRN",19,"NM",4,0)
VPR UI CONTEXT^^0
"BLD",8216,"KRN",19,"NM","B","VPR APPLICATION PROXY",1)

"BLD",8216,"KRN",19,"NM","B","VPR PATIENT DATA MONITOR",2)

"BLD",8216,"KRN",19,"NM","B","VPR SYNCHRONIZATION CONTEXT",3)

"BLD",8216,"KRN",19,"NM","B","VPR UI CONTEXT",4)

"BLD",8216,"KRN",19.1,0)
19.1
"BLD",8216,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8216,"KRN",19.1,"NM",1,0)
VPR EXPERIMENTAL^^0
"BLD",8216,"KRN",19.1,"NM","B","VPR EXPERIMENTAL",1)

"BLD",8216,"KRN",101,0)
101
"BLD",8216,"KRN",101,"NM",0)
^9.68A^26^26
"BLD",8216,"KRN",101,"NM",1,0)
DG FIELD MONITOR^^2
"BLD",8216,"KRN",101,"NM",2,0)
DGPM MOVEMENT EVENTS^^2
"BLD",8216,"KRN",101,"NM",3,0)
GMPL EVENT^^0
"BLD",8216,"KRN",101,"NM",4,0)
GMRA ENTERED IN ERROR^^2
"BLD",8216,"KRN",101,"NM",5,0)
GMRA SIGN-OFF ON DATA^^2
"BLD",8216,"KRN",101,"NM",6,0)
GMRC EVSEND OR^^2
"BLD",8216,"KRN",101,"NM",7,0)
LR7O CH EVSEND OR^^2
"BLD",8216,"KRN",101,"NM",8,0)
OR EVSEND LRCH^^2
"BLD",8216,"KRN",101,"NM",9,0)
OR EVSEND ORG^^2
"BLD",8216,"KRN",101,"NM",10,0)
OR EVSEND PS^^2
"BLD",8216,"KRN",101,"NM",11,0)
OR EVSEND GMRC^^2
"BLD",8216,"KRN",101,"NM",12,0)
OR EVSEND RA^^2
"BLD",8216,"KRN",101,"NM",13,0)
PS EVSEND OR^^2
"BLD",8216,"KRN",101,"NM",14,0)
PXK VISIT DATA EVENT^^2
"BLD",8216,"KRN",101,"NM",15,0)
RA EVSEND OR^^2
"BLD",8216,"KRN",101,"NM",16,0)
SDAM APPOINTMENT EVENTS^^2
"BLD",8216,"KRN",101,"NM",17,0)
VPR APPT EVENTS^^0
"BLD",8216,"KRN",101,"NM",18,0)
VPR DG UPDATES^^0
"BLD",8216,"KRN",101,"NM",19,0)
VPR GMPL EVENT^^0
"BLD",8216,"KRN",101,"NM",20,0)
VPR GMRA EVENTS^^0
"BLD",8216,"KRN",101,"NM",21,0)
VPR INPT EVENTS^^0
"BLD",8216,"KRN",101,"NM",22,0)
VPR NA EVENTS^^0
"BLD",8216,"KRN",101,"NM",23,0)
VPR PCE EVENTS^^0
"BLD",8216,"KRN",101,"NM",24,0)
VPR XQOR EVENTS^^0
"BLD",8216,"KRN",101,"NM",25,0)
VPR MDC EVENT^^0
"BLD",8216,"KRN",101,"NM",26,0)
MDC OBSERVATION UPDATE^^0
"BLD",8216,"KRN",101,"NM","B","DG FIELD MONITOR",1)

"BLD",8216,"KRN",101,"NM","B","DGPM MOVEMENT EVENTS",2)

"BLD",8216,"KRN",101,"NM","B","GMPL EVENT",3)

"BLD",8216,"KRN",101,"NM","B","GMRA ENTERED IN ERROR",4)

"BLD",8216,"KRN",101,"NM","B","GMRA SIGN-OFF ON DATA",5)

"BLD",8216,"KRN",101,"NM","B","GMRC EVSEND OR",6)

"BLD",8216,"KRN",101,"NM","B","LR7O CH EVSEND OR",7)

"BLD",8216,"KRN",101,"NM","B","MDC OBSERVATION UPDATE",26)

"BLD",8216,"KRN",101,"NM","B","OR EVSEND GMRC",11)

"BLD",8216,"KRN",101,"NM","B","OR EVSEND LRCH",8)

"BLD",8216,"KRN",101,"NM","B","OR EVSEND ORG",9)

"BLD",8216,"KRN",101,"NM","B","OR EVSEND PS",10)

"BLD",8216,"KRN",101,"NM","B","OR EVSEND RA",12)

"BLD",8216,"KRN",101,"NM","B","PS EVSEND OR",13)

"BLD",8216,"KRN",101,"NM","B","PXK VISIT DATA EVENT",14)

"BLD",8216,"KRN",101,"NM","B","RA EVSEND OR",15)

"BLD",8216,"KRN",101,"NM","B","SDAM APPOINTMENT EVENTS",16)

"BLD",8216,"KRN",101,"NM","B","VPR APPT EVENTS",17)

"BLD",8216,"KRN",101,"NM","B","VPR DG UPDATES",18)

"BLD",8216,"KRN",101,"NM","B","VPR GMPL EVENT",19)

"BLD",8216,"KRN",101,"NM","B","VPR GMRA EVENTS",20)

"BLD",8216,"KRN",101,"NM","B","VPR INPT EVENTS",21)

"BLD",8216,"KRN",101,"NM","B","VPR MDC EVENT",25)

"BLD",8216,"KRN",101,"NM","B","VPR NA EVENTS",22)

"BLD",8216,"KRN",101,"NM","B","VPR PCE EVENTS",23)

"BLD",8216,"KRN",101,"NM","B","VPR XQOR EVENTS",24)

"BLD",8216,"KRN",409.61,0)
409.61
"BLD",8216,"KRN",771,0)
771
"BLD",8216,"KRN",779.2,0)
779.2
"BLD",8216,"KRN",870,0)
870
"BLD",8216,"KRN",8989.51,0)
8989.51
"BLD",8216,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",8216,"KRN",8989.51,"NM",1,0)
VPR LOCATIONS^^0
"BLD",8216,"KRN",8989.51,"NM",2,0)
VPR PARAMETERS^^0
"BLD",8216,"KRN",8989.51,"NM","B","VPR LOCATIONS",1)

"BLD",8216,"KRN",8989.51,"NM","B","VPR PARAMETERS",2)

"BLD",8216,"KRN",8989.52,0)
8989.52
"BLD",8216,"KRN",8994,0)
8994
"BLD",8216,"KRN",8994,"NM",0)
^9.68A^17^17
"BLD",8216,"KRN",8994,"NM",1,0)
VPR APPOINTMENTS^^0
"BLD",8216,"KRN",8994,"NM",2,0)
VPR DELETE ROSTER^^0
"BLD",8216,"KRN",8994,"NM",3,0)
VPR GET SOURCE^^0
"BLD",8216,"KRN",8994,"NM",4,0)
VPR INPATIENTS^^0
"BLD",8216,"KRN",8994,"NM",5,0)
VPR PREVIEW ROSTER^^0
"BLD",8216,"KRN",8994,"NM",6,0)
VPR ROSTER PATIENTS^^0
"BLD",8216,"KRN",8994,"NM",7,0)
VPR ROSTERS^^0
"BLD",8216,"KRN",8994,"NM",8,0)
VPR SUBSCRIBE^^0
"BLD",8216,"KRN",8994,"NM",9,0)
VPR UPDATE ROSTER^^0
"BLD",8216,"KRN",8994,"NM",10,0)
VPRCORD RPC^^0
"BLD",8216,"KRN",8994,"NM",11,0)
VPRCPAT RPC^^0
"BLD",8216,"KRN",8994,"NM",12,0)
VPRCRPC RPC^^0
"BLD",8216,"KRN",8994,"NM",13,0)
VPRFPTC CHKS^^0
"BLD",8216,"KRN",8994,"NM",14,0)
VPRFPTC LOG^^0
"BLD",8216,"KRN",8994,"NM",15,0)
VPR PUT PATIENT DATA^^0
"BLD",8216,"KRN",8994,"NM",16,0)
VPR GET OBJECT^^0
"BLD",8216,"KRN",8994,"NM",17,0)
VPR PUT OBJECT^^0
"BLD",8216,"KRN",8994,"NM","B","VPR APPOINTMENTS",1)

"BLD",8216,"KRN",8994,"NM","B","VPR DELETE ROSTER",2)

"BLD",8216,"KRN",8994,"NM","B","VPR GET OBJECT",16)

"BLD",8216,"KRN",8994,"NM","B","VPR GET SOURCE",3)

"BLD",8216,"KRN",8994,"NM","B","VPR INPATIENTS",4)

"BLD",8216,"KRN",8994,"NM","B","VPR PREVIEW ROSTER",5)

"BLD",8216,"KRN",8994,"NM","B","VPR PUT OBJECT",17)

"BLD",8216,"KRN",8994,"NM","B","VPR PUT PATIENT DATA",15)

"BLD",8216,"KRN",8994,"NM","B","VPR ROSTER PATIENTS",6)

"BLD",8216,"KRN",8994,"NM","B","VPR ROSTERS",7)

"BLD",8216,"KRN",8994,"NM","B","VPR SUBSCRIBE",8)

"BLD",8216,"KRN",8994,"NM","B","VPR UPDATE ROSTER",9)

"BLD",8216,"KRN",8994,"NM","B","VPRCORD RPC",10)

"BLD",8216,"KRN",8994,"NM","B","VPRCPAT RPC",11)

"BLD",8216,"KRN",8994,"NM","B","VPRCRPC RPC",12)

"BLD",8216,"KRN",8994,"NM","B","VPRFPTC CHKS",13)

"BLD",8216,"KRN",8994,"NM","B","VPRFPTC LOG",14)

"BLD",8216,"KRN","B",.4,.4)

"BLD",8216,"KRN","B",.401,.401)

"BLD",8216,"KRN","B",.402,.402)

"BLD",8216,"KRN","B",.403,.403)

"BLD",8216,"KRN","B",.5,.5)

"BLD",8216,"KRN","B",.84,.84)

"BLD",8216,"KRN","B",3.6,3.6)

"BLD",8216,"KRN","B",3.8,3.8)

"BLD",8216,"KRN","B",9.2,9.2)

"BLD",8216,"KRN","B",9.8,9.8)

"BLD",8216,"KRN","B",19,19)

"BLD",8216,"KRN","B",19.1,19.1)

"BLD",8216,"KRN","B",101,101)

"BLD",8216,"KRN","B",409.61,409.61)

"BLD",8216,"KRN","B",771,771)

"BLD",8216,"KRN","B",779.2,779.2)

"BLD",8216,"KRN","B",870,870)

"BLD",8216,"KRN","B",8989.51,8989.51)

"BLD",8216,"KRN","B",8989.52,8989.52)

"BLD",8216,"KRN","B",8994,8994)

"BLD",8216,"PRE")
VPRPRODC
"BLD",8216,"QUES",0)
^9.62^^
"BLD",8216,"REQB",0)
^9.611^2^2
"BLD",8216,"REQB",1,0)
VPR*1.0*2^2
"BLD",8216,"REQB",2,0)
SD*5.3*575^2
"BLD",8216,"REQB","B","SD*5.3*575",2)

"BLD",8216,"REQB","B","VPR*1.0*2",1)

"FIA",560)
VPR SUBSCRIPTION
"FIA",560,0)
^VPR(560,
"FIA",560,0,0)
560
"FIA",560,0,1)
y^y^f^^^^n
"FIA",560,0,10)

"FIA",560,0,11)

"FIA",560,0,"RLRO")

"FIA",560,0,"VR")
1.0^VPR
"FIA",560,560)
0
"FIA",560,560.01)
0
"FIA",560,560.03)
0
"FIA",560,560.031)
0
"FIA",560,560.04)
0
"FIA",560,560.041)
0
"FIA",560.1)
VPR PATIENT OBJECT
"FIA",560.1,0)
^VPR(560.1,
"FIA",560.1,0,0)
560.1
"FIA",560.1,0,1)
y^y^f^^^^n
"FIA",560.1,0,10)

"FIA",560.1,0,11)

"FIA",560.1,0,"RLRO")

"FIA",560.1,0,"VR")
1.0^VPR
"FIA",560.1,560.1)
0
"FIA",560.1,560.101)
0
"FIA",560.11)
VPR OBJECT
"FIA",560.11,0)
^VPR(560.11,
"FIA",560.11,0,0)
560.11
"FIA",560.11,0,1)
y^y^f^^^^n
"FIA",560.11,0,10)

"FIA",560.11,0,11)

"FIA",560.11,0,"RLRO")

"FIA",560.11,0,"VR")
1.0^VPR
"FIA",560.11,560.11)
0
"FIA",560.11,560.111)
0
"FIA",561)
VPR PANEL
"FIA",561,0)
^VPRPANEL(
"FIA",561,0,0)
561P
"FIA",561,0,1)
y^y^f^^^^n
"FIA",561,0,10)

"FIA",561,0,11)

"FIA",561,0,"RLRO")

"FIA",561,0,"VR")
1.0^VPR
"FIA",561,561)
0
"FIA",561,561.05)
0
"FIA",561.2)
VPROSTER
"FIA",561.2,0)
^VPROSTER(
"FIA",561.2,0,0)
561.2
"FIA",561.2,0,1)
y^y^f^^^^n
"FIA",561.2,0,10)

"FIA",561.2,0,11)

"FIA",561.2,0,"RLRO")

"FIA",561.2,0,"VR")
1.0^VPR
"FIA",561.2,561.2)
0
"FIA",561.2,561.21)
0
"INI")
PRE^VPRP3I
"INIT")
POST^VPRP3I
"IX",560,560,"ADFN",0)
560^ADFN^Patients to track in the Data Monitor^MU^^R^IR^W^560.01^^^^^S
"IX",560,560,"ADFN",1)
S:X2(2) ^VPR(560,"ADFN",X,DA(1))=""
"IX",560,560,"ADFN",2)
K:X1(2) ^VPR(560,"ADFN",X,DA(1))
"IX",560,560,"ADFN",2.5)
K ^VPR(560,"ADFN")
"IX",560,560,"ADFN",11.1,0)
^.114IA^2^2
"IX",560,560,"ADFN",11.1,1,0)
1^F^560.01^.01^^1^F
"IX",560,560,"ADFN",11.1,2,0)
2^F^560.01^2^^^
"IX",560.1,560.1,"C",0)
560.1^C^Index by patient, collection^R^^R^IR^I^560.1^^^^^LS
"IX",560.1,560.1,"C",1)
S ^VPR(560.1,"C",X(1),X(2),DA)=""
"IX",560.1,560.1,"C",2)
K ^VPR(560.1,"C",X(1),X(2),DA)
"IX",560.1,560.1,"C",2.5)
K ^VPR(560.1,"C")
"IX",560.1,560.1,"C",11.1,0)
^.114IA^2^2
"IX",560.1,560.1,"C",11.1,1,0)
1^F^560.1^.02^^1^F
"IX",560.1,560.1,"C",11.1,1,3)

"IX",560.1,560.1,"C",11.1,2,0)
2^F^560.1^.03^^2^F
"IX",560.1,560.1,"C",11.1,2,3)

"IX",561.2,561.21,"AC",0)
561.21^AC^SORT BY SEQUENCE^R^^F^IR^I^561.21^^^^^S
"IX",561.2,561.21,"AC",1)
Q
"IX",561.2,561.21,"AC",2)
Q
"KRN",19,13997,-1)
0^2
"KRN",19,13997,0)
VPR PATIENT DATA MONITOR^VPR Patient Data Monitor^^A^^^^^^^^VIRTUAL PATIENT RECORD^^1
"KRN",19,13997,1,0)
^^4^4^3110406^
"KRN",19,13997,1,1,0)
This option manages the VPR Patient Data Monitor background job.  It 
"KRN",19,13997,1,2,0)
first checks to see if the job is already running, and will prompt to
"KRN",19,13997,1,3,0)
start it if not.  It may also stop the job if running, but the AViVA
"KRN",19,13997,1,4,0)
client may not display up-to-date data until it is started up again.
"KRN",19,13997,20)
D EN^VPRHTTP
"KRN",19,13997,"U")
VPR PATIENT DATA MONITOR
"KRN",19,13998,-1)
0^3
"KRN",19,13998,0)
VPR SYNCHRONIZATION CONTEXT^Synchronize the VPR^^B^^^^^^^^
"KRN",19,13998,99.1)
62494,61753
"KRN",19,13998,"RPC",0)
^19.05P^5^5
"KRN",19,13998,"RPC",1,0)
NHIN GET VISTA DATA
"KRN",19,13998,"RPC",2,0)
VPR DATA VERSION
"KRN",19,13998,"RPC",3,0)
VPR GET PATIENT DATA
"KRN",19,13998,"RPC",4,0)
VPR SUBSCRIBE
"KRN",19,13998,"RPC",5,0)
VPR GET PATIENT DATA JSON
"KRN",19,13998,"U")
SYNCHRONIZE THE VPR
"KRN",19,13999,-1)
0^1
"KRN",19,13999,0)
VPR APPLICATION PROXY^VPR Application Proxy^^B^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,13999,1,0)
^19.06^1^1^3110602^^^^
"KRN",19,13999,1,1,0)
This option allows the VPR connector proxy access to the VistA system.
"KRN",19,13999,99.1)
62495,59675
"KRN",19,13999,"RPC",0)
^19.05P^4^4
"KRN",19,13999,"RPC",2,0)
VPR GET PATIENT DATA
"KRN",19,13999,"RPC",3,0)
VPR DATA VERSION
"KRN",19,13999,"RPC",4,0)
VPR SUBSCRIBE
"KRN",19,13999,"U")
VPR APPLICATION PROXY
"KRN",19,14005,-1)
0^4
"KRN",19,14005,0)
VPR UI CONTEXT^VPR UI CONTEXT version 0.7-P34^^B^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14005,1,0)
^19.06^1^1^3121206^^^^
"KRN",19,14005,1,1,0)
This option allows the VPR UI access to the VistA system.
"KRN",19,14005,99.1)
62500,30500
"KRN",19,14005,"RPC",0)
^19.05P^20^18
"KRN",19,14005,"RPC",1,0)
VPRCORD RPC
"KRN",19,14005,"RPC",2,0)
VPRCPAT RPC
"KRN",19,14005,"RPC",3,0)
VPRFPTC CHKS
"KRN",19,14005,"RPC",4,0)
VPRFPTC LOG
"KRN",19,14005,"RPC",5,0)
VPR APPOINTMENTS
"KRN",19,14005,"RPC",6,0)
VPR DATA VERSION
"KRN",19,14005,"RPC",7,0)
VPR DELETE ROSTER
"KRN",19,14005,"RPC",8,0)
VPR GET PATIENT DATA
"KRN",19,14005,"RPC",9,0)
VPR GET SOURCE
"KRN",19,14005,"RPC",10,0)
VPR INPATIENTS
"KRN",19,14005,"RPC",11,0)
VPR PREVIEW ROSTER
"KRN",19,14005,"RPC",12,0)
VPR ROSTER PATIENTS
"KRN",19,14005,"RPC",13,0)
VPR ROSTERS
"KRN",19,14005,"RPC",14,0)
VPR SUBSCRIBE
"KRN",19,14005,"RPC",15,0)
VPR UPDATE ROSTER
"KRN",19,14005,"RPC",16,0)
VPRCRPC RPC
"KRN",19,14005,"RPC",19,0)
XHD GET PARAMETER DEF LIST
"KRN",19,14005,"RPC",20,0)
VPR PUT PATIENT DATA
"KRN",19,14005,"U")
VPR UI CONTEXT VERSION 0.7-P34
"KRN",19.1,646,-1)
0^1
"KRN",19.1,646,0)
VPR EXPERIMENTAL
"KRN",101,1240,-1)
2^2
"KRN",101,1240,0)
DGPM MOVEMENT EVENTS^MOVEMENT EVENTS v 5.0^^X^1135^^^^^^^114
"KRN",101,1240,10,0)
^101.01PA^38^38
"KRN",101,1240,10,38,0)
5869^^^
"KRN",101,1240,10,38,"^")
VPR INPT EVENTS
"KRN",101,1302,-1)
2^16
"KRN",101,1302,0)
SDAM APPOINTMENT EVENTS^Appointment Event Driver^^X^1135^^^^^^^16
"KRN",101,1302,10,0)
^101.01PA^20^20
"KRN",101,1302,10,20,0)
5870^^^
"KRN",101,1302,10,20,"^")
VPR APPT EVENTS
"KRN",101,2690,-1)
2^15
"KRN",101,2690,0)
RA EVSEND OR^Radiology event sent to OE/RR^^X^1135^^^^^^^31
"KRN",101,2690,10,0)
^101.01PA^4^4
"KRN",101,2690,10,4,0)
5872^^^
"KRN",101,2690,10,4,"^")
VPR XQOR EVENTS
"KRN",101,2700,-1)
2^14
"KRN",101,2700,0)
PXK VISIT DATA EVENT^VISIT RELATED DATA^^X^1135^^^^^^^
"KRN",101,2700,10,0)
^101.01PA^6^6
"KRN",101,2700,10,6,0)
5871^^^
"KRN",101,2700,10,6,"^")
VPR PCE EVENTS
"KRN",101,2894,-1)
2^5
"KRN",101,2894,0)
GMRA SIGN-OFF ON DATA^Sign-off on Reaction Data^^X^1135^^^^^^^247
"KRN",101,2894,10,0)
^101.01PA^2^2
"KRN",101,2894,10,2,0)
5873^^^
"KRN",101,2894,10,2,"^")
VPR GMRA EVENTS
"KRN",101,2896,-1)
2^4
"KRN",101,2896,0)
GMRA ENTERED IN ERROR^Reaction Data Entered in Error^^X^1135^^^^^^^247
"KRN",101,2896,10,0)
^101.01PA^2^2
"KRN",101,2896,10,2,0)
5873^^^
"KRN",101,2896,10,2,"^")
VPR GMRA EVENTS
"KRN",101,3336,-1)
2^7
"KRN",101,3336,0)
LR7O CH EVSEND OR^LAB => OE/RR ORDER MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3336,10,0)
^101.01PA^4^4
"KRN",101,3336,10,4,0)
5872^^^
"KRN",101,3336,10,4,"^")
VPR XQOR EVENTS
"KRN",101,3373,-1)
2^13
"KRN",101,3373,0)
PS EVSEND OR^Send Pharmacy orders to CPRS.^^X^1135^^^^^^^18
"KRN",101,3373,10,0)
^101.01PA^6^6
"KRN",101,3373,10,6,0)
5872^^^
"KRN",101,3373,10,6,"^")
VPR XQOR EVENTS
"KRN",101,3392,-1)
2^6
"KRN",101,3392,0)
GMRC EVSEND OR^Consults event sent to OE/RR^^X^1135^^^^^^^294
"KRN",101,3392,10,0)
^101.01PA^6^6
"KRN",101,3392,10,6,0)
5872^^^
"KRN",101,3392,10,6,"^")
VPR XQOR EVENTS
"KRN",101,3529,-1)
2^12
"KRN",101,3529,0)
OR EVSEND RA^OE/RR => RAD/NM MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3529,10,0)
^101.01PA^4^4
"KRN",101,3529,10,4,0)
5874^^^
"KRN",101,3529,10,4,"^")
VPR NA EVENTS
"KRN",101,3530,-1)
2^8
"KRN",101,3530,0)
OR EVSEND LRCH^OE/RR => LAB MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3530,10,0)
^101.01PA^4^4
"KRN",101,3530,10,4,0)
5874^^^
"KRN",101,3530,10,4,"^")
VPR NA EVENTS
"KRN",101,3536,-1)
2^9
"KRN",101,3536,0)
OR EVSEND ORG^OE/RR => GENERIC MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3536,10,0)
^101.01PA^4^4
"KRN",101,3536,10,4,0)
5872^^^
"KRN",101,3536,10,4,"^")
VPR XQOR EVENTS
"KRN",101,3537,-1)
2^10
"KRN",101,3537,0)
OR EVSEND PS^OE/RR => PHARMACY MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3537,10,0)
^101.01PA^4^4
"KRN",101,3537,10,4,0)
5874^^^
"KRN",101,3537,10,4,"^")
VPR NA EVENTS
"KRN",101,3539,-1)
2^11
"KRN",101,3539,0)
OR EVSEND GMRC^OE/RR => CONSULTS MESSAGE EVENT^^X^1135^^^^^^^
"KRN",101,3539,10,0)
^101.01PA^6^6
"KRN",101,3539,10,6,0)
5874^^^
"KRN",101,3539,10,6,"^")
VPR NA EVENTS
"KRN",101,4717,-1)
2^1
"KRN",101,4717,0)
DG FIELD MONITOR^DG Field Monitor^^X^1135^^^^^^^114
"KRN",101,4717,10,0)
^101.01PA^5^5
"KRN",101,4717,10,5,0)
5868^^^
"KRN",101,4717,10,5,"^")
VPR DG UPDATES
"KRN",101,5868,-1)
0^18
"KRN",101,5868,0)
VPR DG UPDATES^DG updates for VPR^^A^^^^^^^^
"KRN",101,5868,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,5868,1,1,0)
This protocol will track Patient file changes for VPR.
"KRN",101,5868,20)
D DG^VPREVNT
"KRN",101,5868,99)
62546,68470
"KRN",101,5869,-1)
0^21
"KRN",101,5869,0)
VPR INPT EVENTS^Inpatient Movement events for VPR^^A^^^^^^^^
"KRN",101,5869,1,0)
^101.06^1^1^3101202^^^^
"KRN",101,5869,1,1,0)
This protocol will track patient admissions and discharges for VPR.
"KRN",101,5869,20)
D DGPM^VPREVNT
"KRN",101,5869,99)
62546,68470
"KRN",101,5870,-1)
0^17
"KRN",101,5870,0)
VPR APPT EVENTS^Appointment events for VPR^^A^^^^^^^^
"KRN",101,5870,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,5870,1,1,0)
This protocol will track appointments for VPR.
"KRN",101,5870,20)
D SDAM^VPREVNT
"KRN",101,5870,99)
62546,68470
"KRN",101,5871,-1)
0^23
"KRN",101,5871,0)
VPR PCE EVENTS^PCE events for VPR^^A^^^^^^^^
"KRN",101,5871,1,0)
^101.06^1^1^3101129^^^
"KRN",101,5871,1,1,0)
This protocol will track PCE visit data for VPR.
"KRN",101,5871,20)
D PCE^VPREVNT
"KRN",101,5871,99)
62546,68470
"KRN",101,5872,-1)
0^24
"KRN",101,5872,0)
VPR XQOR EVENTS^XQOR HL7 events for VPR^^A^^^^^^^^
"KRN",101,5872,1,0)
^101.06^3^3^3101129^^
"KRN",101,5872,1,1,0)
This protocol monitors order events for VPR.  It is placed on the 
"KRN",101,5872,1,2,0)
* EVSEND OR protocols to check for updates being sent from ancillary
"KRN",101,5872,1,3,0)
packages to Order Entry; it monitors when orders are completed.
"KRN",101,5872,20)
D XQOR^VPREVNT(.XQORMSG)
"KRN",101,5872,99)
62546,68470
"KRN",101,5873,-1)
0^20
"KRN",101,5873,0)
VPR GMRA EVENTS^Allergy Events for VPR^^A^^^^^^^^
"KRN",101,5873,1,0)
^^1^1^3101202^
"KRN",101,5873,1,1,0)
This protocol will track Allergy data updates for VPR.
"KRN",101,5873,20)
D GMRA^VPREVNT
"KRN",101,5873,99)
62546,68470
"KRN",101,5874,-1)
0^22
"KRN",101,5874,0)
VPR NA EVENTS^XQOR HL7 events for VPR^^A^^^^^^^^
"KRN",101,5874,1,0)
^101.06^3^3^3110818^^^
"KRN",101,5874,1,1,0)
This protocol monitors order events for VPR.  It is placed on the 
"KRN",101,5874,1,2,0)
OR EVSEND * protocols to check for order numbers assigned to new orders
"KRN",101,5874,1,3,0)
placed from the ancillary packages.
"KRN",101,5874,20)
D NA^VPREVNT(.XQORMSG)
"KRN",101,5874,99)
62546,68470
"KRN",101,5875,-1)
0^3
"KRN",101,5875,0)
GMPL EVENT^Problem List Update Event^^X^^^^^^^^PROBLEM LIST
"KRN",101,5875,1,0)
^101.06^7^7^3110823^^
"KRN",101,5875,1,1,0)
This protocol will be invoked whenever a problem is added or modified
"KRN",101,5875,1,2,0)
via Problem List options or RPC's.  It is triggered by setting the
"KRN",101,5875,1,3,0)
Date Last Modified field #.03 of the Problem file #9000011, in the
"KRN",101,5875,1,4,0)
DTMOD^GMPLX function.  The following variables will be available to
"KRN",101,5875,1,5,0)
read and use, but do NOT kill:
"KRN",101,5875,1,6,0)
  DFN    = Patient ien, file #2
"KRN",101,5875,1,7,0)
  GMPIFN = Problem ien, file #9000011
"KRN",101,5875,10,0)
^101.01PA^1^1
"KRN",101,5875,10,1,0)
5876^^^
"KRN",101,5875,10,1,"^")
VPR GMPL EVENT
"KRN",101,5875,99)
62546,68470
"KRN",101,5876,-1)
0^19
"KRN",101,5876,0)
VPR GMPL EVENT^Problem List events for VPR^^A^^^^^^^^
"KRN",101,5876,1,0)
^101.06^1^1^3110823^^^^
"KRN",101,5876,1,1,0)
This protocol will track new and updated problems for VPR.
"KRN",101,5876,20)
D GMPL^VPREVNT(DFN,GMPIFN)
"KRN",101,5876,99)
62546,68470
"KRN",101,5901,-1)
0^26
"KRN",101,5901,0)
MDC OBSERVATION UPDATE^Observation update notification^^X^^^^^^^^CLINICAL PROCEDURES
"KRN",101,5901,1,0)
^^16^16^3120830^
"KRN",101,5901,1,1,0)
This protocol will be triggered when an observation in the OBS file 
"KRN",101,5901,1,2,0)
enters or leaves VERIFIED status.
"KRN",101,5901,1,3,0)
 
"KRN",101,5901,1,4,0)
The local array "MDCOBS" will be populated as follows:
"KRN",101,5901,1,5,0)
 
"KRN",101,5901,1,6,0)
MDCOBS("OBS_ID","E")="{35627230-5C66-49E3-AD93-97C269CB257D}"
"KRN",101,5901,1,7,0)
MDCOBS("OBS_ID","I")="{35627230-5C66-49E3-AD93-97C269CB257D}"
"KRN",101,5901,1,8,0)
MDCOBS("OLD_STATUS","E")="Verified"
"KRN",101,5901,1,9,0)
MDCOBS("OLD_STATUS","I")=1
"KRN",101,5901,1,10,0)
MDCOBS("PATIENT_ID","E")="SIMPSON,BARTHOLOMUE"
"KRN",101,5901,1,11,0)
MDCOBS("PATIENT_ID","I")=2
"KRN",101,5901,1,12,0)
MDCOBS("STATUS","E")="Unverified"
"KRN",101,5901,1,13,0)
MDCOBS("STATUS","I")=0
"KRN",101,5901,1,14,0)
 
"KRN",101,5901,1,15,0)
In case of an error, MDCOBS("ERROR") will be populated with the error 
"KRN",101,5901,1,16,0)
number and error text from FileMan.
"KRN",101,5901,5)

"KRN",101,5901,10,0)
^101.01PA^2^1
"KRN",101,5901,10,2,0)
5902^^^
"KRN",101,5901,10,2,"^")
VPR MDC EVENT
"KRN",101,5901,20)
D EN^MDCPROTD
"KRN",101,5901,99)
62782,45615
"KRN",101,5901,775,0)
^101.0775PA^^
"KRN",101,5902,-1)
0^25
"KRN",101,5902,0)
VPR MDC EVENT^CLiO events for VPR^^A^^^^^^^^
"KRN",101,5902,1,0)
^101.06^1^1^3120830^^^^
"KRN",101,5902,1,1,0)
This protocol will track new and updated observations for VPR.
"KRN",101,5902,20)
D MDC^VPREVNT(.MDCOBS)
"KRN",101,5902,99)
62782,45615
"KRN",8989.51,652,-1)
0^1
"KRN",8989.51,652,0)
VPR LOCATIONS^VPR Locations^1^Clinic^Syncronized
"KRN",8989.51,652,1)
Y
"KRN",8989.51,652,6)
P^44^Enter clinic to synch with VPR
"KRN",8989.51,652,30,0)
^8989.513I^1^1
"KRN",8989.51,652,30,1,0)
5^4
"KRN",8989.51,656,-1)
0^2
"KRN",8989.51,656,0)
VPR PARAMETERS^VPR SYSTEM PARAMETERS^1^System Parameters^System Parameters Name
"KRN",8989.51,656,1)
W
"KRN",8989.51,656,6)
F
"KRN",8989.51,656,20,0)
^8989.512^2^2^3120125^^^
"KRN",8989.51,656,20,1,0)
This parameter stores a list of parameters used by the VPR middle teir 
"KRN",8989.51,656,20,2,0)
and the VPR UI.
"KRN",8989.51,656,30,0)
^8989.513I^2^2
"KRN",8989.51,656,30,1,0)
6^4.2
"KRN",8989.51,656,30,2,0)
1^200
"KRN",8994,839,-1)
0^8
"KRN",8994,839,0)
VPR SUBSCRIBE^SUBS^VPRPATS^4^S^^^1^^^1
"KRN",8994,839,1,0)
^8994.01^3^3^3110407^^^^
"KRN",8994,839,1,1,0)
This RPC will maintain a list of patients & events to monitor for new data.
"KRN",8994,839,1,2,0)
The LIST of patients passed into this RPC is returned in ^TMP($J,"VPR",n)
"KRN",8994,839,1,3,0)
as XML, with a subscription status of 'on', 'off', or 'error'.
"KRN",8994,839,2,0)
^8994.02A^3^3
"KRN",8994,839,2,1,0)
URL^1^^0^1
"KRN",8994,839,2,1,1,0)
^8994.021^2^2^3110406^^^^
"KRN",8994,839,2,1,1,1,0)
This string is the url that will be called to notify the client that new 
"KRN",8994,839,2,1,1,2,0)
data is available for the listed patients.
"KRN",8994,839,2,2,0)
LIST^2^^0^3
"KRN",8994,839,2,2,1,0)
^8994.021^2^2^3110310^^^
"KRN",8994,839,2,2,1,1,0)
This is the list of patient identifiers, in the form 'dfn;icn', that
"KRN",8994,839,2,2,1,2,0)
are to be either added to or removed from the monitor.
"KRN",8994,839,2,3,0)
STS^1^^0^2
"KRN",8994,839,2,3,1,0)
^^2^2^3110310^
"KRN",8994,839,2,3,1,1,0)
This is a boolean value, 1 or 0, indicating if the patient should be
"KRN",8994,839,2,3,1,2,0)
added to or removed from the data monitor.
"KRN",8994,839,2,"B","LIST",2)

"KRN",8994,839,2,"B","STS",3)

"KRN",8994,839,2,"B","URL",1)

"KRN",8994,839,2,"PARAMSEQ",1,1)

"KRN",8994,839,2,"PARAMSEQ",2,3)

"KRN",8994,839,2,"PARAMSEQ",3,2)

"KRN",8994,839,3,0)
^8994.03^1^1^3110310^^^^
"KRN",8994,839,3,1,0)
Text array formatted as XML.
"KRN",8994,846,-1)
0^1
"KRN",8994,846,0)
VPR APPOINTMENTS^OUT^VPRPATS^4^S^^^1^^^1
"KRN",8994,846,1,0)
^8994.01^2^2^3101129^^
"KRN",8994,846,1,1,0)
This RPC finds a list of patients that have scheduled appointments during
"KRN",8994,846,1,2,0)
the requested timeframe, as XML in ^TMP($J,"VPR",n).
"KRN",8994,846,2,0)
^8994.02A^2^2
"KRN",8994,846,2,1,0)
START^1^20^0^1
"KRN",8994,846,2,1,1,0)
^8994.021^2^2^3101129^^^
"KRN",8994,846,2,1,1,1,0)
The date/time from which to begin searching for appointments; optional,
"KRN",8994,846,2,1,1,2,0)
will default to tomorrow if not defined.
"KRN",8994,846,2,2,0)
STOP^1^20^0^2
"KRN",8994,846,2,2,1,0)
^8994.021^2^2^3101129^^
"KRN",8994,846,2,2,1,1,0)
The date/time at which to end searching for appointments; optional,
"KRN",8994,846,2,2,1,2,0)
will default to tomorrow if not defined.
"KRN",8994,846,2,"B","START",1)

"KRN",8994,846,2,"B","STOP",2)

"KRN",8994,846,2,"PARAMSEQ",1,1)

"KRN",8994,846,2,"PARAMSEQ",2,2)

"KRN",8994,846,3,0)
^8994.03^1^1^3101129^^
"KRN",8994,846,3,1,0)
Text array formatted XML
"KRN",8994,848,-1)
0^4
"KRN",8994,848,0)
VPR INPATIENTS^IN^VPRPATS^4^S^^^1^^^1
"KRN",8994,848,1,0)
^8994.01^2^2^3101129^^^
"KRN",8994,848,1,1,0)
This RPC finds a list of patients that are currently admitted,
"KRN",8994,848,1,2,0)
as XML in ^TMP($J,"VPR",n).
"KRN",8994,848,2,0)
^8994.02A^^0
"KRN",8994,848,3,0)
^8994.03^1^1^3101129^^^
"KRN",8994,848,3,1,0)
Text array formatted XML
"KRN",8994,1345,-1)
0^10
"KRN",8994,1345,0)
VPRCORD RPC^RPC^VPRCORD^4
"KRN",8994,1345,2,0)
^8994.02A^1^1
"KRN",8994,1345,2,1,0)
PARAMS^2^^1^1
"KRN",8994,1345,2,"B","PARAMS",1)

"KRN",8994,1345,2,"PARAMSEQ",1,1)

"KRN",8994,1346,-1)
0^11
"KRN",8994,1346,0)
VPRCPAT RPC^RPC^VPRCPAT^4
"KRN",8994,1346,2,0)
^8994.02A^1^1
"KRN",8994,1346,2,1,0)
PARAMS^2^^1^1
"KRN",8994,1346,2,"B","PARAMS",1)

"KRN",8994,1346,2,"PARAMSEQ",1,1)

"KRN",8994,1347,-1)
0^6
"KRN",8994,1347,0)
VPR ROSTER PATIENTS^COMPILE^VPRROS2^4^P^^^1^1^^1
"KRN",8994,1347,1,0)
^8994.01^1^1^3120105^^^^
"KRN",8994,1347,1,1,0)
Provides patients associated with requested Roster.
"KRN",8994,1347,2,0)
^8994.02A^2^2
"KRN",8994,1347,2,1,0)
ROSTER^1^15^0^1
"KRN",8994,1347,2,1,1,0)
^8994.021^1^1^3120105^^^^
"KRN",8994,1347,2,1,1,1,0)
IEN of Roster you are requesting patients for.
"KRN",8994,1347,2,2,0)
OWNER^1^15^0^2
"KRN",8994,1347,2,2,1,0)
^^1^1^3120105^
"KRN",8994,1347,2,2,1,1,0)
Compile all rosters for this owner.
"KRN",8994,1347,2,"B","OWNER",2)

"KRN",8994,1347,2,"B","ROSTER",1)

"KRN",8994,1347,2,"PARAMSEQ",1,1)

"KRN",8994,1347,2,"PARAMSEQ",2,2)

"KRN",8994,1347,3,0)
^8994.03^1^1^3120105^^^^
"KRN",8994,1347,3,1,0)
Text array formated XML.
"KRN",8994,1350,-1)
0^7
"KRN",8994,1350,0)
VPR ROSTERS^GETROS^VPRROS2^4^P^^^1^1^^1
"KRN",8994,1350,1,0)
^8994.01^1^1^3111110^^^^
"KRN",8994,1350,1,1,0)
Creates XML list of all Rosters.
"KRN",8994,1350,2,0)
^8994.02A^1^1
"KRN",8994,1350,2,1,0)
VPRFILT^1^30^0^1
"KRN",8994,1350,2,1,1,0)
^8994.021^1^1^3111110^^
"KRN",8994,1350,2,1,1,1,0)
Filter rosters if filter not null.
"KRN",8994,1350,2,"B","VPRFILT",1)

"KRN",8994,1350,2,"PARAMSEQ",1,1)

"KRN",8994,1350,3,0)
^8994.03^1^1^3111110^^^^
"KRN",8994,1350,3,1,0)
Text array formatted in XML.
"KRN",8994,1351,-1)
0^5
"KRN",8994,1351,0)
VPR PREVIEW ROSTER^PREVIEW^VPRROS3^4^P^^^1^1^^1
"KRN",8994,1351,1,0)
^8994.01^1^1^3120131^^^^
"KRN",8994,1351,1,1,0)
Compiles Roster based on data passed from GUI Interface.
"KRN",8994,1351,2,0)
^8994.02A^1^1
"KRN",8994,1351,2,1,0)
VPRARRAY^2^32000^1^1
"KRN",8994,1351,2,1,1,0)
^8994.021^1^1^3111022^^^^
"KRN",8994,1351,2,1,1,1,0)
Roster data from GUI.
"KRN",8994,1351,2,"B","VPRARRAY",1)

"KRN",8994,1351,2,"PARAMSEQ",1,1)

"KRN",8994,1351,3,0)
^8994.03^1^1^3111022^^^^
"KRN",8994,1351,3,1,0)
XML formatted Roster.
"KRN",8994,1352,-1)
0^9
"KRN",8994,1352,0)
VPR UPDATE ROSTER^UPDATE^VPRROS3^4^P^^^1^1^^1
"KRN",8994,1352,1,0)
^8994.01^1^1^3111031^^
"KRN",8994,1352,1,1,0)
Udates roster data editted by GUI into VistA.
"KRN",8994,1352,2,0)
^8994.02A^1^1
"KRN",8994,1352,2,1,0)
VPRARRAY^2^32000^1^1
"KRN",8994,1352,2,"B","VPRARRAY",1)

"KRN",8994,1352,2,"PARAMSEQ",1,1)

"KRN",8994,1360,-1)
0^3
"KRN",8994,1360,0)
VPR GET SOURCE^GETSRC^VPRROS4^4^P^^^1^1^^1
"KRN",8994,1360,1,0)
^8994.01^2^2^3111101^^
"KRN",8994,1360,1,1,0)
Get all source information for requested source.  For example, Request is for Clinics.  Transmit all active clinics
"KRN",8994,1360,1,2,0)
include name and ien.
"KRN",8994,1360,2,0)
^8994.02A^2^2
"KRN",8994,1360,2,1,0)
VPRSRC^1^30^1^1
"KRN",8994,1360,2,1,1,0)
^^1^1^3111031^
"KRN",8994,1360,2,1,1,1,0)
Identifies which source information to send to the GUI.
"KRN",8994,1360,2,2,0)
VPRFILT^1^30^0^2
"KRN",8994,1360,2,2,1,0)
^8994.021^1^1^3111103^^
"KRN",8994,1360,2,2,1,1,0)
Text identifying what you are looking for.  Will be used when matching for details.
"KRN",8994,1360,2,"B","VPRFILT",2)

"KRN",8994,1360,2,"B","VPRSRC",1)

"KRN",8994,1360,2,"PARAMSEQ",1,1)

"KRN",8994,1360,2,"PARAMSEQ",2,2)

"KRN",8994,1360,3,0)
^8994.03^1^1^3111101^^
"KRN",8994,1360,3,1,0)
An array containing names and ien's of source data.
"KRN",8994,1464,-1)
0^13
"KRN",8994,1464,0)
VPRFPTC CHKS^CHKS^VPRFPTC^3^^^^0
"KRN",8994,1464,1,0)
^8994.01^2^2^3111129^^
"KRN",8994,1464,1,1,0)
This RPC returns the patient selection checks for a sensitive patient, 
"KRN",8994,1464,1,2,0)
deceased, and PRF.
"KRN",8994,1464,2,0)
^8994.02A^1^1
"KRN",8994,1464,2,1,0)
ICN^1^^1^1
"KRN",8994,1464,2,1,1,0)
^^1^1^3111129^
"KRN",8994,1464,2,1,1,1,0)
This is the patient ICN
"KRN",8994,1464,2,"B","ICN",1)

"KRN",8994,1464,2,"PARAMSEQ",1,1)

"KRN",8994,1466,-1)
0^12
"KRN",8994,1466,0)
VPRCRPC RPC^RPC^VPRCRPC^3^^^^0
"KRN",8994,1466,1,0)
^8994.01^2^2^3120515^^
"KRN",8994,1466,1,1,0)
This RPC is used to save and get data to/from the VPR PARAMETERS in the 
"KRN",8994,1466,1,2,0)
parameter file.
"KRN",8994,1466,2,0)
^8994.02A^1^1
"KRN",8994,1466,2,1,0)
PARAMS^2^^1^1
"KRN",8994,1466,2,"B","PARAMS",1)

"KRN",8994,1466,2,"PARAMSEQ",1,1)

"KRN",8994,1467,-1)
0^14
"KRN",8994,1467,0)
VPRFPTC LOG^LOG^VPRFPTC^3^^^^0
"KRN",8994,1467,1,0)
^8994.01^2^2^3120124^
"KRN",8994,1467,1,1,0)
This RPC is used to log a patient when a provider is accessing a 
"KRN",8994,1467,1,2,0)
sensitive record.
"KRN",8994,1467,2,0)
^8994.02A^1^1
"KRN",8994,1467,2,1,0)
ICN^1^^1^1
"KRN",8994,1467,2,"B","ICN",1)

"KRN",8994,1467,2,"PARAMSEQ",1,1)

"KRN",8994,1468,-1)
0^2
"KRN",8994,1468,0)
VPR DELETE ROSTER^DELROS^VPRROS3^1^^^^^1.2
"KRN",8994,1468,2,0)
^8994.02A^1^1
"KRN",8994,1468,2,1,0)
VPRIEN^1^100^1^1
"KRN",8994,1468,2,1,1,0)
^^1^1^3120127^
"KRN",8994,1468,2,1,1,1,0)
Roster IEN.
"KRN",8994,1468,2,"B","VPRIEN",1)

"KRN",8994,1468,2,"PARAMSEQ",1,1)

"KRN",8994,1713,-1)
0^15
"KRN",8994,1713,0)
VPR PUT PATIENT DATA^PUT^VPRDJ1^1^S^^^1^1^^1
"KRN",8994,1713,1,0)
^8994.01^2^2^3121129^^^^
"KRN",8994,1713,1,1,0)
This RPC receives data from the client and saves it in the VPR Patient
"KRN",8994,1713,1,2,0)
Object file #560.1 as JSON.
"KRN",8994,1713,2,0)
^8994.02A^3^3
"KRN",8994,1713,2,1,0)
DFN^1^20^1^1
"KRN",8994,1713,2,1,1,0)
^8994.021^2^2^3121010^^^
"KRN",8994,1713,2,1,1,1,0)
Internal entry number from Patient file #2
"KRN",8994,1713,2,1,1,2,0)
[optionally DFN;ICN for remote calls]
"KRN",8994,1713,2,2,0)
TYPE^1^100^0^2
"KRN",8994,1713,2,2,1,0)
^8994.021^1^1^3121010^^^^
"KRN",8994,1713,2,2,1,1,0)
The kind of data being stored.
"KRN",8994,1713,2,3,0)
OBJECT^3^^0^3
"KRN",8994,1713,2,3,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,1713,2,3,1,1,0)
The content of the object, as JSON
"KRN",8994,1713,2,"B","DFN",1)

"KRN",8994,1713,2,"B","OBJECT",3)

"KRN",8994,1713,2,"B","TYPE",2)

"KRN",8994,1713,2,"PARAMSEQ",1,1)

"KRN",8994,1713,2,"PARAMSEQ",2,2)

"KRN",8994,1713,2,"PARAMSEQ",3,3)

"KRN",8994,1713,3,0)
^8994.03^1^1^3121129^^^^
"KRN",8994,1713,3,1,0)
Text array formatted as JSON
"KRN",8994,1714,-1)
0^17
"KRN",8994,1714,0)
VPR PUT OBJECT^PUT^VPRDJ2^1^S^^^1^1^^1
"KRN",8994,1714,1,0)
^8994.01^2^2^3121129^^^^
"KRN",8994,1714,1,1,0)
This RPC receives data from the client and saves it in the VPR Object
"KRN",8994,1714,1,2,0)
file #560.11 as JSON.
"KRN",8994,1714,2,0)
^8994.02A^3^2
"KRN",8994,1714,2,2,0)
TYPE^1^100^0^1
"KRN",8994,1714,2,2,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,1714,2,2,1,1,0)
The kind of data being stored.
"KRN",8994,1714,2,3,0)
OBJECT^3^^0^2
"KRN",8994,1714,2,3,1,0)
^8994.021^1^1^3121129^^^^
"KRN",8994,1714,2,3,1,1,0)
The content of the object, as JSON
"KRN",8994,1714,2,"B","OBJECT",3)

"KRN",8994,1714,2,"B","TYPE",2)

"KRN",8994,1714,2,"PARAMSEQ",1,2)

"KRN",8994,1714,2,"PARAMSEQ",2,3)

"KRN",8994,1714,3,0)
^8994.03^1^1^3121129^^^^
"KRN",8994,1714,3,1,0)
Text array formatted as JSON
"KRN",8994,2306,-1)
0^16
"KRN",8994,2306,0)
VPR GET OBJECT^GET^VPRDJ2^4^S^^^0^1^^1
"KRN",8994,2306,1,0)
^8994.01^2^2^3121219^^^^
"KRN",8994,2306,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,2306,1,2,0)
^TMP("VPR",$J,n) as JSON.
"KRN",8994,2306,2,0)
^8994.02A^1^1
"KRN",8994,2306,2,1,0)
FILTER^2^^0^1
"KRN",8994,2306,2,1,1,0)
^8994.021^1^1^3121219^^^^
"KRN",8994,2306,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,2306,2,"B","FILTER",1)

"KRN",8994,2306,2,"PARAMSEQ",1,1)

"KRN",8994,2306,3,0)
^8994.03^1^1^3121219^^^^
"KRN",8994,2306,3,1,0)
Text array formatted as JSON
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",571,-1)
1^1
"PKG",571,0)
VIRTUAL PATIENT RECORD^VPR^Utilities to manage a virtual copy of the patient record
"PKG",571,20,0)
^9.402P^^
"PKG",571,22,0)
^9.49I^1^1
"PKG",571,22,1,0)
1.0^3110804^3110525^1085
"PKG",571,22,1,"PAH",1,0)
3^3121219
"PKG",571,22,1,"PAH",1,1,0)
^^2^2^3121219
"PKG",571,22,1,"PAH",1,1,1,0)
The Virtual Patient Record (VPR) monitors a VistA system for new data
"PKG",571,22,1,"PAH",1,1,2,0)
and activity, and makes that data available to a subscribing client.
"PRE")
VPRPRODC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
26
"RTN","MDCPROTD")
0^25^B6783608
"RTN","MDCPROTD",1,0)
MDCPROTD ;HINES OIFO/BLJ - CliO backend driver;02 Feb 2005
"RTN","MDCPROTD",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","MDCPROTD",3,0)
 ;;1.0;CLINICAL PROCEDURES;**16**;Apr 01, 2004
"RTN","MDCPROTD",4,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MDCPROTD",5,0)
 ;
"RTN","MDCPROTD",6,0)
 ; External References -
"RTN","MDCPROTD",7,0)
 ;  EN^XQOR - IA # 10101
"RTN","MDCPROTD",8,0)
 ;
"RTN","MDCPROTD",9,0)
EN ;
"RTN","MDCPROTD",10,0)
 ; First, we'll get the root observation.
"RTN","MDCPROTD",11,0)
 New MDCERR,IEN
"RTN","MDCPROTD",12,0)
 Set IEN=$Get(DA) If '+IEN Write "IEN FOR PROTOCOL UNDEFINED!",! Quit
"RTN","MDCPROTD",13,0)
 Do GETS^DIQ(704.117,IEN_",",".01;.08;.09","EINR","^TMP(""MDCOBS"",$J)","MDCERR")
"RTN","MDCPROTD",14,0)
 If $Data(MDCERR) Do  Quit
"RTN","MDCPROTD",15,0)
 . Set MDCOBS("ERROR")=$Get(MDCERR("DIERR",1))_U_$Get(MDCERR("DIERR",1,"TEXT",1))
"RTN","MDCPROTD",16,0)
 Merge MDCOBS=^TMP("MDCOBS",$J,704.117,IEN_",") Kill ^TMP("MDCOBS",$J)
"RTN","MDCPROTD",17,0)
 Set MDCOBS("OLD_STATUS","E")=$$EXTERNAL^DILFD(704.117,".09",,$Get(X1))
"RTN","MDCPROTD",18,0)
 Set MDCOBS("OLD_STATUS","I")=X1
"RTN","MDCPROTD",19,0)
 Set MDCOBS("DOMAIN","VITALS")=0
"RTN","MDCPROTD",20,0)
 Set MDGUID=$$GET1^DIQ(704.117,IEN_",",.07)
"RTN","MDCPROTD",21,0)
 For Y=1:1 Quit:$Text(MAP+Y)=""  If $Piece($Text(MAP+Y),";",4)=MDGUID Set MDCOBS("DOMAIN","VITALS")=1 Quit
"RTN","MDCPROTD",22,0)
 Quit
"RTN","MDCPROTD",23,0)
 ;
"RTN","MDCPROTD",24,0)
PROT ;Call the protocol.
"RTN","MDCPROTD",25,0)
 Set X="MDC OBSERVATION UPDATE",DIC="101"
"RTN","MDCPROTD",26,0)
 Do EN^XQOR
"RTN","MDCPROTD",27,0)
 Quit
"RTN","MDCPROTD",28,0)
 ;
"RTN","MDCPROTD",29,0)
 ; This must be updated if Vitals EVER adds a new term that we map to. This only says our term it paired with a vital sign.
"RTN","MDCPROTD",30,0)
 ;
"RTN","MDCPROTD",31,0)
MAP ; Contains the mappings from Vitals to CliO - vital;abbv;vuid;term_guid
"RTN","MDCPROTD",32,0)
 ;;ABDOMINAL GIRTH;{F70E6642-2719-22BE-BE87-DEF0A884F177}
"RTN","MDCPROTD",33,0)
 ;;AUDIOMETRY;{FFD29134-8BB2-248E-0412-93C2C08B076F}
"RTN","MDCPROTD",34,0)
 ;;BLOOD PRESSURE;{B15F2DF6-CE99-B847-FE6B-3D5F174A2BCD}
"RTN","MDCPROTD",35,0)
 ;;CENTRAL VENOUS PRESSURE;{D30F98A7-4C5D-12E8-AB4D-9C85A4332EC3}
"RTN","MDCPROTD",36,0)
 ;;CIRCUMFERENCE/GIRTH;{92A124D4-B75F-9FD9-1A51-605887BCEA79};
"RTN","MDCPROTD",37,0)
 ;;FETAL HEART TONES;{A2E22A44-E924-ADDE-2B8E-0251666B4DE6}
"RTN","MDCPROTD",38,0)
 ;;FUNDAL HEIGHT;{EEAB8762-624F-7BA3-4001-114FD229BA69}
"RTN","MDCPROTD",39,0)
 ;;HEAD CIRCUMFERENCE;{33827E3C-5DBB-083C-D8BE-4DFD7D42071F}
"RTN","MDCPROTD",40,0)
 ;;HEARING;{813CCC94-3D64-5093-BC6C-053EFD9948F9}
"RTN","MDCPROTD",41,0)
 ;;HEIGHT;{B440216B-0FB3-1950-7859-7C1BE398FE4A}
"RTN","MDCPROTD",42,0)
 ;;PAIN;{47A83DEA-BA95-38AD-DF2E-1F209122E684}
"RTN","MDCPROTD",43,0)
 ;;PULSE;{FCA63B76-EF4C-EBE5-33C1-F1EEBD7A7BC4}
"RTN","MDCPROTD",44,0)
 ;;PULSE OXIMETRY;{5F84DD55-3CCF-094C-2536-B51EB7FAD999}
"RTN","MDCPROTD",45,0)
 ;;RESPIRATION;{973ED2C0-0625-7DF9-17DC-8FFF7E376F23}
"RTN","MDCPROTD",46,0)
 ;;TEMPERATURE;{0F33223E-DF2C-6B8B-5201-5E091C5F9065}
"RTN","MDCPROTD",47,0)
 ;;TONOMETRY;{C06989EF-4B0F-4941-B1A7-FA9D81A480FF}
"RTN","MDCPROTD",48,0)
 ;;VISION CORRECTED;{ED022AC1-EBE4-E708-684D-63D00628A94C}
"RTN","MDCPROTD",49,0)
 ;;VISION UNCORRECTED;{BEA5E565-D728-F5B3-0A3A-0528C42A45C4}
"RTN","MDCPROTD",50,0)
 ;;WEIGHT;{CD2D8263-6B71-0E1C-0AFE-87B4B2C12632}
"RTN","VPRCORD")
0^1^B5720725
"RTN","VPRCORD",1,0)
VPRCORD ;SLC/AGP - Ordering Controller for VPR ; 11/6/12 2:27pm
"RTN","VPRCORD",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCORD",3,0)
 ;
"RTN","VPRCORD",4,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","VPRCORD",5,0)
 S VPRCNT=$G(VPRCNT)+1
"RTN","VPRCORD",6,0)
 S @VPRXML@(VPRCNT)=X
"RTN","VPRCORD",7,0)
 Q
"RTN","VPRCORD",8,0)
 ;
"RTN","VPRCORD",9,0)
RPC(VPRXML,PARAMS) ; Process request via RPC instead of CSP
"RTN","VPRCORD",10,0)
 N X,REQ,VPRCNT,VPRSITE,VPRUSER,VPRDBUG,VPRSTA
"RTN","VPRCORD",11,0)
 S VPRXML=$NA(^TMP($J,"VPR RESULTS")) K @VPRXML
"RTN","VPRCORD",12,0)
 S VPRCNT=0
"RTN","VPRCORD",13,0)
 S VPRUSER=DUZ,VPRSITE=DUZ(2),VPRSTA=$$STA^XUAF4(DUZ(2))
"RTN","VPRCORD",14,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","VPRCORD",15,0)
 ;
"RTN","VPRCORD",16,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","VPRCORD",17,0)
 ;
"RTN","VPRCORD",18,0)
 N CMD
"RTN","VPRCORD",19,0)
 S CMD=$G(REQ("command",1))
"RTN","VPRCORD",20,0)
 D ADD("<results>")
"RTN","VPRCORD",21,0)
 ;
"RTN","VPRCORD",22,0)
 ; returns an order structure for change orders
"RTN","VPRCORD",23,0)
 ; or places an order if auto-accept QO
"RTN","VPRCORD",24,0)
 I CMD="ordering" D  G OUT
"RTN","VPRCORD",25,0)
 . D ORDERING^VPRCORD1($$VAL("uid"),$$VAL("qoIen"),$$VAL("patient"),$$VAL("location"),$$VAL("provider"),$$VAL("orderAction"),0)
"RTN","VPRCORD",26,0)
 ;
"RTN","VPRCORD",27,0)
 ; save the order contains code
"RTN","VPRCORD",28,0)
 ; to handle changing the dose and/or the schedule
"RTN","VPRCORD",29,0)
 I CMD="saveOrder" D  G OUT
"RTN","VPRCORD",30,0)
 . D COMMIT^VPRCORD1(.REQ)
"RTN","VPRCORD",31,0)
 ;
"RTN","VPRCORD",32,0)
 I CMD="listQuickOrders" D  G OUT
"RTN","VPRCORD",33,0)
 . D QOL^VPRCORD1($$VAL("location"),$$VAL("provider"),$$VAL("panelNumber"),$$VAL("patient"))
"RTN","VPRCORD",34,0)
 ;
"RTN","VPRCORD",35,0)
 I CMD="renewOrder" D  G OUT
"RTN","VPRCORD",36,0)
 . D RENEW^VPRCORD1($$VAL("uid"),$$VAL("provider"),$$VAL("patient"),0)
"RTN","VPRCORD",37,0)
 ;
"RTN","VPRCORD",38,0)
 I CMD="dcReasonsList" D  G OUT
"RTN","VPRCORD",39,0)
 . D DCLREAS^VPRCORD1($$VAL("uid"),$$VAL("provider"))
"RTN","VPRCORD",40,0)
 ;
"RTN","VPRCORD",41,0)
 I CMD="discontinue" D  G OUT
"RTN","VPRCORD",42,0)
 . D DC^VPRCORD1($$VAL("uid"),$$VAL("provider"),$$VAL("location"),$$VAL("patient"),$$VAL("reason"))
"RTN","VPRCORD",43,0)
 ;
"RTN","VPRCORD",44,0)
 I CMD="cancel" D  G OUT
"RTN","VPRCORD",45,0)
 . D CANCEL^VPRCORD1($$VAL("uid"))
"RTN","VPRCORD",46,0)
 ;
"RTN","VPRCORD",47,0)
 I CMD="performOrderChecks" D  G OUT
"RTN","VPRCORD",48,0)
 . D ORDERING^VPRCORD1($$VAL("uid"),$$VAL("qoIen"),$$VAL("patient"),$$VAL("location"),$$VAL("provider"),$$VAL("orderAction"),1)
"RTN","VPRCORD",49,0)
 ;
"RTN","VPRCORD",50,0)
OUT ; output the XML
"RTN","VPRCORD",51,0)
 D ADD("</results>")
"RTN","VPRCORD",52,0)
 ;I EDPDBUG D PUTXML^EDPCDBG(EDPDBUG,.EDPXML)
"RTN","VPRCORD",53,0)
 ;I $L($G(EDPHTTP)) D        ; if in CSP mode
"RTN","VPRCORD",54,0)
 ;. U EDPHTTP
"RTN","VPRCORD",55,0)
 ;. W "<results>",!
"RTN","VPRCORD",56,0)
 ;. N I S I=0 F  S I=$O(EDPXML(I)) Q:'I  W EDPXML(I),!
"RTN","VPRCORD",57,0)
 ;. W "</results>",!
"RTN","VPRCORD",58,0)
END Q
"RTN","VPRCORD",59,0)
 ;
"RTN","VPRCORD",60,0)
VAL(X) ; return value from request
"RTN","VPRCORD",61,0)
 Q $G(REQ(X,1))
"RTN","VPRCORD1")
0^2^B121238708
"RTN","VPRCORD1",1,0)
VPRCORD1 ; SLC/AGP,JLC - Process Order Request from AVIVA System. ; 05/27/2011
"RTN","VPRCORD1",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCORD1",3,0)
 Q
"RTN","VPRCORD1",4,0)
 ;
"RTN","VPRCORD1",5,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","VPRCORD1",6,0)
 S VPRCNT=$G(VPRCNT)+1
"RTN","VPRCORD1",7,0)
 S @VPRXML@(VPRCNT)=X
"RTN","VPRCORD1",8,0)
 Q
"RTN","VPRCORD1",9,0)
 ;
"RTN","VPRCORD1",10,0)
AE(TEXT) ;
"RTN","VPRCORD1",11,0)
 S VPRERCNT=VPRERCNT+1
"RTN","VPRCORD1",12,0)
 S VPRERARR(VPRERCNT)=TEXT
"RTN","VPRCORD1",13,0)
 Q
"RTN","VPRCORD1",14,0)
 ;
"RTN","VPRCORD1",15,0)
AEM(TEXT) ;
"RTN","VPRCORD1",16,0)
 N NUM
"RTN","VPRCORD1",17,0)
 S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
"RTN","VPRCORD1",18,0)
 .S VPRERCNT=VPRERCNT+1
"RTN","VPRCORD1",19,0)
 .S VPRERARR(VPRERCNT)=TEXT(NUM)
"RTN","VPRCORD1",20,0)
 Q
"RTN","VPRCORD1",21,0)
 ;
"RTN","VPRCORD1",22,0)
CANCEL(UID) ;
"RTN","VPRCORD1",23,0)
 N VPRERARR,VPRERCNT,VPRRES,VPRISORD,VPROIFN,VPROK,VPRPOSS
"RTN","VPRCORD1",24,0)
 S VPRERCNT=0,VPROUT=0
"RTN","VPRCORD1",25,0)
 I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","VPRCORD1",26,0)
 S DFN=$P(UID,":",5),VPROIFN=$P(UID,"D",2),VPRISORD=1
"RTN","VPRCORD1",27,0)
 G UNO
"RTN","VPRCORD1",28,0)
 Q
"RTN","VPRCORD1",29,0)
 ;
"RTN","VPRCORD1",30,0)
DC(UID,USER,LOC,ICN,REAS) ;
"RTN","VPRCORD1",31,0)
 N DFN,VPRDIEN,VPRERARR,VPRERCNT,VPRFILL,VPRISORD,VPROK,VPRRES
"RTN","VPRCORD1",32,0)
 S VPRERCNT=0,VPRISORD=1
"RTN","VPRCORD1",33,0)
 ;I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","VPRCORD1",34,0)
 ;S DFN=$P(UID,":",5)
"RTN","VPRCORD1",35,0)
 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","VPRCORD1",36,0)
 S VPROIFN=$P(UID,":",6)
"RTN","VPRCORD1",37,0)
 S VPRDIEN=+$P($G(^OR(100,VPROIFN,0)),U,5)
"RTN","VPRCORD1",38,0)
 D FILLID^ORWDXC(.VPRFILL,VPRDIEN)
"RTN","VPRCORD1",39,0)
 D DC^ORWDXA(.VPRRES,VPROIFN,USER,LOC,REAS,0,0)
"RTN","VPRCORD1",40,0)
 D UNO
"RTN","VPRCORD1",41,0)
 D KILLALRT^VPRCORD2(DFN,VPRFILL)
"RTN","VPRCORD1",42,0)
 Q
"RTN","VPRCORD1",43,0)
 ;
"RTN","VPRCORD1",44,0)
DCLREAS(UID,USER) ;
"RTN","VPRCORD1",45,0)
 N CNT,DFN,NODE,VPRHSKEY,VPRERARR,VPRISORD,VPROIFN,VPROUT,VPRRES,VPRPOSS
"RTN","VPRCORD1",46,0)
 S VPRERCNT=0,VPROUT=0,VPRISORD=1
"RTN","VPRCORD1",47,0)
 ;I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","VPRCORD1",48,0)
 ;S DFN=$P(UID,":",5)
"RTN","VPRCORD1",49,0)
 S VPROIFN=$P(UID,":",6)
"RTN","VPRCORD1",50,0)
 D NPHASKEY^ORWU(.HASKEY,USER,"PROVIDER") I HASKEY=0 D AE("DOES NOT HOLD THE PROVIDER KEY") G EXIT
"RTN","VPRCORD1",51,0)
 D VALID^ORWDXA(.VPROUT,VPROIFN,"DC",USER) I $G(VPROUT)]"" D AEM(.VPROUT) G EXIT
"RTN","VPRCORD1",52,0)
 ;D LOCK^ORWDX(.VPROK,DFN) I 'VPROK D AE("Chart Lock Failed") G EXIT
"RTN","VPRCORD1",53,0)
 ;D LOCKORD^ORWDX(.VPROK,VPROIFN) I 'VPROK D AE("Order Lock Failed: "_VPROK) G UNLOCK
"RTN","VPRCORD1",54,0)
 K VPROUT D OFCPLX^ORWDXA(.VPROUT,VPROIFN) I $D(VPROUT)>0 D
"RTN","VPRCORD1",55,0)
 .D ADD("<complexOrder='1'/>")
"RTN","VPRCORD1",56,0)
 K VPROUT D DCREN^ORWDX1(.VPROUT,VPROIFN) I $D(VPROUT) D
"RTN","VPRCORD1",57,0)
 .D ADD("<pendingRenewal='1'/>")
"RTN","VPRCORD1",58,0)
 K VPROUT D DCREASON^ORWDX2(.VPROUT) I $D(VPROUT) D
"RTN","VPRCORD1",59,0)
 .D ADD("<reasons>")
"RTN","VPRCORD1",60,0)
 .S CNT=1 F  S CNT=$O(VPROUT(CNT)) Q:CNT'>0  D
"RTN","VPRCORD1",61,0)
 ..S NODE=$E(VPROUT(CNT),2,$L(VPROUT(CNT)))
"RTN","VPRCORD1",62,0)
 ..D ADD("<reason value='"_$$ESC^VPRD($P(NODE,U,2))_"' id='"_$P(NODE,U)_"'/>")
"RTN","VPRCORD1",63,0)
 .D ADD("</reasons>")
"RTN","VPRCORD1",64,0)
 G EXIT
"RTN","VPRCORD1",65,0)
 Q
"RTN","VPRCORD1",66,0)
 ;       
"RTN","VPRCORD1",67,0)
COMMIT(INPUTS) ;
"RTN","VPRCORD1",68,0)
 N ALLDOSE,CNT,DGIEN,DLGNAME,DRUG,EXT,FILLER,FOUND,GBL,IEN,INST,LOC,NAME
"RTN","VPRCORD1",69,0)
 N ORCAT,ORDRUG,OI,ORDERCHK,ORDIALOG,PROMPT,SAVEARR,SCH,SIG,UID,USER,VALUE
"RTN","VPRCORD1",70,0)
 N VPRERARR,VPRERCNT,VPRISORD,VPROIFN,VPRRES,VPRPOSS
"RTN","VPRCORD1",71,0)
 S VPRISORD=1,VPRERCNT=0
"RTN","VPRCORD1",72,0)
 S UID=$$VAL(.INPUTS,"uid")
"RTN","VPRCORD1",73,0)
 I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","VPRCORD1",74,0)
 S DFN=$P(UID,":",5),VPROIFN=$P(UID,"D",2)
"RTN","VPRCORD1",75,0)
 S LOC=$$VAL(.INPUTS,"location"),USER=$$VAL(.INPUTS,"provider")
"RTN","VPRCORD1",76,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","VPRCORD1",77,0)
 S ORDIALOG=+$P($G(^OR(100,+VPROIFN,0)),U,5)
"RTN","VPRCORD1",78,0)
 D FILLID^ORWDXC(.FILLER,ORDIALOG)
"RTN","VPRCORD1",79,0)
 S DLGNAME=$P($G(^ORD(101.41,ORDIALOG,0)),U)
"RTN","VPRCORD1",80,0)
 S DGIEN=$P($G(^ORD(101.41,ORDIALOG,0)),U,5)
"RTN","VPRCORD1",81,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","VPRCORD1",82,0)
 D GETORDER^ORCD(+VPROIFN)
"RTN","VPRCORD1",83,0)
 ;check dose for save value
"RTN","VPRCORD1",84,0)
 S ALLDOSE=$$VAL(.INPUTS,"dosage")
"RTN","VPRCORD1",85,0)
 S IEN=$$PTR("INSTRUCTIONS")
"RTN","VPRCORD1",86,0)
 I ORDIALOG(IEN,1)'=$P(ALLDOSE,U) D
"RTN","VPRCORD1",87,0)
 .S FOUND=0,CNT=0
"RTN","VPRCORD1",88,0)
 .S ORDIALOG(IEN,1)=$P(ALLDOSE,U)
"RTN","VPRCORD1",89,0)
 .S IEN=$$PTR("DOSE"),ORDIALOG(IEN,1)=$P(ALLDOSE,U,3)
"RTN","VPRCORD1",90,0)
 .S IEN=$$PTR("DISPENSE DRUG"),ORDIALOG(IEN,1)=$P(ALLDOSE,U,2)
"RTN","VPRCORD1",91,0)
 .S ORDRUG=$P(ALLDOSE,U,2)
"RTN","VPRCORD1",92,0)
 S IEN=$$PTR("SCHEDULE")
"RTN","VPRCORD1",93,0)
 S SCH=$$VAL(.INPUTS,"schedule")
"RTN","VPRCORD1",94,0)
 I ORDIALOG(IEN,1)'=SCH D
"RTN","VPRCORD1",95,0)
 .S ORDIALOG(IEN,1)=SCH
"RTN","VPRCORD1",96,0)
 .S IEN=$$PTR("SCHEDULE TYPE") I $G(ORDIALOG(IEN,1))'="" S ORDIALOG(IEN,1)=$$VAL(.INPUTS,"scheduleType")
"RTN","VPRCORD1",97,0)
 .S IEN=$$PTR("ADMIN TIMES") I $G(ORDIALOG(IEN,1))'="" S ORDIALOG(IEN,1)=$$VAL(.INPUTS,"scheduleAdmin")
"RTN","VPRCORD1",98,0)
 S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
"RTN","VPRCORD1",99,0)
 D SIG^ORCDPS2
"RTN","VPRCORD1",100,0)
 S IEN=0,CNT=1 F  S IEN=$O(ORDIALOG(IEN)) Q:IEN'>0  D
"RTN","VPRCORD1",101,0)
 .S NAME=$P(ORDIALOG(IEN),U,2),INST=0
"RTN","VPRCORD1",102,0)
 .F  S INST=$O(ORDIALOG(IEN,INST)) Q:INST'>0  D
"RTN","VPRCORD1",103,0)
 ..S VALUE=ORDIALOG(IEN,INST)
"RTN","VPRCORD1",104,0)
 ..I VALUE["^TMP(" D  Q
"RTN","VPRCORD1",105,0)
 ... I $G(@VALUE@(1,0))="" Q
"RTN","VPRCORD1",106,0)
 ...S SAVEARR(IEN,INST)="ORDIALOG(""WP"","_IEN_",1)"
"RTN","VPRCORD1",107,0)
 ...S SAVEARR("WP",IEN,INST,1,0)=@VALUE@(1,0)
"RTN","VPRCORD1",108,0)
 ..S SAVEARR(IEN,INST)=VALUE
"RTN","VPRCORD1",109,0)
 ..S EXT=$$GETEXT(NAME,VALUE)
"RTN","VPRCORD1",110,0)
 ..S ORDERCHK(CNT)=FILLER_U_NAME_U_VALUE_U_EXT,CNT=CNT+1
"RTN","VPRCORD1",111,0)
 ..I NAME="ORDERABLE" S OI=VALUE
"RTN","VPRCORD1",112,0)
 ..I NAME="DRUG" S DRUG=VALUE
"RTN","VPRCORD1",113,0)
 S ORDERCHK(1)=OI_U_FILLER_U_DRUG
"RTN","VPRCORD1",114,0)
 D ACCEPT^ORWDXC(.ORDCHKOT,DFN,FILLER,"",LOC,.ORDERCHK,"",0) D INFO^VPRCORD2(.ORDCHKOT)
"RTN","VPRCORD1",115,0)
 S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
"RTN","VPRCORD1",116,0)
 D SAVE(.VPRRES,DFN,USER,LOC,DLGNAME,DGIEN,0,VPROIFN,.SAVEARR)
"RTN","VPRCORD1",117,0)
 D UNO
"RTN","VPRCORD1",118,0)
 Q
"RTN","VPRCORD1",119,0)
 ;
"RTN","VPRCORD1",120,0)
EN(IEN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,VARSARR,ORDIALOG,ERRARR,VPRPOSS) ;
"RTN","VPRCORD1",121,0)
 N CHECKS,CNT,DEFDLF,DLGDEF,DLGNAME,DIEN,DRUG,EXT,FILLER,INST,ISCLOZ,INT,NUM
"RTN","VPRCORD1",122,0)
 N ODIEN,ORDCHKOT,ORDERCHK,SAVEARR,STR,TEMP,TEXT
"RTN","VPRCORD1",123,0)
 I ORDTYPE="E" S DIEN=+$P($G(^OR(100,IEN,0)),U,5)
"RTN","VPRCORD1",124,0)
 I ORDTYPE="Q" S DIEN=IEN
"RTN","VPRCORD1",125,0)
 D ALLWORD^ORALWORD(.ISCLOZ,DFN,IEN,ORDTYPE,USER) I +ISCLOZ(0)>0 D AEM(.ISCLOZ) G EXIT
"RTN","VPRCORD1",126,0)
 S VARSARR("DISPLAY GROUP IEN")=$P($G(^ORD(101.41,$$DEFDLG^ORCD(DIEN),0)),U,5)
"RTN","VPRCORD1",127,0)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
"RTN","VPRCORD1",128,0)
 D FILLID^ORWDXC(.FILLER,DIEN)
"RTN","VPRCORD1",129,0)
 S VARSARR("FILLER ID")=FILLER
"RTN","VPRCORD1",130,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","VPRCORD1",131,0)
 I $$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")="E" D
"RTN","VPRCORD1",132,0)
 .D DISPLAY^ORWDXC(.CHECKS,DUZ,VARSARR("FILLER ID")) I $D(CHECKS) D INFO^VPRCORD2(.CHECKS)
"RTN","VPRCORD1",133,0)
 S DLGNAME=$P($G(^ORD(101.41,DIEN,0)),U)
"RTN","VPRCORD1",134,0)
 I ORDTYPE="Q" S DLGNAME=$P($G(^ORD(101.41,ORDIALOG,0)),U)
"RTN","VPRCORD1",135,0)
 I DLGNAME="" D AE("INVALID DEFAULT DIALOG") G EXIT
"RTN","VPRCORD1",136,0)
 S VARSARR("DIALOG NAME")=DLGNAME
"RTN","VPRCORD1",137,0)
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
"RTN","VPRCORD1",138,0)
 ;S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
"RTN","VPRCORD1",139,0)
 ;D SIG^ORCDPS2
"RTN","VPRCORD1",140,0)
 ;build order check array,build dialog structure and build save array
"RTN","VPRCORD1",141,0)
 D BLDARRS^VPRCORD2(.ORDIALOG,.VARSARR,DFN,LOC,.ORDERCHK,.SAVEARR,.VPRPOSS)
"RTN","VPRCORD1",142,0)
 D ACCEPT^ORWDXC(.ORDCHKOT,DFN,VARSARR("FILLER ID"),"",LOC,.ORDERCHK,"",0) D INFO^VPRCORD2(.ORDCHKOT)
"RTN","VPRCORD1",143,0)
 I CHKONLY=1 Q
"RTN","VPRCORD1",144,0)
 S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
"RTN","VPRCORD1",145,0)
 I ORDTYPE="Q"!(ACTION="C") D SAVE(.VPRRES,DFN,USER,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),DIEN,0,.SAVEARR)
"RTN","VPRCORD1",146,0)
 ;EXIT
"RTN","VPRCORD1",147,0)
 ;D BLDXMLD^VPRCORD2(.VPRERARR,.ORDARR)
"RTN","VPRCORD1",148,0)
 Q
"RTN","VPRCORD1",149,0)
 ;
"RTN","VPRCORD1",150,0)
GETEXT(NAME,VALUE) ;
"RTN","VPRCORD1",151,0)
 N RESULT
"RTN","VPRCORD1",152,0)
 I NAME="ORDERABLE" Q $P(^ORD(101.43,VALUE,0),U)
"RTN","VPRCORD1",153,0)
 I NAME="URGENCY" Q $P(^ORD(101.42,VALUE,0),U)
"RTN","VPRCORD1",154,0)
 I NAME="ROUTE" Q $$GET1^DIQ(51.2,+VALUE_",",.01)
"RTN","VPRCORD1",155,0)
 I NAME="DRUG" Q $$GET1^DIQ(50,+VALUE_",",.01)
"RTN","VPRCORD1",156,0)
 Q VALUE
"RTN","VPRCORD1",157,0)
 ;
"RTN","VPRCORD1",158,0)
 ;entry point for RPC for QO and editing an existing order
"RTN","VPRCORD1",159,0)
ORDERING(UID,QIEN,ICN,LOC,USER,ACTION,CHKONLY) ;
"RTN","VPRCORD1",160,0)
 N DFN,FAIL,ORDTYPE,VPRERCNT,VPRISORD,VPROIFN
"RTN","VPRCORD1",161,0)
 N VARSARR,VPRERARR,VPRRES,VPRPOSS,VPRBLT
"RTN","VPRCORD1",162,0)
 S VPRBLT=0
"RTN","VPRCORD1",163,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","VPRCORD1",164,0)
 S VPRERCNT=0,VPRISORD=0
"RTN","VPRCORD1",165,0)
 S FAIL=0
"RTN","VPRCORD1",166,0)
 I $L($G(UID))>0 D
"RTN","VPRCORD1",167,0)
 . ;I UID'["orderID" D AE("UID does not contain an order ID") S FAIL=1
"RTN","VPRCORD1",168,0)
 . S VPROIFN=$P(UID,":",6)
"RTN","VPRCORD1",169,0)
 I ACTION="R" D RENEW(UID,USER,ICN,CHKONLY) Q:VPRBLT=1  G UNO
"RTN","VPRCORD1",170,0)
 I FAIL=1 G EXIT
"RTN","VPRCORD1",171,0)
 I +$G(DFN)'>0 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","VPRCORD1",172,0)
 ;I QIEN>0 S VPROIFN=QIEN
"RTN","VPRCORD1",173,0)
 I QIEN>0 D QOSET(QIEN,ACTION,DFN,CHKONLY)
"RTN","VPRCORD1",174,0)
 I +QIEN=0 D PROCESS(VPROIFN,ACTION,CHKONLY)
"RTN","VPRCORD1",175,0)
 I ORDTYPE="Q"!(ORDTYPE="C") G UNO
"RTN","VPRCORD1",176,0)
 I ORDTYPE'="Q" G EXIT
"RTN","VPRCORD1",177,0)
 Q
"RTN","VPRCORD1",178,0)
 ;
"RTN","VPRCORD1",179,0)
QOSET(QIEN,ACTION,DFN,CHKONLY) ;
"RTN","VPRCORD1",180,0)
 N NUM,VPROIFN
"RTN","VPRCORD1",181,0)
 I $P($G(^ORD(101.41,QIEN,0)),U,4)'="O" S VPROIFN=QIEN D PROCESS(VPROIFN,ACTION,CHKONLY) Q
"RTN","VPRCORD1",182,0)
 S NUM=0 F  S NUM=$O(^ORD(101.41,QIEN,10,NUM)) Q:NUM'>0  D
"RTN","VPRCORD1",183,0)
 .S VPROIFN=$P($G(^ORD(101.41,QIEN,10,NUM,0)),U,2) I +$G(VPROIFN)'>0 Q
"RTN","VPRCORD1",184,0)
 .D PROCESS(VPROIFN,ACTION,CHKONLY)
"RTN","VPRCORD1",185,0)
 Q
"RTN","VPRCORD1",186,0)
PROCESS(VPROIFN,ACTION,CHKONLY) ;
"RTN","VPRCORD1",187,0)
 N BLDRES,ORDARR,ORDIALOG,RSPID,TEMP,TEXT
"RTN","VPRCORD1",188,0)
 ;D LOCK^ORWDX(.VPROK,DFN) I 'VPROK D AE("Chart Lock Failed: "_VPROK) G EXIT
"RTN","VPRCORD1",189,0)
 ;I ACTION'="" S VPRISORD=1 D LOCKORD^ORWDX(.VPROK,VPROIFN) I 'VPROK D AE("Order Lock Failed: "_VPROK) G UNLOCK
"RTN","VPRCORD1",190,0)
 S TEMP=$G(ACTION)_VPROIFN
"RTN","VPRCORD1",191,0)
 I $$BEG^VPRCORD2(DFN,LOC,TEMP,USER,.VARSARR,.BLDRES)=0 G UNO
"RTN","VPRCORD1",192,0)
 I $P(BLDRES(0),U,4)="Q" D
"RTN","VPRCORD1",193,0)
 .S ORDTYPE="Q"
"RTN","VPRCORD1",194,0)
 .I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept") G UNO
"RTN","VPRCORD1",195,0)
 I $G(ORDTYPE)="" S ORDTYPE=$S(ACTION="C":"E",ACTION="X":"E",1:"N")
"RTN","VPRCORD1",196,0)
 S RSPID=$P(BLDRES(0),U,2)
"RTN","VPRCORD1",197,0)
 I ACTION="X" I $$CHANGE^VPRCORD2(VPROIFN,DFN,LOC,USER,.ERRARR)=0 G UNO
"RTN","VPRCORD1",198,0)
 I ORDTYPE="Q" D
"RTN","VPRCORD1",199,0)
 .D GETQDLG^ORCD(VPROIFN)
"RTN","VPRCORD1",200,0)
 .S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
"RTN","VPRCORD1",201,0)
 .D SIG^ORCDPS2
"RTN","VPRCORD1",202,0)
 I '$D(ORDIALOG) D
"RTN","VPRCORD1",203,0)
 .S ORDIALOG=+$P($G(^OR(100,+VPROIFN,0)),U,5)
"RTN","VPRCORD1",204,0)
 .D GETDLG1^ORCD(ORDIALOG)
"RTN","VPRCORD1",205,0)
 .D GETORDER^ORCD(+VPROIFN)
"RTN","VPRCORD1",206,0)
 D EN(+VPROIFN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,.VARSARR,.ORDIALOG,.ERRARR,.VPRPOSS)
"RTN","VPRCORD1",207,0)
 ;I ORDTYPE="Q"!(ORDTYPE="C") G UNO
"RTN","VPRCORD1",208,0)
 ;I ORDTYPE'="Q" G EXIT
"RTN","VPRCORD1",209,0)
 Q
"RTN","VPRCORD1",210,0)
 ;
"RTN","VPRCORD1",211,0)
QOL(LOC,PROV,IEN,ICN) ;
"RTN","VPRCORD1",212,0)
 N CNT,BLDRES,DFN,DIEN,NAME,NODE,NUM,TEXT,TYPE,VARSARR,VPRERCNT,VPRERARR
"RTN","VPRCORD1",213,0)
 S VPRERCNT=0
"RTN","VPRCORD1",214,0)
 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","VPRCORD1",215,0)
 S DIEN="",NUM=0,TEXT=""
"RTN","VPRCORD1",216,0)
 D ADD("<qos>")
"RTN","VPRCORD1",217,0)
 F  S NUM=$O(^VPRPANEL(IEN,"ORDER DIALOGS",NUM)) Q:NUM'>0  D
"RTN","VPRCORD1",218,0)
 .S DIEN=$G(^VPRPANEL(IEN,"ORDER DIALOGS",NUM,0)) Q:+DIEN'>0
"RTN","VPRCORD1",219,0)
 .S NAME=$P($G(^ORD(101.41,+DIEN,0)),U)
"RTN","VPRCORD1",220,0)
 .D BEG^VPRCORD2(DFN,LOC,DIEN,PROV,.VARSARR,.BLDRES)
"RTN","VPRCORD1",221,0)
 .S TYPE=$P(BLDRES(0),U,4)
"RTN","VPRCORD1",222,0)
 .D ADD("<qo value='"_$$ESC^VPRD(NAME)_"' id='"_DIEN_"' type='"_TYPE_"'>")
"RTN","VPRCORD1",223,0)
 .I TYPE="O" D
"RTN","VPRCORD1",224,0)
 ..D ADD("<items>")
"RTN","VPRCORD1",225,0)
 ..S CNT=0 F  S CNT=$O(BLDRES(CNT)) Q:CNT'>0  D
"RTN","VPRCORD1",226,0)
 ...S NODE=$G(BLDRES(CNT))
"RTN","VPRCORD1",227,0)
 ...D ADD("<item value='"_$$ESC^VPRD($P(NODE,U,3))_"' id='"_$P(NODE,U)_"' type='"_$P(NODE,U,2)_"'/>")
"RTN","VPRCORD1",228,0)
 ..D ADD("</items>")
"RTN","VPRCORD1",229,0)
 .D ADD("<description xml:space='preserve'>")
"RTN","VPRCORD1",230,0)
 .S CNT=0 F  S CNT=$O(BLDRES(CNT)) Q:CNT'>0  D
"RTN","VPRCORD1",231,0)
 ..D ADD($$ESC^VPRD($G(BLDRES(CNT)))_"\r\n")
"RTN","VPRCORD1",232,0)
 .D ADD("</description>")
"RTN","VPRCORD1",233,0)
 .D ADD("</qo>")
"RTN","VPRCORD1",234,0)
 D ADD("</qos>")
"RTN","VPRCORD1",235,0)
 Q
"RTN","VPRCORD1",236,0)
 ;
"RTN","VPRCORD1",237,0)
RENEW(UID,PROVP,ICN,CHKONLY) ;
"RTN","VPRCORD1",238,0)
 ;Input - DFN of the patient
"RTN","VPRCORD1",239,0)
 ;        RX to be renewed
"RTN","VPRCORD1",240,0)
 ;
"RTN","VPRCORD1",241,0)
 N DFN,X,ORY,ORPKG,ORITM,PSOSTAT,A,PDET,ORFLDS,DRUG,DISPLAY,FAIL,LIST,OCHKS,OCO,OCLIST,ORCPLX,ORINFO,ORPVSTS
"RTN","VPRCORD1",242,0)
 N ORL,ORPROV,PCP,PCPN,RNWFLDS,SPACES,Y,ORUSR,NEWIFN,PNM,RXE,VPROIFN
"RTN","VPRCORD1",243,0)
 N VPRERARR,VPRERCNT,VPRRES,VPRISORD,VPROK,VPRPOSS
"RTN","VPRCORD1",244,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","VPRCORD1",245,0)
 S VPRERCNT=0,VPRISORD=1
"RTN","VPRCORD1",246,0)
 ;I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
"RTN","VPRCORD1",247,0)
 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","VPRCORD1",248,0)
 S VPROIFN=$P(UID,":",6)
"RTN","VPRCORD1",249,0)
 ;D LOCK^ORWDX(.VPROK,DFN) I 'VPROK D AE("Chart Lock Failed") G EXIT
"RTN","VPRCORD1",250,0)
 ;D LOCKORD^ORWDX(.VPROK,VPROIFN) I 'VPROK D AE("Order Lock Failed") G UNLOCK
"RTN","VPRCORD1",251,0)
 S A=$G(^OR(100,VPROIFN,0)) I A="" D AE("Order missing from ORDERS file") G UNO
"RTN","VPRCORD1",252,0)
 S ORPROV=+$P(A,"^",4),ORL=+$P(A,"^",10)
"RTN","VPRCORD1",253,0)
 D ALLWORD^ORALWORD(.VPROK,DFN,VPROIFN,"E",ORPROV) I $G(VPROK)>0 D AEM(.VPROK) G UNO
"RTN","VPRCORD1",254,0)
 D VALID^ORWDXA(.VPROK,VPROIFN,"RN",ORPROV) I $G(VPROK)'="" D AE(VPROK) G UNO
"RTN","VPRCORD1",255,0)
 D GETPKG^ORWDXR(.ORPKG,VPROIFN) I '$D(ORPKG) D AE("Invalid Order Number") G UNO
"RTN","VPRCORD1",256,0)
 I ORPKG'["PS" D AE("Problem with package in ORDERS file") G UNO
"RTN","VPRCORD1",257,0)
 D GTORITM^ORWDXR(.ORITM,VPROIFN)
"RTN","VPRCORD1",258,0)
 D FAILDEA^ORWDPS1(.FAIL,ORITM,ORPROV,"O") I FAIL D AE("Failed DEA Check") G UNO
"RTN","VPRCORD1",259,0)
 D RNWFLDS^ORWDXR(.RNWFLDS,VPROIFN) S ORFLDS(1)=RNWFLDS(0)
"RTN","VPRCORD1",260,0)
 D CHKGRP^ORWDPS2(.DISPLAY,VPROIFN) ;I DISPLAY'=2 D AE("Package Problem on Order") G UNO
"RTN","VPRCORD1",261,0)
 D ON^ORWDXC(.OCO)
"RTN","VPRCORD1",262,0)
 D DISPLAY^ORWDXC(.OCLIST,DFN,ORPKG) I $D(OCLIST) D INFO^VPRCORD2(.OCLIST)
"RTN","VPRCORD1",263,0)
 D OXDATA^ORWDXR01(.ORINFO,VPROIFN)
"RTN","VPRCORD1",264,0)
 D ACCEPT^ORWDXC(.OCHKS,DFN,"PSO","",ORL,ORINFO,VPROIFN,1) D INFO^VPRCORD2(.OCHKS)
"RTN","VPRCORD1",265,0)
 D ISCPLX^ORWDXR(.ORCPLX,VPROIFN) S ORCPLX=+$G(ORCPLX)
"RTN","VPRCORD1",266,0)
 I CHKONLY=1 Q
"RTN","VPRCORD1",267,0)
 D RENEW^ORWDXR(.VPRRES,VPROIFN,DFN,ORPROV,ORL,.ORFLDS,ORCPLX,0)
"RTN","VPRCORD1",268,0)
 S NEWIFN=$P(^OR(100,VPROIFN,3),"^",6)
"RTN","VPRCORD1",269,0)
 S $P(^OR(100,NEWIFN,8,1,0),"^",13)=PROVP
"RTN","VPRCORD1",270,0)
 G UNO
"RTN","VPRCORD1",271,0)
 Q
"RTN","VPRCORD1",272,0)
 ;
"RTN","VPRCORD1",273,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","VPRCORD1",274,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","VPRCORD1",275,0)
 ;
"RTN","VPRCORD1",276,0)
SAVE(VPRRES,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,ORIFN,SAVEARR) ;
"RTN","VPRCORD1",277,0)
 N CNT,NUM,VPROREST
"RTN","VPRCORD1",278,0)
 I QOIEN>0 D SAVE^ORWDX(.VPROREST,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,"",.SAVEARR,"",DT,"",0)
"RTN","VPRCORD1",279,0)
 I ORIFN>0 D SAVE^ORWDX(.VPROREST,DFN,USER,LOC,DLGNAME,DGIEN,"",ORIFN,.SAVEARR,"",DT,"",0)
"RTN","VPRCORD1",280,0)
 S CNT=$O(VPRRES(""),-1)
"RTN","VPRCORD1",281,0)
 S NUM=0 F  S NUM=$O(VPROREST(NUM)) Q:NUM'>0  D
"RTN","VPRCORD1",282,0)
 .S CNT=CNT+1,VPRRES(CNT)=VPROREST(NUM)
"RTN","VPRCORD1",283,0)
 Q
"RTN","VPRCORD1",284,0)
 ;
"RTN","VPRCORD1",285,0)
UNO ;
"RTN","VPRCORD1",286,0)
 ;I VPRISORD=1 D UNLKORD^ORWDX(.VPROK,VPROIFN) I 'VPROK D AE("Order unlock Failed") K VPROK
"RTN","VPRCORD1",287,0)
UNLOCK ;
"RTN","VPRCORD1",288,0)
 ;D UNLOCK^ORWDX(.VPROK,DFN) I 'VPROK D AE("Chart unlock Failed")
"RTN","VPRCORD1",289,0)
EXIT ;
"RTN","VPRCORD1",290,0)
 S VPRBLT=1
"RTN","VPRCORD1",291,0)
 D BLDXMLD^VPRCORD2(.VPRERARR,.VPRRES,.VPRPOSS)
"RTN","VPRCORD1",292,0)
 K ^TMP($J,"ORDER CHECKS")
"RTN","VPRCORD1",293,0)
 Q
"RTN","VPRCORD1",294,0)
 ;
"RTN","VPRCORD1",295,0)
VAL(REQ,X) ; return value from request
"RTN","VPRCORD1",296,0)
 Q $G(REQ(X,1))
"RTN","VPRCORD2")
0^3^B74000719
"RTN","VPRCORD2",1,0)
VPRCORD2 ;;SLC/AGP - Process Order Request from AVIVA System ; 11/2/10 11:39am
"RTN","VPRCORD2",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCORD2",3,0)
 ;
"RTN","VPRCORD2",4,0)
 ;The purpose of this API is to process a request to renew an
"RTN","VPRCORD2",5,0)
 ;Outpatient Prescription
"RTN","VPRCORD2",6,0)
 ;
"RTN","VPRCORD2",7,0)
 Q
"RTN","VPRCORD2",8,0)
 ;
"RTN","VPRCORD2",9,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","VPRCORD2",10,0)
 S VPRCNT=$G(VPRCNT)+1
"RTN","VPRCORD2",11,0)
 S @VPRXML@(VPRCNT)=X
"RTN","VPRCORD2",12,0)
 Q
"RTN","VPRCORD2",13,0)
 ;
"RTN","VPRCORD2",14,0)
 ;add possible values from the dialog to XML List return for each prompt
"RTN","VPRCORD2",15,0)
ADDPOSS(POSS) ;
"RTN","VPRCORD2",16,0)
 N CNT,ISFIRST,LAST,PROMPT,TEMP
"RTN","VPRCORD2",17,0)
 D ADD("<possibleValues>")
"RTN","VPRCORD2",18,0)
 S ISFIRST=1,LAST="",PROMPT=""
"RTN","VPRCORD2",19,0)
 F  S PROMPT=$O(POSS(PROMPT)) Q:PROMPT=""  D
"RTN","VPRCORD2",20,0)
 .I PROMPT'=LAST,LAST'="" D ADD("</"_TEMP_">")
"RTN","VPRCORD2",21,0)
 .S TEMP=PROMPT_"s",LAST=PROMPT
"RTN","VPRCORD2",22,0)
 .D ADD("<"_TEMP_">")
"RTN","VPRCORD2",23,0)
 .S CNT="" F  S CNT=$O(POSS(PROMPT,CNT)) Q:CNT=""  D ADD(POSS(PROMPT,CNT))
"RTN","VPRCORD2",24,0)
 D ADD("</"_TEMP_">")
"RTN","VPRCORD2",25,0)
 D ADD("</possibleValues>")
"RTN","VPRCORD2",26,0)
 Q
"RTN","VPRCORD2",27,0)
 ;
"RTN","VPRCORD2",28,0)
AE(TEXT) ;
"RTN","VPRCORD2",29,0)
 S VPRERCNT=VPRERCNT+1
"RTN","VPRCORD2",30,0)
 S VPRERARR(VPRERCNT)=TEXT
"RTN","VPRCORD2",31,0)
 Q
"RTN","VPRCORD2",32,0)
 ;
"RTN","VPRCORD2",33,0)
AEM(TEXT) ;
"RTN","VPRCORD2",34,0)
 N NUM
"RTN","VPRCORD2",35,0)
 S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
"RTN","VPRCORD2",36,0)
 .S VPRERCNT=VPRERCNT+1
"RTN","VPRCORD2",37,0)
 .S VPRERARR(VPRERCNT)=TEXT(NUM)
"RTN","VPRCORD2",38,0)
 Q
"RTN","VPRCORD2",39,0)
 ;
"RTN","VPRCORD2",40,0)
 ;initial API needed for order actions and QO
"RTN","VPRCORD2",41,0)
BEG(DFN,LOC,IEN,USER,VARSARR,BLDRES) ;
"RTN","VPRCORD2",42,0)
 N CNT,FLDS,HASKEY,TEXT,VPRLST
"RTN","VPRCORD2",43,0)
 D BLDVAR(DFN,LOC,DT,.VARSARR) I VARSARR("PATIENT")="" D AE("Invalid Patient") Q 0
"RTN","VPRCORD2",44,0)
 D NPHASKEY^ORWU(.HASKEY,USER,"PROVIDER") I HASKEY=0 D AE("DOES NOT HOLD THE PROVIDER KEY") Q 0
"RTN","VPRCORD2",45,0)
 S FLDS=DFN_U_LOC_U_USER_U_VARSARR("ISINP")_U_VARSARR("SEX")_U_VARSARR("AGE")_U_"0;C;0;0^0^^^"
"RTN","VPRCORD2",46,0)
 I $P($G(^ORD(101.41,IEN,0)),U,4)="O" D  Q 1
"RTN","VPRCORD2",47,0)
 .S BLDRES(0)="^^^O"
"RTN","VPRCORD2",48,0)
 .D LOADSET^ORWDXM(.VPRLST,IEN)
"RTN","VPRCORD2",49,0)
 .S CNT=0 F  S CNT=$O(VPRLST(CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",50,0)
 ..S BLDRES(CNT)=VPRLST(CNT)
"RTN","VPRCORD2",51,0)
 D BLDQRSP^ORWDXM1(.BLDRES,IEN,FLDS,VARSARR("ISIMO"),LOC)
"RTN","VPRCORD2",52,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","VPRCORD2",53,0)
 I +BLDRES(0)=8 D AE(BLDRES(.5)) Q 0
"RTN","VPRCORD2",54,0)
 Q 1
"RTN","VPRCORD2",55,0)
 ;
"RTN","VPRCORD2",56,0)
 ;builds multiple arrays from the ORDIALOG array.
"RTN","VPRCORD2",57,0)
 ;builds XML return structure of the dialog,
"RTN","VPRCORD2",58,0)
 ;ORDERCHK array for order checks when placing an order
"RTN","VPRCORD2",59,0)
 ;SAVEARR array for saving an order for QO
"RTN","VPRCORD2",60,0)
BLDARRS(ORDIALOG,VARSARR,DFN,LOC,ORDERCHK,SAVEARR,POSS) ;
"RTN","VPRCORD2",61,0)
 ;D ADD("<dialog>")
"RTN","VPRCORD2",62,0)
 N CNT,DEF,DRUG,EXT,FILLER,IEN,INST,NODE,PROMPT,SCH,STR,TEMP,VALUE,X,ZERO
"RTN","VPRCORD2",63,0)
 D SCHALL^ORWDPS1(.SCH,DFN,LOC)
"RTN","VPRCORD2",64,0)
 S STR="<dialog name='"_$$ESC^VPRD(VARSARR("DIALOG NAME"))_"' displayGroup='"_VARSARR("DISPLAY GROUP")_"'/>"
"RTN","VPRCORD2",65,0)
 S IEN=$$PTR("ORDERABLE ITEM")
"RTN","VPRCORD2",66,0)
 S OI=ORDIALOG(IEN,1),FILLER=VARSARR("FILLER ID")
"RTN","VPRCORD2",67,0)
 D LOADPOSS(DFN,LOC,OI,FILLER,.VARSARR,.POSS)
"RTN","VPRCORD2",68,0)
 D ADD(STR)
"RTN","VPRCORD2",69,0)
 D ADD("<structure>")
"RTN","VPRCORD2",70,0)
 S CNT=0,IEN=0 F  S IEN=$O(ORDIALOG(IEN)) Q:IEN'>0  D
"RTN","VPRCORD2",71,0)
 .S NODE=$G(ORDIALOG(IEN)),ZERO=ORDIALOG(IEN,0)
"RTN","VPRCORD2",72,0)
 .S PROMPT=$P(NODE,U,2)
"RTN","VPRCORD2",73,0)
 .S STR="<prompt name='"_$$ESC^VPRD(PROMPT)_"' id='"_$P(NODE,U)_"'>"
"RTN","VPRCORD2",74,0)
 .D ADD(STR)
"RTN","VPRCORD2",75,0)
 .S TEMP=$S(PROMPT="DOSE":"ALLDOSES",PROMPT="DRUG":"DISPENSE",1:PROMPT)
"RTN","VPRCORD2",76,0)
 .;I $D(POSS(TEMP)) D ADDPOSS(TEMP,.POSS)
"RTN","VPRCORD2",77,0)
 .I $P(ZERO,U)="S" D LOADPOSC(PROMPT,$P(ZERO,U,2),.POSS)
"RTN","VPRCORD2",78,0)
 .D ADD("<instances>")
"RTN","VPRCORD2",79,0)
 .S X=$O(ORDIALOG(IEN,99),-1) I X=0 D  Q
"RTN","VPRCORD2",80,0)
 ..S VALUE=$O(POSS(PROMPT,"DEFAULT","")) I VALUE="" D  Q
"RTN","VPRCORD2",81,0)
 ...D ADD("</instances>")
"RTN","VPRCORD2",82,0)
 ...D ADD("</prompt>")
"RTN","VPRCORD2",83,0)
 ..D ADD("<default value='"_$$ESC^VPRD(VALUE)_"'/>")
"RTN","VPRCORD2",84,0)
 ..D ADD("</instances>")
"RTN","VPRCORD2",85,0)
 ..D ADD("</prompt>")
"RTN","VPRCORD2",86,0)
 .F INST=1:1:X D
"RTN","VPRCORD2",87,0)
 ..S VALUE=ORDIALOG(IEN,INST)
"RTN","VPRCORD2",88,0)
 ..I VALUE["^TMP(" D  Q
"RTN","VPRCORD2",89,0)
 ... I $G(@VALUE@(1,0))="" Q
"RTN","VPRCORD2",90,0)
 ...S SAVEARR(IEN,INST)="ORDIALOG(""WP"","_IEN_",1)"
"RTN","VPRCORD2",91,0)
 ...S SAVEARR("WP",IEN,INST,1,0)=@VALUE@(1,0)
"RTN","VPRCORD2",92,0)
 ..S SAVEARR(IEN,INST)=VALUE
"RTN","VPRCORD2",93,0)
 ..S EXT=$$EXT^ORCD(IEN,INST)
"RTN","VPRCORD2",94,0)
 ..S ORDERCHK(CNT)=FILLER_U_PROMPT_U_VALUE_U_EXT,CNT=CNT+1
"RTN","VPRCORD2",95,0)
 ..S STR="<instance number='"_INST_"' value='"_$$ESC^VPRD(VALUE)_"' external='"_$$ESC^VPRD(EXT)_"'/>"
"RTN","VPRCORD2",96,0)
 ..I PROMPT="ORDERABLE" S OI=VALUE
"RTN","VPRCORD2",97,0)
 ..I PROMPT="DRUG" S DRUG=$G(VALUE)
"RTN","VPRCORD2",98,0)
 ..D ADD(STR)
"RTN","VPRCORD2",99,0)
 .D ADD("</instances>")
"RTN","VPRCORD2",100,0)
 .D ADD("</prompt>")
"RTN","VPRCORD2",101,0)
 S ORDERCHK(1)=OI_U_FILLER_U_$S(FILLER["PS":$G(DRUG),1:"")
"RTN","VPRCORD2",102,0)
 D ADD("</structure>")
"RTN","VPRCORD2",103,0)
 ;D ADD("</dialog>")
"RTN","VPRCORD2",104,0)
 Q
"RTN","VPRCORD2",105,0)
 ;
"RTN","VPRCORD2",106,0)
 ;build patient demographic variables
"RTN","VPRCORD2",107,0)
BLDVAR(DFN,LOC,DATE,OUTPUT) ;
"RTN","VPRCORD2",108,0)
 N IMO,TEMP
"RTN","VPRCORD2",109,0)
 I $L(DFN)'>0 S OUTPUT("PATIENT")="" Q
"RTN","VPRCORD2",110,0)
 S TEMP=$G(^DPT(DFN,0))
"RTN","VPRCORD2",111,0)
 I TEMP="" S OUTPUT("PATIENT")="" Q
"RTN","VPRCORD2",112,0)
 S OUTPUT("PATIENT")=$P(TEMP,U,1)
"RTN","VPRCORD2",113,0)
 S OUTPUT("SEX")=$P(TEMP,U,2)
"RTN","VPRCORD2",114,0)
 S OUTPUT("DOB")=$P(TEMP,U,3)
"RTN","VPRCORD2",115,0)
 S OUTPUT("SSN")=$P(TEMP,U,9)
"RTN","VPRCORD2",116,0)
 S OUTPUT("DOD")=$P($G(^DPT(DFN,.35)),U,1)
"RTN","VPRCORD2",117,0)
 I OUTPUT("DOD")>DATE S OUTPUT("DOD")=""
"RTN","VPRCORD2",118,0)
 S OUTPUT("DFN")=DFN
"RTN","VPRCORD2",119,0)
 S OUTPUT("AGE")=$$AGE^PXRMAGE(OUTPUT("DOB"),OUTPUT("DOD"),DATE)
"RTN","VPRCORD2",120,0)
 S OUTPUT("ISINP")=$S(+$G(^DPT(DFN,.1))>0:1,1:0)
"RTN","VPRCORD2",121,0)
 D IMOLOC^ORIMO(.IMO,LOC,DFN)
"RTN","VPRCORD2",122,0)
 S OUTPUT("ISIMO")=$S(IMO>0:1,1:0)
"RTN","VPRCORD2",123,0)
 Q
"RTN","VPRCORD2",124,0)
 ;
"RTN","VPRCORD2",125,0)
BLDXMLD(ERRARR,ORDARR,VPRPOSS) ;
"RTN","VPRCORD2",126,0)
 N CNT,ORDERED,STR,TEMP
"RTN","VPRCORD2",127,0)
 S ORDERED=0
"RTN","VPRCORD2",128,0)
 I $D(ERRARR) D  Q
"RTN","VPRCORD2",129,0)
 .D ADD("<success>false</success>")
"RTN","VPRCORD2",130,0)
 .D ADD("<error>")
"RTN","VPRCORD2",131,0)
 .D ADD("<message xml:space='preserve'/>")
"RTN","VPRCORD2",132,0)
 .S CNT=0 F  S CNT=$O(ERRARR(CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",133,0)
 ..D ADD($$ESC^VPRD(ERRARR(CNT)))
"RTN","VPRCORD2",134,0)
 .D ADD("</error>")
"RTN","VPRCORD2",135,0)
 D ADD("<success>true</success>")
"RTN","VPRCORD2",136,0)
 I $D(VPRPOSS) D ADDPOSS(.VPRPOSS)
"RTN","VPRCORD2",137,0)
 D ADD("<data>")
"RTN","VPRCORD2",138,0)
 I $D(ORDARR) D
"RTN","VPRCORD2",139,0)
 .D ADD("<ordered placed='1'/>")
"RTN","VPRCORD2",140,0)
 .S ORDERED=1
"RTN","VPRCORD2",141,0)
 .D ADD("<message xml:space='preserve'/>")
"RTN","VPRCORD2",142,0)
 .S CNT=0 F  S CNT=$O(ORDARR(CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",143,0)
 ..S TEMP=ORDARR(CNT),STR=""
"RTN","VPRCORD2",144,0)
 ..;I CNT=1,$E(TEMP)="~" S STR=$P(TEMP,U),STR="Order IEN: "_$E(STR,2,$L(STR))
"RTN","VPRCORD2",145,0)
 ..;I CNT>1,$E(TEMP)="t" S STR=$E(TEMP,2,$L(TEMP))
"RTN","VPRCORD2",146,0)
 ..I $E(TEMP)="t" S STR=$E(TEMP,2,$L(TEMP))
"RTN","VPRCORD2",147,0)
 ..;I STR="" S STR=TEMP
"RTN","VPRCORD2",148,0)
 ..I STR'="" D ADD($$ESC^VPRD(STR)_"\r\n")
"RTN","VPRCORD2",149,0)
 I ORDERED=1 D ADD("</data>") Q
"RTN","VPRCORD2",150,0)
 I $D(^TMP($J,"ORDER CHECKS")) D
"RTN","VPRCORD2",151,0)
 .;D ADD("Order Checks:")
"RTN","VPRCORD2",152,0)
 .D ADD("<message xml:space='preserve'/>")
"RTN","VPRCORD2",153,0)
 .S CNT=0 F  S CNT=$O(^TMP($J,"ORDER CHECKS",CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",154,0)
 ..D ADD($$ESC^VPRD(^TMP($J,"ORDER CHECKS",CNT)))
"RTN","VPRCORD2",155,0)
 D ADD("</data>")
"RTN","VPRCORD2",156,0)
 Q
"RTN","VPRCORD2",157,0)
 ;
"RTN","VPRCORD2",158,0)
CHANGE(ORDIEN,DFN,LOC,USER,ERRARR) ;
"RTN","VPRCORD2",159,0)
 N TEXT,VALUE
"RTN","VPRCORD2",160,0)
 D VALID^ORWDXA(.VALUE,ORDIEN,"XX",USER) I VALUE'="" D AE(VALUE) Q 0
"RTN","VPRCORD2",161,0)
 D OFCPLX^ORWDXA(.VALUE,ORDIEN) I VALUE'="" D AE("CANNOT CHANGE A COMPLEX ORDER") Q 0
"RTN","VPRCORD2",162,0)
 Q 1
"RTN","VPRCORD2",163,0)
 ;
"RTN","VPRCORD2",164,0)
INFO(OCHKS) ;
"RTN","VPRCORD2",165,0)
 N CNT,NUM
"RTN","VPRCORD2",166,0)
 S NUM=0,CNT=+$O(^TMP($J,"ORDER CHECKS",""),-1)
"RTN","VPRCORD2",167,0)
 F  S NUM=$O(OCHKS(NUM)) Q:NUM'>0  D
"RTN","VPRCORD2",168,0)
 .S ^TMP($J,"ORDER CHECKS",CNT)=$P(OCHKS(NUM),U,4)
"RTN","VPRCORD2",169,0)
 .S CNT=CNT+1
"RTN","VPRCORD2",170,0)
 Q
"RTN","VPRCORD2",171,0)
 ;
"RTN","VPRCORD2",172,0)
KILLALRT(DFN,TYPE) ;
"RTN","VPRCORD2",173,0)
 N VPROUT
"RTN","VPRCORD2",174,0)
 D KILUNSNO^ORWORB(.VPROUT,DFN) K VPROUT
"RTN","VPRCORD2",175,0)
 I TYPE["PS" D
"RTN","VPRCORD2",176,0)
 . D KILEXMED^ORWORB(.VPROUT,DFN) K VPROUT
"RTN","VPRCORD2",177,0)
 . D KILUNVMD^ORWORB(.VPROUT,DFN) K VPROUT
"RTN","VPRCORD2",178,0)
 D KILUNVOR^ORWORB(.VPROUT,DFN) K VPROUT
"RTN","VPRCORD2",179,0)
 Q
"RTN","VPRCORD2",180,0)
 ;build a list of possible selection items for a prompt
"RTN","VPRCORD2",181,0)
LOADPOSS(DFN,LOC,OI,FILLER,VARSARR,POSS) ;
"RTN","VPRCORD2",182,0)
 N CNT,DGIEN,ID,NUM,PROMPT,STR,TYPE,VPRPOSS
"RTN","VPRCORD2",183,0)
 S TYPE=$S(FILLER="PSO":"O",1:"I")
"RTN","VPRCORD2",184,0)
 S NUM=0
"RTN","VPRCORD2",185,0)
 S DGIEN=VARSARR("DISPLAY GROUP IEN")
"RTN","VPRCORD2",186,0)
 I FILLER["PS" D OISLCT^ORWDPS2(.VPRPOSS,OI,TYPE,DFN,"Y","N")
"RTN","VPRCORD2",187,0)
 I FILLER["LR" D DEF^ORWDLR32(.VPRPOSS,LOC,"")
"RTN","VPRCORD2",188,0)
 I FILLER["RA" D DEF^ORWDRA32(.VPRPOSS,DFN,"",DGIEN)
"RTN","VPRCORD2",189,0)
 S CNT=0
"RTN","VPRCORD2",190,0)
 F  S CNT=$O(VPRPOSS(CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",191,0)
 .S NODE=VPRPOSS(CNT)
"RTN","VPRCORD2",192,0)
 .S TEMP=$E($G(NODE),2,$L(NODE))
"RTN","VPRCORD2",193,0)
 .I $E(NODE)="~" D  Q
"RTN","VPRCORD2",194,0)
 ..S NUM=0,PROMPT=$$LOW^XLFSTR(TEMP)
"RTN","VPRCORD2",195,0)
 ..S PROMPT=$TR(PROMPT," ","_")
"RTN","VPRCORD2",196,0)
 ..S POSS(PROMPT)=""
"RTN","VPRCORD2",197,0)
 ..S NUM=0
"RTN","VPRCORD2",198,0)
 .I PROMPT="alldoses"!(PROMPT="route") D  Q
"RTN","VPRCORD2",199,0)
 ..S ID=TEMP
"RTN","VPRCORD2",200,0)
 ..S TEMP=$S(PROMPT="alldoses":$P(TEMP,U),PROMPT="route":$P(TEMP,U,2),1:TEMP)
"RTN","VPRCORD2",201,0)
 ..I $E(NODE)="i",$L(TEMP)>0 S POSS(PROMPT,NUM)="<"_$$LOW^XLFSTR(PROMPT)_" value='"_$$ESC^VPRD(TEMP)_"' id='"_$$ESC^VPRD(ID)_"' default='0'/>"
"RTN","VPRCORD2",202,0)
 ..I $E(NODE)="d",$L(TEMP)>0 S STR="<"_$$LOW^XLFSTR(PROMPT)_" value='"_$$ESC^VPRD(TEMP)_"' id='"_$$ESC^VPRD(ID)_"' default='0'/>"
"RTN","VPRCORD2",203,0)
 ..S NUM=NUM+1
"RTN","VPRCORD2",204,0)
 .I $E(NODE)="i",$L(TEMP)>0 S POSS(PROMPT,NUM)="<"_$$LOW^XLFSTR(PROMPT)_" value='"_$$ESC^VPRD(TEMP)_"' default='0'/>"
"RTN","VPRCORD2",205,0)
 .I $E(NODE)="d",$L(TEMP)>0 S STR="<"_$$LOW^XLFSTR(PROMPT)_" value='"_TEMP_"' default='1'/>"
"RTN","VPRCORD2",206,0)
 .S NUM=NUM+1
"RTN","VPRCORD2",207,0)
 ;build list of possible schedules
"RTN","VPRCORD2",208,0)
 I FILLER["PS" D
"RTN","VPRCORD2",209,0)
 .D SCHALL^ORWDPS1(.SCH,DFN,LOC)
"RTN","VPRCORD2",210,0)
 .S POSS("schedule")="",NUM=0
"RTN","VPRCORD2",211,0)
 .S CNT=0 F  S CNT=$O(SCH(CNT)) Q:CNT'>0  D
"RTN","VPRCORD2",212,0)
 ..S TEMP=SCH(CNT)
"RTN","VPRCORD2",213,0)
 ..S STR="<schedule value='"_$$ESC^VPRD($P(TEMP,U))
"RTN","VPRCORD2",214,0)
 ..S STR=STR_"' external='"_$$ESC^VPRD($P(TEMP,U,2))
"RTN","VPRCORD2",215,0)
 ..S STR=STR_"' type='"_$$ESC^VPRD($P(TEMP,U,3))
"RTN","VPRCORD2",216,0)
 ..S STR=STR_"' admin='"_$$ESC^VPRD($P(TEMP,U,4))_"'/>"
"RTN","VPRCORD2",217,0)
 ..S POSS("schedule",NUM)=STR,NUM=NUM+1
"RTN","VPRCORD2",218,0)
 Q
"RTN","VPRCORD2",219,0)
 ;
"RTN","VPRCORD2",220,0)
 ;;add possible code values from the dialog to XML return for each prompt
"RTN","VPRCORD2",221,0)
LOADPOSC(PROMPT,CODES,POSS) ;
"RTN","VPRCORD2",222,0)
 N CNT,STR,NUM,TEMP
"RTN","VPRCORD2",223,0)
 S TEMP=$$LOW^XLFSTR(PROMPT),POSS(TEMP)="",NUM=0,CNT=0
"RTN","VPRCORD2",224,0)
 F X=1:1:$L(CODES) I $E(CODES,X)=";" D
"RTN","VPRCORD2",225,0)
 .S CNT=CNT+1,STR=$P(CODES,";",CNT) Q:STR=""
"RTN","VPRCORD2",226,0)
 .S POSS(TEMP,NUM)="<"_TEMP_" value='"_$$ESC^VPRD($P(STR,":",2))_"' id='"_$$ESC^VPRD($P(STR,":"))_"'/>"
"RTN","VPRCORD2",227,0)
 .S NUM=NUM+1
"RTN","VPRCORD2",228,0)
 ;S CNT=CNT+1,STR=$P(CODES,";",CNT) Q:STR=""
"RTN","VPRCORD2",229,0)
 ;S POSS(TEMP,NUM)="<"_TEMP_" value='"_$$ESC^VPRD($P(STR,":",2))_"' id='"_$$ESC^VPRD($P(STR,":"))_"'/>"
"RTN","VPRCORD2",230,0)
 Q
"RTN","VPRCORD2",231,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","VPRCORD2",232,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","VPRCORD2",233,0)
 ;
"RTN","VPRCORD2",234,0)
UNSIGNED(UIFN) ;queue unsigned order alert
"RTN","VPRCORD2",235,0)
 N ORVP,ORIFN,ORNP,A
"RTN","VPRCORD2",236,0)
 Q:$G(UIFN)=""  S A=$G(^OR(100,UIFN,0)),ORVP=$P(A,"^",2),ORNP=$P(A,"^",4),ORIFN=UIFN_";1"
"RTN","VPRCORD2",237,0)
 D NOTIF^ORCSIGN
"RTN","VPRCORD2",238,0)
 Q
"RTN","VPRCPAT")
0^4^B1076093
"RTN","VPRCPAT",1,0)
VPRCPAT ;SLC/AGP - Patient Information Controller for VPR
"RTN","VPRCPAT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCPAT",3,0)
 ;
"RTN","VPRCPAT",4,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","VPRCPAT",5,0)
 S VPRCNT=$G(VPRCNT)+1
"RTN","VPRCPAT",6,0)
 S @VPRXML@(VPRCNT)=X
"RTN","VPRCPAT",7,0)
 Q
"RTN","VPRCPAT",8,0)
 ;
"RTN","VPRCPAT",9,0)
RPC(VPRXML,PARAMS) ; Process request via RPC instead of CSP
"RTN","VPRCPAT",10,0)
 N X,REQ,VPRCNT,VPRSITE,VPRUSER,VPRDBUG,VPRSTA
"RTN","VPRCPAT",11,0)
 S VPRXML=$NA(^TMP($J,"VPR RESULTS")) K @VPRXML
"RTN","VPRCPAT",12,0)
 S VPRCNT=0
"RTN","VPRCPAT",13,0)
 S VPRUSER=DUZ,VPRSITE=DUZ(2),VPRSTA=$$STA^XUAF4(DUZ(2))
"RTN","VPRCPAT",14,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  S REQ(X,1)=PARAMS(X)
"RTN","VPRCPAT",15,0)
 ;
"RTN","VPRCPAT",16,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","VPRCPAT",17,0)
 ;
"RTN","VPRCPAT",18,0)
 N CMD
"RTN","VPRCPAT",19,0)
 S CMD=$G(REQ("command",1))
"RTN","VPRCPAT",20,0)
 D ADD("<results>")
"RTN","VPRCPAT",21,0)
 ;
"RTN","VPRCPAT",22,0)
 I CMD="getPatPcmmInfo" D  G OUT
"RTN","VPRCPAT",23,0)
 . D GETPCMM^VPRCPAT1($$VAL("patient"))
"RTN","VPRCPAT",24,0)
 ;
"RTN","VPRCPAT",25,0)
OUT ; output the XML
"RTN","VPRCPAT",26,0)
 D ADD("</results>")
"RTN","VPRCPAT",27,0)
 ;I EDPDBUG D PUTXML^EDPCDBG(EDPDBUG,.EDPXML)
"RTN","VPRCPAT",28,0)
 ;I $L($G(EDPHTTP)) D        ; if in CSP mode
"RTN","VPRCPAT",29,0)
 ;. U EDPHTTP
"RTN","VPRCPAT",30,0)
 ;. W "<results>",!
"RTN","VPRCPAT",31,0)
 ;. N I S I=0 F  S I=$O(EDPXML(I)) Q:'I  W EDPXML(I),!
"RTN","VPRCPAT",32,0)
 ;. W "</results>",!
"RTN","VPRCPAT",33,0)
END Q
"RTN","VPRCPAT",34,0)
 ;
"RTN","VPRCPAT",35,0)
VAL(X) ; return value from request
"RTN","VPRCPAT",36,0)
 Q $G(REQ(X,1))
"RTN","VPRCPAT1")
0^5^B7071755
"RTN","VPRCPAT1",1,0)
VPRCPAT1 ; SLC/AGP,JLC - Process Patient Request from AVIVA System. ; 05/27/2011
"RTN","VPRCPAT1",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCPAT1",3,0)
 Q
"RTN","VPRCPAT1",4,0)
 ;
"RTN","VPRCPAT1",5,0)
ADD(X) ; Add a line @NHIN@(n)=X
"RTN","VPRCPAT1",6,0)
 S VPRCNT=$G(VPRCNT)+1
"RTN","VPRCPAT1",7,0)
 S @VPRXML@(VPRCNT)=X
"RTN","VPRCPAT1",8,0)
 Q
"RTN","VPRCPAT1",9,0)
 ;
"RTN","VPRCPAT1",10,0)
AE(TEXT) ;
"RTN","VPRCPAT1",11,0)
 S VPRERCNT=VPRERCNT+1
"RTN","VPRCPAT1",12,0)
 S VPRERARR(VPRERCNT)=TEXT
"RTN","VPRCPAT1",13,0)
 Q
"RTN","VPRCPAT1",14,0)
 ;
"RTN","VPRCPAT1",15,0)
AEM(TEXT) ;
"RTN","VPRCPAT1",16,0)
 N NUM
"RTN","VPRCPAT1",17,0)
 S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
"RTN","VPRCPAT1",18,0)
 .S VPRERCNT=VPRERCNT+1
"RTN","VPRCPAT1",19,0)
 .S VPRERARR(VPRERCNT)=TEXT(NUM)
"RTN","VPRCPAT1",20,0)
 Q
"RTN","VPRCPAT1",21,0)
 ;
"RTN","VPRCPAT1",22,0)
GETPCMM(ICN) ;
"RTN","VPRCPAT1",23,0)
 N DFN,VPRDATA,VPRDCNT,VPRERARR,VPRERCNT
"RTN","VPRCPAT1",24,0)
 S VPRERCNT=0,VPRDCNT=0
"RTN","VPRCPAT1",25,0)
 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
"RTN","VPRCPAT1",26,0)
 N PCT,PCP,ATT,ASS
"RTN","VPRCPAT1",27,0)
 S PCT=$$OUTPTTM^SDUTL3(DFN,DT) I $P(PCT,U)>0 S VPRDCNT=VPRDCNT+1,VPRDATA(VPRDCNT)="<team id='"_$P(PCT,U)_"' value='"_$$ESC^VPRD($P(PCT,U,2))_"'/>"
"RTN","VPRCPAT1",28,0)
 S PCP=$$OUTPTPR^SDUTL3(DFN,DT) I $P(PCP,U)>0 S VPRDCNT=VPRDCNT+1,VPRDATA(VPRDCNT)="<primaryProvider id='"_$P(PCP,U)_"' value='"_$$ESC^VPRD($P(PCP,U,2))_"'/>"
"RTN","VPRCPAT1",29,0)
 S ATT=$G(^DPT(DFN,.1041)) I ATT S VPRDCNT=VPRDCNT+1,VPRDATA(VPRDCNT)="<attendingProvider id='"_ATT_"' value='"_$$ESC^VPRD($P($G(^VA(200,ATT,0)),U))_"'/>"
"RTN","VPRCPAT1",30,0)
 S ASS=$$OUTPTAP^SDUTL3(DFN,DT) I $P(ASS,U)>0 S VPRDCNT=VPRDCNT+1,VPRDATA(VPRDCNT)="<associateProvider id='"_$P(ASS,U)_"' value='"_$$ESC^VPRD($P(ASS,U,2))_"'/>"
"RTN","VPRCPAT1",31,0)
 G EXIT
"RTN","VPRCPAT1",32,0)
 Q
"RTN","VPRCPAT1",33,0)
 ;
"RTN","VPRCPAT1",34,0)
EXIT ;
"RTN","VPRCPAT1",35,0)
 N CNT
"RTN","VPRCPAT1",36,0)
 I $D(VPRERARR) D  Q
"RTN","VPRCPAT1",37,0)
 .D ADD("<success>false</success>")
"RTN","VPRCPAT1",38,0)
 .D ADD("<error>")
"RTN","VPRCPAT1",39,0)
 .D ADD("<message xml:space='preserve'/>")
"RTN","VPRCPAT1",40,0)
 .S CNT=0 F  S CNT=$O(VPRERARR(CNT)) Q:CNT'>0  D
"RTN","VPRCPAT1",41,0)
 ..D ADD($$ESC^VPRD(VPRERARR(CNT)))
"RTN","VPRCPAT1",42,0)
 .D ADD("</error>")
"RTN","VPRCPAT1",43,0)
 D ADD("<success>true</success>")
"RTN","VPRCPAT1",44,0)
 D ADD("<data>")
"RTN","VPRCPAT1",45,0)
 S CNT=0 F  S CNT=$O(VPRDATA(CNT)) Q:CNT'>0  D
"RTN","VPRCPAT1",46,0)
 .D ADD(VPRDATA(CNT))
"RTN","VPRCPAT1",47,0)
 D ADD("</data>")
"RTN","VPRCPAT1",48,0)
 Q
"RTN","VPRCRPC")
0^6^B5035795
"RTN","VPRCRPC",1,0)
VPRCRPC ;SLC/AGP - Generic RPC controller for VPR ; 11/7/12 5:42pm
"RTN","VPRCRPC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCRPC",3,0)
 ;
"RTN","VPRCRPC",4,0)
 ;
"RTN","VPRCRPC",5,0)
RPC(VPRRES,PARAMS) ; Process request via RPC instead of CSP
"RTN","VPRCRPC",6,0)
 N X,REQ,VPRVAL,VPRCNT,VPRSITE,VPRUSER,VPRDBUG,VPRSTA
"RTN","VPRCRPC",7,0)
 ;S VPRXML=$NA(^TMP($J,"VPR RESULTS")) K @VPRXML
"RTN","VPRCRPC",8,0)
 S VPRCNT=0
"RTN","VPRCRPC",9,0)
 ;S VPRUSER=DUZ,VPRSITE=DUZ(2),VPRSTA=$$STA^XUAF4(DUZ(2))
"RTN","VPRCRPC",10,0)
 S X="" F  S X=$O(PARAMS(X)) Q:X=""  I X'="value" S REQ(X,1)=PARAMS(X)
"RTN","VPRCRPC",11,0)
 I $D(PARAMS("value")) M VPRVAL=PARAMS("value")
"RTN","VPRCRPC",12,0)
 ;
"RTN","VPRCRPC",13,0)
COMMON ; Come here for both CSP and RPC Mode
"RTN","VPRCRPC",14,0)
 ; 
"RTN","VPRCRPC",15,0)
 N CMD
"RTN","VPRCRPC",16,0)
 S CMD=$G(REQ("command",1))
"RTN","VPRCRPC",17,0)
 ;
"RTN","VPRCRPC",18,0)
 I CMD="saveParam" D  G OUT
"RTN","VPRCRPC",19,0)
 . D PUTPARAM^VPRPARAM(.VPRRES,.VPRVAL,"")
"RTN","VPRCRPC",20,0)
 ;
"RTN","VPRCRPC",21,0)
 I CMD="saveByUid" D  G OUT
"RTN","VPRCRPC",22,0)
 . D PUTBYUID^VPRPARAM(.VPRRES,$$VAL("uid"),.VPRVAL)
"RTN","VPRCRPC",23,0)
 ;
"RTN","VPRCRPC",24,0)
 I CMD="getParam" D  G OUT
"RTN","VPRCRPC",25,0)
 . D GETBYUID^VPRPARAM(.VPRRES,$$VAL("uid"))
"RTN","VPRCRPC",26,0)
 ;
"RTN","VPRCRPC",27,0)
 I CMD="clearParam" D  G OUT
"RTN","VPRCRPC",28,0)
 . D DELPARAM^VPRPARAM(.VPRRES,$$VAL("uid"))
"RTN","VPRCRPC",29,0)
 ;
"RTN","VPRCRPC",30,0)
 I CMD="getAllParam" D  G OUT
"RTN","VPRCRPC",31,0)
 .D GETALPAR^VPRPARAM(.VPRRES,$$VAL("entity"),$$VAL("entityId"),$$VAL("getValues"))
"RTN","VPRCRPC",32,0)
 ;
"RTN","VPRCRPC",33,0)
 I CMD="getUserInfo" D  G OUT
"RTN","VPRCRPC",34,0)
 .D GETUSERI^VPRCRPC1(.VPRRES,$$VAL("userId"))
"RTN","VPRCRPC",35,0)
 ;
"RTN","VPRCRPC",36,0)
 I CMD="getPatientInfo" D  G OUT
"RTN","VPRCRPC",37,0)
 .D GETPATI^VPRCRPC1(.VPRRES,$$VAL("patientId"))
"RTN","VPRCRPC",38,0)
 ;
"RTN","VPRCRPC",39,0)
 I CMD="isPatientSensitive" D  G OUT
"RTN","VPRCRPC",40,0)
 .D CHKS^VPRFPTC(.VPRRES,$$VAL("patientId"))
"RTN","VPRCRPC",41,0)
 ;
"RTN","VPRCRPC",42,0)
 I CMD="logPatientAccess" D  G OUT
"RTN","VPRCRPC",43,0)
 .D LOG^VPRFPTC(.VPRRES,$$VAL("patientId"))
"RTN","VPRCRPC",44,0)
 ;
"RTN","VPRCRPC",45,0)
 I CMD="addTask" D  G OUT
"RTN","VPRCRPC",46,0)
 .D PUT^VPRDJ1(.VPRRES,$$VAL("patientId"),$$VAL("type"),.VPRVAL)
"RTN","VPRCRPC",47,0)
 ;
"RTN","VPRCRPC",48,0)
 I CMD="getReminderList" D  G OUT
"RTN","VPRCRPC",49,0)
 .D REMLIST^VPRPXRM(.VPRRES,$$VAL("user"),$$VAL("location"))
"RTN","VPRCRPC",50,0)
 ;
"RTN","VPRCRPC",51,0)
 I CMD="evaluateReminder" D  G OUT
"RTN","VPRCRPC",52,0)
 .D EVALREM^VPRPXRM(.VPRRES,$$VAL("patientId"),$$VAL("uid"))
"RTN","VPRCRPC",53,0)
 ;
"RTN","VPRCRPC",54,0)
OUT ; output the XML
"RTN","VPRCRPC",55,0)
 ;S VPRRES=$G(RESULT)
"RTN","VPRCRPC",56,0)
 I '$D(VPRRES) S VPRRES="{}"
"RTN","VPRCRPC",57,0)
END Q
"RTN","VPRCRPC",58,0)
 ;
"RTN","VPRCRPC",59,0)
VAL(X) ; return value from request
"RTN","VPRCRPC",60,0)
 Q $G(REQ(X,1))
"RTN","VPRCRPC",61,0)
 ;
"RTN","VPRCRPC1")
0^7^B72920747
"RTN","VPRCRPC1",1,0)
VPRCRPC1 ; SLC/AGP - Patient and User routine. ; 2/12/12 12:53pm
"RTN","VPRCRPC1",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRCRPC1",3,0)
 Q
"RTN","VPRCRPC1",4,0)
 ;
"RTN","VPRCRPC1",5,0)
GETADD(VALUES,DFN) ;
"RTN","VPRCRPC1",6,0)
 D ADD^VADPT
"RTN","VPRCRPC1",7,0)
 I VAPA(12)=1 D  G ADDX
"RTN","VPRCRPC1",8,0)
 .I $L(VAPA(13))>0 S VALUES("address","street",0)=VAPA(13)
"RTN","VPRCRPC1",9,0)
 .I $L(VAPA(14))>0 S VALUES("address","street",1)=VAPA(14)
"RTN","VPRCRPC1",10,0)
 .I $L(VAPA(15))>0 S VALUES("address","street",2)=VAPA(15)
"RTN","VPRCRPC1",11,0)
 .I $L(VAPA(16))>0 S VALUES("address","city")=VAPA(16)
"RTN","VPRCRPC1",12,0)
 .I $L(VAPA(17))>0 S VALUES("address","state")=$P(VAPA(17),U,2)
"RTN","VPRCRPC1",13,0)
 .I $L(VAPA(18))>0 S VALUES("address","zip")=VAPA(18)
"RTN","VPRCRPC1",14,0)
 .S VALUES("address","confidentIal")="true"
"RTN","VPRCRPC1",15,0)
 ;
"RTN","VPRCRPC1",16,0)
 I $L(VAPA(1))>0 S VALUES("address","street",0)=VAPA(1)
"RTN","VPRCRPC1",17,0)
 I $L(VAPA(2))>0 S VALUES("address","street",1)=VAPA(2)
"RTN","VPRCRPC1",18,0)
 I $L(VAPA(3))>0 S VALUES("address","street",2)=VAPA(3)
"RTN","VPRCRPC1",19,0)
 I $L(VAPA(4))>0 S VALUES("address","city")=VAPA(4)
"RTN","VPRCRPC1",20,0)
 I $L(VAPA(5))>0 S VALUES("address","state")=$P(VAPA(5),U,2)
"RTN","VPRCRPC1",21,0)
 I $L(VAPA(6))>0 S VALUES("address","zip")=VAPA(6)
"RTN","VPRCRPC1",22,0)
 S VALUES("address","confidentIal")="false"
"RTN","VPRCRPC1",23,0)
ADDX ;
"RTN","VPRCRPC1",24,0)
 I $L(VAPA(8))>0 S VALUES("address","phone")=VAPA(8)
"RTN","VPRCRPC1",25,0)
 D KVAR^VADPT
"RTN","VPRCRPC1",26,0)
 Q
"RTN","VPRCRPC1",27,0)
 ;
"RTN","VPRCRPC1",28,0)
GETDEM(VALUES,DFN) ;
"RTN","VPRCRPC1",29,0)
 D DEM^VADPT
"RTN","VPRCRPC1",30,0)
 S VALUES("name")=VADM(1)
"RTN","VPRCRPC1",31,0)
 I VADM(2)]"" S VALUES("ssn")=$P(VADM(2),U,2)
"RTN","VPRCRPC1",32,0)
 I VADM(3)]"" S VALUES("dob")=$P(VADM(3),U,2)
"RTN","VPRCRPC1",33,0)
 I VADM(4)]"" S VALUES("age")=VADM(4)
"RTN","VPRCRPC1",34,0)
 I VADM(5)]"" S VALUES("gender")=$P(VADM(5),U,2)
"RTN","VPRCRPC1",35,0)
 D KVAR^VADPT
"RTN","VPRCRPC1",36,0)
 Q
"RTN","VPRCRPC1",37,0)
 ;
"RTN","VPRCRPC1",38,0)
GETKEYS(VALUES,USER) ;
"RTN","VPRCRPC1",39,0)
 N NAME,VPRERR,VPRLIST,CNT
"RTN","VPRCRPC1",40,0)
 D LIST^DIC(200.051,","_USER_",",".01",,,,,,,,"VPRLIST","VPRERR")
"RTN","VPRCRPC1",41,0)
 S CNT=0 F  S CNT=$O(VPRLIST("DILIST",1,CNT)) Q:CNT'>0  D
"RTN","VPRCRPC1",42,0)
 . S NAME=$G(VPRLIST("DILIST",1,CNT)) Q:NAME=""
"RTN","VPRCRPC1",43,0)
 . S VALUES("vistaKeys",NAME)="TRUE"
"RTN","VPRCRPC1",44,0)
 Q
"RTN","VPRCRPC1",45,0)
 ;
"RTN","VPRCRPC1",46,0)
GETNOK(VALUES,DFN,TYPE) ;
"RTN","VPRCRPC1",47,0)
 S VAOA("A")=TYPE
"RTN","VPRCRPC1",48,0)
 N CNT,CONTACT
"RTN","VPRCRPC1",49,0)
 S CONTACT=$S(TYPE=3:"secondary",1:"primary")
"RTN","VPRCRPC1",50,0)
 S CNT=$S(TYPE=3:2,1:1)
"RTN","VPRCRPC1",51,0)
 D OAD^VADPT
"RTN","VPRCRPC1",52,0)
 ;
"RTN","VPRCRPC1",53,0)
 I VAOA(9)]"" S VALUES("nok",CNT,"name")=VAOA(9)
"RTN","VPRCRPC1",54,0)
 I VAOA(10)]"" S VALUES("nok",CNT,"relationship")=VAOA(10)
"RTN","VPRCRPC1",55,0)
 I VAOA(1)]"" S VALUES("nok",CNT,"address","street",1)=VAOA(1)
"RTN","VPRCRPC1",56,0)
 I VAOA(2)]"" S VALUES("nok",CNT,"address","street",2)=VAOA(2)
"RTN","VPRCRPC1",57,0)
 I VAOA(3)]"" S VALUES("nok",CNT,"address","street",3)=VAOA(3)
"RTN","VPRCRPC1",58,0)
 I VAOA(4)]"" S VALUES("nok",CNT,"address","city")=VAOA(4)
"RTN","VPRCRPC1",59,0)
 I VAOA(5)]"" S VALUES("nok",CNT,"address","state")=$P(VAOA(5),U,2)
"RTN","VPRCRPC1",60,0)
 I VAOA(6)]"" S VALUES("nok",CNT,"address","zip")=VAOA(6)
"RTN","VPRCRPC1",61,0)
 I VAOA(8)]"" S VALUES("nok",CNT,"address","phone")=VAOA(8)
"RTN","VPRCRPC1",62,0)
 D KVAR^VADPT
"RTN","VPRCRPC1",63,0)
 Q
"RTN","VPRCRPC1",64,0)
 ;
"RTN","VPRCRPC1",65,0)
GETPATI(RESULT,DFN) ;
"RTN","VPRCRPC1",66,0)
 N TYPE,VALUES,VPRERR,Y
"RTN","VPRCRPC1",67,0)
 D BUILDUID^VPRPARAM(.VALUES,"patient",DFN)
"RTN","VPRCRPC1",68,0)
 D GETDEM(.VALUES,DFN)
"RTN","VPRCRPC1",69,0)
 D GETADD(.VALUES,DFN)
"RTN","VPRCRPC1",70,0)
 F TYPE=1,3 D GETNOK(.VALUES,DFN,TYPE)
"RTN","VPRCRPC1",71,0)
 D GETPATTM(.VALUES,DFN)
"RTN","VPRCRPC1",72,0)
 D GETPATVI(.VALUES,DFN)
"RTN","VPRCRPC1",73,0)
 D GETPATIP(.VALUES,DFN)
"RTN","VPRCRPC1",74,0)
 D PRF^VPRFPTC(DFN,.VALUES)
"RTN","VPRCRPC1",75,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","VPRCRPC1",76,0)
 I Y]"" S VALUES("cwad")=Y
"RTN","VPRCRPC1",77,0)
 I $D(VALUES("patientRecordFlag")) S VALUES("cwad")=$G(VALUES("cwad"))_"F"
"RTN","VPRCRPC1",78,0)
 D PTINQ^ORWPT(.DEM,DFN)
"RTN","VPRCRPC1",79,0)
 S NUM=5,STR=""
"RTN","VPRCRPC1",80,0)
 F  S NUM=$O(@DEM@(NUM)) Q:NUM'>0  D
"RTN","VPRCRPC1",81,0)
 .S VALUES("patDemDetails","text","\",NUM)=@DEM@(NUM)_$C(13,10)
"RTN","VPRCRPC1",82,0)
 .;I STR="" S STR=@DEM@(NUM)
"RTN","VPRCRPC1",83,0)
 .;S STR=STR_"\r\n"_@DEM@(NUM)
"RTN","VPRCRPC1",84,0)
 ;S VALUES("patDemDetails","text")=STR
"RTN","VPRCRPC1",85,0)
 ;S RESULT=$$ENCODE^VPRJSON("VALUES","VPRERR")
"RTN","VPRCRPC1",86,0)
 D ENCODE^VPRJSON("VALUES","RESULT","VPRERR")
"RTN","VPRCRPC1",87,0)
 Q
"RTN","VPRCRPC1",88,0)
 ;
"RTN","VPRCRPC1",89,0)
GETPATIP(VALUES,DFN) ;
"RTN","VPRCRPC1",90,0)
 N VPRDATA
"RTN","VPRCRPC1",91,0)
 D INPLOC^ORWPT(.VPRDATA,DFN)
"RTN","VPRCRPC1",92,0)
 I +VPRDATA S VALUES("inpatientLocation")=$P(VPRDATA,U,2)
"RTN","VPRCRPC1",93,0)
 Q
"RTN","VPRCRPC1",94,0)
 ;
"RTN","VPRCRPC1",95,0)
GETPATVI(VALUES,DFN) ;
"RTN","VPRCRPC1",96,0)
 N DAS,LDATE,VPRTEMP
"RTN","VPRCRPC1",97,0)
 ;get weight
"RTN","VPRCRPC1",98,0)
 S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,9,""),-1)
"RTN","VPRCRPC1",99,0)
 I LDATE>0 D
"RTN","VPRCRPC1",100,0)
 .S DAS=$O(^PXRMINDX(120.5,"PI",DFN,9,LDATE,""))
"RTN","VPRCRPC1",101,0)
 .I DAS']"" Q
"RTN","VPRCRPC1",102,0)
 .D GETDATA^PXRMVITL(DAS,.VPRTEMP)
"RTN","VPRCRPC1",103,0)
 .S VALUES("lastVitals","weight","value")=VPRTEMP("VALUE")
"RTN","VPRCRPC1",104,0)
 .S VALUES("lastVitals","weight","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","VPRCRPC1",105,0)
 ;get height
"RTN","VPRCRPC1",106,0)
 K LDATE,DAS
"RTN","VPRCRPC1",107,0)
 S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,8,""),-1)
"RTN","VPRCRPC1",108,0)
 I LDATE>0 D
"RTN","VPRCRPC1",109,0)
 .S DAS=$O(^PXRMINDX(120.5,"PI",DFN,8,LDATE,""))
"RTN","VPRCRPC1",110,0)
 .I DAS']"" Q
"RTN","VPRCRPC1",111,0)
 .D GETDATA^PXRMVITL(DAS,.VPRTEMP)
"RTN","VPRCRPC1",112,0)
 .S VALUES("lastVitals","height","value")=VPRTEMP("VALUE")
"RTN","VPRCRPC1",113,0)
 .S VALUES("lastVitals","height","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","VPRCRPC1",114,0)
 Q
"RTN","VPRCRPC1",115,0)
GETPATTM(VALUES,DFN) ;
"RTN","VPRCRPC1",116,0)
 N CNT,PROV,TEAM,MH,X,VPRTEAM
"RTN","VPRCRPC1",117,0)
 S PROV=$$OUTPTPR^SDUTL3(DFN)
"RTN","VPRCRPC1",118,0)
 S TEAM=$$OUTPTTM^SDUTL3(DFN)
"RTN","VPRCRPC1",119,0)
 S MH=$$START^SCMCMHTC(DFN)
"RTN","VPRCRPC1",120,0)
 I PROV D
"RTN","VPRCRPC1",121,0)
 .S VALUES("teamInfo","primaryProvider","name")=$P(PROV,U,2)
"RTN","VPRCRPC1",122,0)
 .S VALUES("teamInfo","primaryProvider","analogPager")=$P($G(^VA(200,+PROV,.13)),U,7)
"RTN","VPRCRPC1",123,0)
 .S VALUES("teamInfo","primaryProvider","digitalPager")=$P($G(^VA(200,+PROV,.13)),U,8)
"RTN","VPRCRPC1",124,0)
 .S VALUES("teamInfo","primaryProvider","officelPager")=$P($G(^VA(200,+PROV,.13)),U,2)
"RTN","VPRCRPC1",125,0)
 I 'PROV S VALUES("teamInfo","primaryProvider","name")="unassigned"
"RTN","VPRCRPC1",126,0)
 I TEAM D
"RTN","VPRCRPC1",127,0)
 .S VALUES("teamInfo","team","name")=$P(TEAM,U,2)
"RTN","VPRCRPC1",128,0)
 .S VALUES("teamInfo","team","phone")=$P($G(^SCTM(404.51,+TEAM,0)),U,2)
"RTN","VPRCRPC1",129,0)
 I 'TEAM S VALUES("teamInfo","team","name")="unassigned"
"RTN","VPRCRPC1",130,0)
 S X=$G(^DPT(DFN,.1041))
"RTN","VPRCRPC1",131,0)
 I +X D
"RTN","VPRCRPC1",132,0)
 . S VALUES("teamInfo","attendingProvider","name")=$P($G(^VA(200,+X,0)),U)
"RTN","VPRCRPC1",133,0)
 . S VALUES("teamInfo","attendingProvider","analogPager")=$P($G(^VA(200,+X,.13)),U,7)
"RTN","VPRCRPC1",134,0)
 . S VALUES("teamInfo","attendingProvider","officelPager")=$P($G(^VA(200,+X,.13)),U,8)
"RTN","VPRCRPC1",135,0)
 . S VALUES("teamInfo","attendingProvider","officelPager")=$P($G(^VA(200,+X,.13)),U,2)
"RTN","VPRCRPC1",136,0)
 I '+X S VALUES("teamInfo","attendingProvider","name")="unassigned"
"RTN","VPRCRPC1",137,0)
 I MH D
"RTN","VPRCRPC1",138,0)
 .S VALUES("teamInfo","mhCoordinator","name")=$P(MH,U,2)
"RTN","VPRCRPC1",139,0)
 .S VALUES("teamInfo","mhPosition")=$P(MH,U,3)
"RTN","VPRCRPC1",140,0)
 .S VALUES("teamInfo","mhTeam")=$P(MH,U,5)
"RTN","VPRCRPC1",141,0)
 .S VALUES("teamInfo","mhCoordinator","analogPager")=$P($G(^VA(200,+MH,.13)),U,7)
"RTN","VPRCRPC1",142,0)
 .S VALUES("teamInfo","mhCoordinator","digitalPager")=$P($G(^VA(200,+MH,.13)),U,8)
"RTN","VPRCRPC1",143,0)
 .S VALUES("teamInfo","mhCoordinator","officePhone")=$P($G(^VA(200,+MH,.13)),U,2)
"RTN","VPRCRPC1",144,0)
 .I 'MH D
"RTN","VPRCRPC1",145,0)
 ..S VALUES("teamInfo","mhCoordinator","name")="unassigned"
"RTN","VPRCRPC1",146,0)
 ..S VALUES("teamInfo","mhPosition")="unassigned"
"RTN","VPRCRPC1",147,0)
 ..S VALUES("teamInfo","mhTeam")="unassigned"
"RTN","VPRCRPC1",148,0)
 D PCDETAIL^ORWPT1(.VPRTEAM,DFN)
"RTN","VPRCRPC1",149,0)
 S CNT=0 F  S CNT=$O(VPRTEAM(CNT)) Q:CNT'>0  D
"RTN","VPRCRPC1",150,0)
 .S VALUES("teamInfo","text","\",CNT)=VPRTEAM(CNT)_$C(13,10)
"RTN","VPRCRPC1",151,0)
 Q
"RTN","VPRCRPC1",152,0)
 ;
"RTN","VPRCRPC1",153,0)
GETPOS(VALUES,USER) ;
"RTN","VPRCRPC1",154,0)
 ; this returns the list of position for an user
"RTN","VPRCRPC1",155,0)
 N CNT,NODE,NUM,ROLEIEN,ROLE,TEAM,TEAMIEN,TEAMPHN,VPRLIST,VPRERR
"RTN","VPRCRPC1",156,0)
 ;$$TPPR^SCAPMC(DUZ,SCDATES,SCPURPA,SCROLEA,"LIST",VLRERR)
"RTN","VPRCRPC1",157,0)
 S NUM=$$TPPR^SCAPMC(USER,"","","","",.VLRERR)
"RTN","VPRCRPC1",158,0)
 F CNT=1:1:NUM D
"RTN","VPRCRPC1",159,0)
 .S NODE=$G(^TMP("SC TMP LIST",$J,CNT))
"RTN","VPRCRPC1",160,0)
 .S VALUES("vistaPositions",CNT,"position")=$P(NODE,U,2)
"RTN","VPRCRPC1",161,0)
 .S VALUES("vistaPositions",CNT,"effectiveDate")=$P(NODE,U,5)
"RTN","VPRCRPC1",162,0)
 .S VALUES("vistaPositions",CNT,"inactiveDate")=$P(NODE,U,6)
"RTN","VPRCRPC1",163,0)
 .S TEAMIEN=$P(NODE,U,3)
"RTN","VPRCRPC1",164,0)
 .S TEAM=$$GET1^DIQ(404.51,(+TEAMIEN_","),.01)
"RTN","VPRCRPC1",165,0)
 .S TEAMPHN=$$GET1^DIQ(404.51,(+TEAMIEN_","),.02)
"RTN","VPRCRPC1",166,0)
 .S VALUES("vistaPositions",CNT,"teamName")=TEAM
"RTN","VPRCRPC1",167,0)
 .S VALUES("vistaPositions",CNT,"teamPhone")=TEAMPHN
"RTN","VPRCRPC1",168,0)
 .I $P(NODE,U,9)>0 D
"RTN","VPRCRPC1",169,0)
 .S VALUES("vistaPositions",CNT,"role")=$$GET1^DIQ(8930,($P(NODE,U,9)_","),.01)
"RTN","VPRCRPC1",170,0)
 Q
"RTN","VPRCRPC1",171,0)
 ;
"RTN","VPRCRPC1",172,0)
GETUSERC(VALUES,USER) ;
"RTN","VPRCRPC1",173,0)
 N CNT,EFFDATE,EXPDATE,IND,NODE
"RTN","VPRCRPC1",174,0)
 D WHATIS^USRLM(USER,"LIST",1)
"RTN","VPRCRPC1",175,0)
 ;LIST(Uppername_indicator)=UserClassIEN^MembershipIEN^name^EffectDt^ExpireDt
"RTN","VPRCRPC1",176,0)
 S IND=0,CNT=0 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","VPRCRPC1",177,0)
 .S NODE=LIST(IND)
"RTN","VPRCRPC1",178,0)
 .S EFFDATE=$P(NODE,U,4),EXPDATE=$P(NODE,U,5)
"RTN","VPRCRPC1",179,0)
 .I EFFDATE>0,EFFDATE>DT Q
"RTN","VPRCRPC1",180,0)
 .I EXPDATE>0,EXPDATE<DT Q
"RTN","VPRCRPC1",181,0)
 .S CNT=CNT+1
"RTN","VPRCRPC1",182,0)
 .S VALUES("vistaUserClass",CNT,"role")=$P(NODE,U,3)
"RTN","VPRCRPC1",183,0)
 .S VALUES("vistaUserClass",CNT,"id")=$P(NODE,U)
"RTN","VPRCRPC1",184,0)
 .S VALUES("vistaUserClass",CNT,"effectiveDate")=EFFDATE
"RTN","VPRCRPC1",185,0)
 .S VALUES("vistaUserClass",CNT,"expirationDate")=EXPDATE
"RTN","VPRCRPC1",186,0)
 Q
"RTN","VPRCRPC1",187,0)
 ;
"RTN","VPRCRPC1",188,0)
GETUSERI(RESULT,USER) ;
"RTN","VPRCRPC1",189,0)
 N RPCOPT,VALUES,VPRERR,VPRLIST
"RTN","VPRCRPC1",190,0)
 D BUILDUID^VPRPARAM(.VALUES,"user",USER)
"RTN","VPRCRPC1",191,0)
 S VALUES("timeout")=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","VPRCRPC1",192,0)
 S VALUES("timeoutCounter")=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","VPRCRPC1",193,0)
 D FIND^DIC(19,"",1,"X","VPR UI CONTEXT",1,,,,"VPRLIST")
"RTN","VPRCRPC1",194,0)
 S RPCOPT=$S($D(^VPRLIST("DILIST",0)):-1,1:$P(VPRLIST("DILIST","ID",1,1),"version ",2))
"RTN","VPRCRPC1",195,0)
 ;S VALUES("signingPriv")=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","VPRCRPC1",196,0)
 S VALUES("orderingRole")=$$ORDROLE(USER)
"RTN","VPRCRPC1",197,0)
 S VALUES("hmpVersion")=RPCOPT
"RTN","VPRCRPC1",198,0)
 S VALUES("domain")=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","VPRCRPC1",199,0)
 S VALUES("service")=+$G(^VA(200,USER,5))     ; service/section
"RTN","VPRCRPC1",200,0)
 D GETUSERC(.VALUES,USER)
"RTN","VPRCRPC1",201,0)
 D GETPOS(.VALUES,USER)
"RTN","VPRCRPC1",202,0)
 D GETKEYS(.VALUES,USER)
"RTN","VPRCRPC1",203,0)
 ;S RESULT=$$ENCODE^VPRJSON("VALUES","VPRERR")
"RTN","VPRCRPC1",204,0)
 D ENCODE^VPRJSON("VALUES","RESULT","VPRERR")
"RTN","VPRCRPC1",205,0)
 Q
"RTN","VPRCRPC1",206,0)
 ;
"RTN","VPRCRPC1",207,0)
ORDROLE(USER) ; returns the role a person takes in ordering
"RTN","VPRCRPC1",208,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","VPRCRPC1",209,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","VPRCRPC1",210,0)
 I ($D(^XUSEC("OREMAS",USER))+$D(^XUSEC("ORELSE",USER))+$D(^XUSEC("ORES",USER)))>1 Q 5
"RTN","VPRCRPC1",211,0)
 I $D(^XUSEC("OREMAS",USER)) Q 1                           ; clerk
"RTN","VPRCRPC1",212,0)
 I $D(^XUSEC("ORELSE",USER)) Q 2                           ; nurse
"RTN","VPRCRPC1",213,0)
 I $D(^XUSEC("ORES",USER)),$D(^XUSEC("PROVIDER",USER)) Q 3  ; doctor
"RTN","VPRCRPC1",214,0)
 I $D(^XUSEC("PROVIDER",USER)) Q 4                         ; student
"RTN","VPRCRPC1",215,0)
 Q 0
"RTN","VPRCRPC1",216,0)
 ;
"RTN","VPRDJ1")
0^23^B7627637
"RTN","VPRDJ1",1,0)
VPRDJ1 ;SLC/MKB -- VPR Patient Object RPCs ; 11/2/12 5:45pm
"RTN","VPRDJ1",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRDJ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ1",4,0)
 ;
"RTN","VPRDJ1",5,0)
 ;
"RTN","VPRDJ1",6,0)
PUT(VPR,PAT,TYPE,JSON) ; -- Save/update JSON OBJECT in ^VPR(560.1), return UID if successful
"RTN","VPRDJ1",7,0)
 ; RPC = VPR PUT PATIENT DATA
"RTN","VPRDJ1",8,0)
 ;
"RTN","VPRDJ1",9,0)
 N ARRAY,CNT,ERR,UID,DA,X,I
"RTN","VPRDJ1",10,0)
 ;M JSON=INPUT(0)
"RTN","VPRDJ1",11,0)
 D DECODE^VPRJSON("JSON","ARRAY","ERR")
"RTN","VPRDJ1",12,0)
 I $D(ERR) S X=$G(ERR(1)) K ERR S ERR=X G PTQ
"RTN","VPRDJ1",13,0)
 ;
"RTN","VPRDJ1",14,0)
 S CNT=0
"RTN","VPRDJ1",15,0)
 S UID=$G(ARRAY("uid"))
"RTN","VPRDJ1",16,0)
 I $L(UID) S DA=+$O(^VPR(560.1,"B",UID,0)) I DA<1 S ERR=$$ERR(3,UID) G PTQ
"RTN","VPRDJ1",17,0)
 I '$L(UID) D  G:$D(ERR) PTQ
"RTN","VPRDJ1",18,0)
 . D NEW Q:$D(ERR)
"RTN","VPRDJ1",19,0)
 . S ARRAY("uid")=UID K JSON
"RTN","VPRDJ1",20,0)
 . D ENCODE^VPRJSON("ARRAY","JSON","ERR")
"RTN","VPRDJ1",21,0)
 . I $D(ERR) S X=$G(ERR(1)) K ERR S ERR=X Q
"RTN","VPRDJ1",22,0)
 ;
"RTN","VPRDJ1",23,0)
 K ^VPR(560.1,DA,1) S ^(1,0)="^560.101^^"
"RTN","VPRDJ1",24,0)
 S I="" F  S I=$O(JSON(I)) Q:I=""  S CNT=CNT+1,^VPR(560.1,DA,1,CNT,0)=JSON(I)
"RTN","VPRDJ1",25,0)
 S:$G(CNT) ^VPR(560.1,DA,1,0)="^560.101^"_CNT_U_CNT
"RTN","VPRDJ1",26,0)
 ;
"RTN","VPRDJ1",27,0)
PTQ ; add item count and terminating characters
"RTN","VPRDJ1",28,0)
 I $D(ERR) S VPR="{""apiVersion"":""1.01"",""error"":{""message"":"""_ERR_"""},""success"":false}"
"RTN","VPRDJ1",29,0)
 E  S VPR="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""uid"":"""_UID_"""},""success"":true}"
"RTN","VPRDJ1",30,0)
 Q
"RTN","VPRDJ1",31,0)
 ;
"RTN","VPRDJ1",32,0)
NEW ; -- create new entry in ^VPR(560.1) from PAT,TYPE
"RTN","VPRDJ1",33,0)
 ;  Return UID & DA, or ERR
"RTN","VPRDJ1",34,0)
 N DFN,ICN
"RTN","VPRDJ1",35,0)
 S DFN=+$G(PAT),ICN="",TYPE=$G(TYPE)
"RTN","VPRDJ1",36,0)
 I DFN<1,DFN[";" S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","VPRDJ1",37,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRDJ1",38,0)
 I DFN<1!'$D(^DPT(DFN)) S ERR=$$ERR(1,DFN) Q
"RTN","VPRDJ1",39,0)
 I TYPE="" S ERR=$$ERR(2,"null") Q
"RTN","VPRDJ1",40,0)
 ;
"RTN","VPRDJ1",41,0)
 S DA=$$NEXTIFN I DA<1 S ERR=$$ERR(4) Q
"RTN","VPRDJ1",42,0)
 S UID="urn:va:"_$$SYS^VPRUTILS_":"_DFN_":"_TYPE_":"_DA
"RTN","VPRDJ1",43,0)
 S ^VPR(560.1,DA,0)=UID_U_DFN_U_TYPE
"RTN","VPRDJ1",44,0)
 S ^VPR(560.1,"B",UID,DA)=""
"RTN","VPRDJ1",45,0)
 S ^VPR(560.1,"C",DFN,TYPE,DA)=""
"RTN","VPRDJ1",46,0)
 Q
"RTN","VPRDJ1",47,0)
 ;
"RTN","VPRDJ1",48,0)
NEXTIFN() ; -- Returns next available IFN
"RTN","VPRDJ1",49,0)
 N I,HDR,TOTAL,DA
"RTN","VPRDJ1",50,0)
 L +^VPR(560.1,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","VPRDJ1",51,0)
 I '$T Q "^"
"RTN","VPRDJ1",52,0)
 S HDR=$G(^VPR(560.1,0)),TOTAL=+$P(HDR,U,4),I=$O(^VPR(560.1,"?"),-1)
"RTN","VPRDJ1",53,0)
 F I=(I+1):1 Q:'$D(^VPR(560.1,I,0))
"RTN","VPRDJ1",54,0)
 S DA=I,$P(HDR,U,3,4)=DA_U_(TOTAL+1) S ^VPR(560.1,0)=HDR
"RTN","VPRDJ1",55,0)
 L -^VPR(560.1,0)
"RTN","VPRDJ1",56,0)
 Q DA
"RTN","VPRDJ1",57,0)
 ;
"RTN","VPRDJ1",58,0)
ERR(X,VAL) ; -- return error message
"RTN","VPRDJ1",59,0)
 N MSG  S MSG="Error"
"RTN","VPRDJ1",60,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","VPRDJ1",61,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","VPRDJ1",62,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","VPRDJ1",63,0)
 I X=4  S MSG="Unable to create new object"
"RTN","VPRDJ1",64,0)
 I X=99 S MSG="Unknown request"
"RTN","VPRDJ1",65,0)
 Q MSG
"RTN","VPRDJ1",66,0)
 ;
"RTN","VPRDJ1",67,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","VPRDJ1",68,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","VPRDJ2")
0^26^B11062182
"RTN","VPRDJ2",1,0)
VPRDJ2 ;SLC/MKB -- VPR Object RPCs ; 11/2/12 5:45pm
"RTN","VPRDJ2",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRDJ2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ2",4,0)
 ;
"RTN","VPRDJ2",5,0)
 ;
"RTN","VPRDJ2",6,0)
GET(VPR,FILTER) ; -- Return search results as JSON in @VPR@(n)
"RTN","VPRDJ2",7,0)
 ; RPC = VPR GET OBJECT
"RTN","VPRDJ2",8,0)
 N TYPE,VPRMAX,VPRI,VPRID,VPRERR,IEN
"RTN","VPRDJ2",9,0)
 S VPR=$NA(^TMP("VPR",$J)),VPRI=0 K @VPR
"RTN","VPRDJ2",10,0)
 ;
"RTN","VPRDJ2",11,0)
 ; parse & validate input parameters
"RTN","VPRDJ2",12,0)
 S TYPE=$G(FILTER("collection")),TYPE=$$LOW^XLFSTR(TYPE)
"RTN","VPRDJ2",13,0)
 S VPRMAX=+$G(FILTER("max"),9999) ;??
"RTN","VPRDJ2",14,0)
 S VPRID=$G(FILTER("id"))
"RTN","VPRDJ2",15,0)
 ;
"RTN","VPRDJ2",16,0)
 ;set error trap
"RTN","VPRDJ2",17,0)
 N $ES,$ET,ERRARRY,ERRDOM,ERRPAT,ERRMSG
"RTN","VPRDJ2",18,0)
 ;S $ET="D ERRHDLR^VPRDERRH G ERRQ^VPRDJ0"
"RTN","VPRDJ2",19,0)
 S ERRDOM="vpr",ERRMSG=$G(TYPE)
"RTN","VPRDJ2",20,0)
 K ^TMP($J,"VPR ERROR")
"RTN","VPRDJ2",21,0)
 ;
"RTN","VPRDJ2",22,0)
 ; extract data
"RTN","VPRDJ2",23,0)
 I $L(VPRID) D  G GQ
"RTN","VPRDJ2",24,0)
 . S IEN=+$O(^VPR(560.11,"B",VPRID,0))
"RTN","VPRDJ2",25,0)
 . I IEN D VPR1^VPRDJ02(560.11,IEN)
"RTN","VPRDJ2",26,0)
 I TYPE="" S VPRERR="Missing or invalid collection type" G GQ
"RTN","VPRDJ2",27,0)
 S IEN=0 F  S IEN=$O(^VPR(560.11,"C",TYPE,IEN)) Q:IEN<1  D VPR1^VPRDJ02(560.11,IEN)
"RTN","VPRDJ2",28,0)
 ;
"RTN","VPRDJ2",29,0)
GQ ;build return JSON
"RTN","VPRDJ2",30,0)
 D GTQ^VPRDJ
"RTN","VPRDJ2",31,0)
 Q
"RTN","VPRDJ2",32,0)
 ;
"RTN","VPRDJ2",33,0)
DEL(VPR,VPRID) ; -- Delete object VPRID from ^VPR(560.11)
"RTN","VPRDJ2",34,0)
 Q
"RTN","VPRDJ2",35,0)
 ;
"RTN","VPRDJ2",36,0)
PUT(VPR,TYPE,JSON) ; -- Save/update JSON OBJECT in ^VPR(560.11), return UID if successful
"RTN","VPRDJ2",37,0)
 ; RPC = VPR PUT OBJECT
"RTN","VPRDJ2",38,0)
 ;
"RTN","VPRDJ2",39,0)
 N ARRAY,CNT,ERR,UID,DA,X,I
"RTN","VPRDJ2",40,0)
 D DECODE^VPRJSON("JSON","ARRAY","ERR")
"RTN","VPRDJ2",41,0)
 I $D(ERR) S X=$G(ERR(1)) K ERR S ERR=X G PTQ
"RTN","VPRDJ2",42,0)
 ;
"RTN","VPRDJ2",43,0)
 S CNT=0
"RTN","VPRDJ2",44,0)
 S UID=$G(ARRAY("uid"))
"RTN","VPRDJ2",45,0)
 I $L(UID) S DA=+$O(^VPR(560.11,"B",UID,0)) I DA<1 S ERR=$$ERR(3,UID) G PTQ
"RTN","VPRDJ2",46,0)
 I '$L(UID) D  G:$D(ERR) PTQ
"RTN","VPRDJ2",47,0)
 . D NEW Q:$D(ERR)
"RTN","VPRDJ2",48,0)
 . S ARRAY("uid")=UID K JSON
"RTN","VPRDJ2",49,0)
 . D ENCODE^VPRJSON("ARRAY","JSON","ERR")
"RTN","VPRDJ2",50,0)
 . I $D(ERR) S X=$G(ERR(1)) K ERR S ERR=X Q
"RTN","VPRDJ2",51,0)
 ;
"RTN","VPRDJ2",52,0)
 K ^VPR(560.11,DA,1) S ^(1,0)="^560.111^^"
"RTN","VPRDJ2",53,0)
 S I="" F  S I=$O(JSON(I)) Q:I=""  S CNT=CNT+1,^VPR(560.11,DA,1,CNT,0)=JSON(I)
"RTN","VPRDJ2",54,0)
 S:$G(CNT) ^VPR(560.11,DA,1,0)="^560.111^"_CNT_U_CNT
"RTN","VPRDJ2",55,0)
 ;
"RTN","VPRDJ2",56,0)
PTQ ; add item count and terminating characters
"RTN","VPRDJ2",57,0)
 I $D(ERR) S VPR="{""apiVersion"":""1.01"",""error"":{""message"":"""_ERR_"""},""success"":false}"
"RTN","VPRDJ2",58,0)
 E  S VPR="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""uid"":"""_UID_"""},""success"":true}"
"RTN","VPRDJ2",59,0)
 Q
"RTN","VPRDJ2",60,0)
 ;
"RTN","VPRDJ2",61,0)
NEW ; -- create new entry in ^VPR(560.11) from PAT,TYPE
"RTN","VPRDJ2",62,0)
 ;  Return UID & DA, or ERR
"RTN","VPRDJ2",63,0)
 S TYPE=$G(TYPE)
"RTN","VPRDJ2",64,0)
 I TYPE="" S ERR=$$ERR(2,"null") Q
"RTN","VPRDJ2",65,0)
 ;
"RTN","VPRDJ2",66,0)
 S DA=$$NEXTIFN I DA<1 S ERR=$$ERR(4) Q
"RTN","VPRDJ2",67,0)
 S UID="urn:va:"_TYPE_":"_$$SYS^VPRUTILS_":"_DA
"RTN","VPRDJ2",68,0)
 S ^VPR(560.11,DA,0)=UID_U_U_TYPE
"RTN","VPRDJ2",69,0)
 S ^VPR(560.11,"B",UID,DA)=""
"RTN","VPRDJ2",70,0)
 S ^VPR(560.11,"C",TYPE,DA)=""
"RTN","VPRDJ2",71,0)
 Q
"RTN","VPRDJ2",72,0)
 ;
"RTN","VPRDJ2",73,0)
NEXTIFN() ; -- Returns next available IFN
"RTN","VPRDJ2",74,0)
 N I,HDR,TOTAL,DA
"RTN","VPRDJ2",75,0)
 L +^VPR(560.11,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","VPRDJ2",76,0)
 I '$T Q "^"
"RTN","VPRDJ2",77,0)
 S HDR=$G(^VPR(560.11,0)),TOTAL=+$P(HDR,U,4),I=$O(^VPR(560.11,"?"),-1)
"RTN","VPRDJ2",78,0)
 F I=(I+1):1 Q:'$D(^VPR(560.11,I,0))
"RTN","VPRDJ2",79,0)
 S DA=I,$P(HDR,U,3,4)=DA_U_(TOTAL+1) S ^VPR(560.11,0)=HDR
"RTN","VPRDJ2",80,0)
 L -^VPR(560.11,0)
"RTN","VPRDJ2",81,0)
 Q DA
"RTN","VPRDJ2",82,0)
 ;
"RTN","VPRDJ2",83,0)
ERR(X,VAL) ; -- return error message
"RTN","VPRDJ2",84,0)
 N MSG  S MSG="Error"
"RTN","VPRDJ2",85,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","VPRDJ2",86,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","VPRDJ2",87,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","VPRDJ2",88,0)
 I X=4  S MSG="Unable to create new object"
"RTN","VPRDJ2",89,0)
 I X=99 S MSG="Unknown request"
"RTN","VPRDJ2",90,0)
 Q MSG
"RTN","VPRDJX")
0^21^B15763133
"RTN","VPRDJX",1,0)
VPRDJX ;SLC/MKB -- New data update ; 7/19/12 2:26pm
"RTN","VPRDJX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRDJX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJX",4,0)
 ;
"RTN","VPRDJX",5,0)
 ; External References          DBIA#
"RTN","VPRDJX",6,0)
 ; -------------------          -----
"RTN","VPRDJX",7,0)
 ; ^DPT                         10035
"RTN","VPRDJX",8,0)
 ; MPIF001                       2701
"RTN","VPRDJX",9,0)
 ; XLFSTR                       10104
"RTN","VPRDJX",10,0)
 ;
"RTN","VPRDJX",11,0)
EN(LAST,MAX) ; -- get data from ^XTMP("VPR-<date>",n)
"RTN","VPRDJX",12,0)
 ;[MAX not used yet]
"RTN","VPRDJX",13,0)
 N SYS,X,Y,VPRTOTL,DFN,PATCNT,ICN,DOMCNT,TYPE,NAME,RTN,VPRID,DATA,DELETE,UID,CNT
"RTN","VPRDJX",14,0)
 S LAST=$G(LAST),SYS=$G(FILTER("systemID")) Q:SYS=""
"RTN","VPRDJX",15,0)
 D GETLIST(LAST,SYS) G ENQ:$G(^TMP("VPRX",$J,0))<1 ;no data
"RTN","VPRDJX",16,0)
 ;
"RTN","VPRDJX",17,0)
 S (DFN,PATCNT,VPRTOTL)=0 F  S DFN=$O(^TMP("VPRX",$J,DFN)) Q:DFN<1  D
"RTN","VPRDJX",18,0)
 . S PATCNT=PATCNT+1,ICN=+$$GETICN^MPIF001(DFN),ERRPAT=DFN
"RTN","VPRDJX",19,0)
 . S DOMCNT=0 K DATA,DELETE
"RTN","VPRDJX",20,0)
 . ;
"RTN","VPRDJX",21,0)
 . S TYPE="" F  S TYPE=$O(^TMP("VPRX",$J,DFN,TYPE)) Q:TYPE=""  D
"RTN","VPRDJX",22,0)
 .. S NAME=$$LOW^XLFSTR(TYPE) S:NAME="panel" NAME="lab"
"RTN","VPRDJX",23,0)
 .. S RTN=$$RTN^VPRDJ(NAME)_"^VPRDJ0" Q:'$L($T(@RTN))
"RTN","VPRDJX",24,0)
 .. S DOMCNT=DOMCNT+1
"RTN","VPRDJX",25,0)
 .. ;
"RTN","VPRDJX",26,0)
 .. N VPR,VPRI
"RTN","VPRDJX",27,0)
 .. S VPR=$NA(^TMP("VPR",$J,PATCNT,DOMCNT)),VPRI=0,VPRID=""
"RTN","VPRDJX",28,0)
 .. F  S VPRID=$O(^TMP("VPRX",$J,DFN,TYPE,VPRID)) Q:VPRID=""  S X=$G(^(VPRID)) D
"RTN","VPRDJX",29,0)
 ... I X="@" D DELETE(NAME,DFN,VPRID) Q
"RTN","VPRDJX",30,0)
 ... D @RTN   ;creates @VPR@(VPRI+1)
"RTN","VPRDJX",31,0)
 ... ; if no data assume the record has been deleted
"RTN","VPRDJX",32,0)
 ... ; '$D(@VPR) D DELETE(NAME,DFN,VPRID) Q
"RTN","VPRDJX",33,0)
 ... S VPRTOTL=VPRTOTL+1,DATA=1
"RTN","VPRDJX",34,0)
 .. ;
"RTN","VPRDJX",35,0)
 .. I 'VPRI S DOMCNT=DOMCNT-1 Q   ;no data, or error
"RTN","VPRDJX",36,0)
 .. S:DOMCNT>1 @VPR@(.3)=","
"RTN","VPRDJX",37,0)
 .. S @VPR@(.5)="{""domainName"":"""_NAME_""",""total"":"_VPRI_",""items"":["
"RTN","VPRDJX",38,0)
 .. S VPRI=VPRI+1,@VPR@(VPRI)="]}"
"RTN","VPRDJX",39,0)
 . ;
"RTN","VPRDJX",40,0)
 . I 'DOMCNT S PATCNT=PATCNT-1 Q  ;no data, or error
"RTN","VPRDJX",41,0)
 . S:PATCNT>1 @VPR@(PATCNT,.3)=","
"RTN","VPRDJX",42,0)
 . S @VPR@(PATCNT,.5)="{""patientDfn"":"_DFN_",""patientIcn"":"""_ICN_""",""domains"":["
"RTN","VPRDJX",43,0)
 . S DOMCNT=DOMCNT+1 I '$D(DELETE) S @VPR@(PATCNT,DOMCNT)="]}" Q
"RTN","VPRDJX",44,0)
 . S @VPR@(PATCNT,DOMCNT)="],""deletes"":["
"RTN","VPRDJX",45,0)
 . S UID="",CNT=0 F  S UID=$O(DELETE(UID)) Q:UID=""  D
"RTN","VPRDJX",46,0)
 .. S NAME=DELETE(UID),CNT=CNT+1
"RTN","VPRDJX",47,0)
 .. S @VPR@(PATCNT,DOMCNT,CNT)="{""uid"":"""_UID_""",""domainName"":"""_NAME_"""}"
"RTN","VPRDJX",48,0)
 . S DOMCNT=DOMCNT+1,@VPR@(PATCNT,DOMCNT)="]}"
"RTN","VPRDJX",49,0)
ENQ ;
"RTN","VPRDJX",50,0)
 S Y=$G(^TMP("VPRX",$J,0))
"RTN","VPRDJX",51,0)
 K ^TMP("VPRX",$J),^TMP("VPRTEXT",$J)
"RTN","VPRDJX",52,0)
 I 'PATCNT S @VPR@(.5)="{""apiVersion"":""1.01"",""data"":{""lastUpdate"":"""_LAST_""",""totalItems"":0,""items"":[]}}" Q
"RTN","VPRDJX",53,0)
 ;
"RTN","VPRDJX",54,0)
 S @VPR@(.5)="{""apiVersion"":""1.01"",""data"":{""lastUpdate"":"""_Y_""",""totalItems"":"_PATCNT_",""items"":["
"RTN","VPRDJX",55,0)
 S VPRI=PATCNT I $D(^TMP($J,"VPR ERROR")) D
"RTN","VPRDJX",56,0)
 . N ERROR,CNT
"RTN","VPRDJX",57,0)
 . D BUILDERR^VPRDJ(.ERROR,DFN)
"RTN","VPRDJX",58,0)
 . S VPRI=VPRI+1,@VPR@(VPRI)=",",CNT=0
"RTN","VPRDJX",59,0)
 . F  S CNT=$O(ERROR(CNT)) Q:CNT'>0  S VPRI=VPRI+1,@VPR@(VPRI)=ERROR(CNT)
"RTN","VPRDJX",60,0)
 . K ^TMP($J,"VPR ERROR")
"RTN","VPRDJX",61,0)
 S VPRI=VPRI+1,@VPR@(VPRI)="]}}"
"RTN","VPRDJX",62,0)
 Q
"RTN","VPRDJX",63,0)
 ;
"RTN","VPRDJX",64,0)
DELETE(NAME,DFN,ID) ; -- set DELETE nodes
"RTN","VPRDJX",65,0)
 N X,UID
"RTN","VPRDJX",66,0)
 S X=$$GETDOM^VPRUTILS(NAME)
"RTN","VPRDJX",67,0)
 S UID=$$SETUID^VPRUTILS(X,DFN,ID,"")
"RTN","VPRDJX",68,0)
 S DELETE(UID)=NAME
"RTN","VPRDJX",69,0)
 Q
"RTN","VPRDJX",70,0)
 ;
"RTN","VPRDJX",71,0)
GETLIST(LAST,SYS) ; -- build list of updates for client
"RTN","VPRDJX",72,0)
 ; Returns ^TMP("VPRX",$J,0) = last DATE:SEQ included
"RTN","VPRDJX",73,0)
 ;         ^TMP("VPRX",$J,DFN,TYPE,ID)=ACT
"RTN","VPRDJX",74,0)
 N DATE,SEQ,DA,BEG,END,IDX,X0,DFN,TYPE,ID,ACT
"RTN","VPRDJX",75,0)
 K ^TMP("VPRX",$J)
"RTN","VPRDJX",76,0)
 S DATE=+LAST,SEQ=+$P(LAST,":",2)
"RTN","VPRDJX",77,0)
 S DA=$$FIND^VPRPATS(SYS) Q:'DA
"RTN","VPRDJX",78,0)
 ; generate list ID, and end point
"RTN","VPRDJX",79,0)
 S BEG=$NA(^XTMP("VPR-"_DATE,SEQ))         ;init loop where left off
"RTN","VPRDJX",80,0)
 ; END=$Q(^XTMP("VPR-"_(DT+1),9999999),-1) ;last node
"RTN","VPRDJX",81,0)
 S END=+$O(^XTMP("VPR-"_DT,"A"),-1)        ;last node
"RTN","VPRDJX",82,0)
 S ^TMP("VPRX",$J,0)=DT_":"_END            ;date:seq
"RTN","VPRDJX",83,0)
 ;
"RTN","VPRDJX",84,0)
 S IDX=BEG F  S IDX=$Q(@IDX) Q:$$DONE  D
"RTN","VPRDJX",85,0)
 . S X0=@IDX,DFN=+X0 Q:'$D(^VPR(560,"ADFN",DFN,DA))
"RTN","VPRDJX",86,0)
 . S TYPE=$P(X0,U,2),ID=$P(X0,U,3),ACT=$P(X0,U,4)
"RTN","VPRDJX",87,0)
 . I TYPE=""!(ID="") Q  ;error
"RTN","VPRDJX",88,0)
 . S ^TMP("VPRX",$J,DFN,TYPE,ID)=ACT
"RTN","VPRDJX",89,0)
 Q
"RTN","VPRDJX",90,0)
 ;
"RTN","VPRDJX",91,0)
DONE() ; -- Return 1 or 0, if loop has finished
"RTN","VPRDJX",92,0)
 I IDX'?1"^XTMP(""VPR-"7N.E  Q 1  ;end of ^XTMP
"RTN","VPRDJX",93,0)
 N D,N S D=+$P(IDX,"-",2),N=+$P(IDX,",",2)
"RTN","VPRDJX",94,0)
 ; check VPR-DATE subscript
"RTN","VPRDJX",95,0)
 I D<DT Q 0                       ;prior day: keep going
"RTN","VPRDJX",96,0)
 I D>DT Q 1                       ;next day:  stop loop
"RTN","VPRDJX",97,0)
 ; D=DT: check sequence# subscript
"RTN","VPRDJX",98,0)
 I N>END Q 1
"RTN","VPRDJX",99,0)
 Q 0
"RTN","VPREVNT")
0^9^B63363805
"RTN","VPREVNT",1,0)
VPREVNT ;SLC/MKB -- VistA event listeners
"RTN","VPREVNT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPREVNT",3,0)
 ;
"RTN","VPREVNT",4,0)
 ; External References          DBIA#
"RTN","VPREVNT",5,0)
 ; -------------------          -----
"RTN","VPREVNT",6,0)
 ; DG FIELD MONITOR             +3344
"RTN","VPREVNT",7,0)
 ; DGPM MOVEMENT EVENTS         +1181
"RTN","VPREVNT",8,0)
 ; GMRA ENTERED IN ERROR        +1467
"RTN","VPREVNT",9,0)
 ; GMRA SIGN-OFF ON DATA        +1469
"RTN","VPREVNT",10,0)
 ; GMRC EVSEND OR               +3140
"RTN","VPREVNT",11,0)
 ; LR70 CH EVSEND OR
"RTN","VPREVNT",12,0)
 ; MDC OBSERVATION UPDATE
"RTN","VPREVNT",13,0)
 ; OR EVSEND *
"RTN","VPREVNT",14,0)
 ; PS EVSEND OR                 +2415
"RTN","VPREVNT",15,0)
 ; PXK VISIT DATA EVENT         +1298
"RTN","VPREVNT",16,0)
 ; RA EVSEND OR                 
"RTN","VPREVNT",17,0)
 ; SDAM APPOINTMENT EVENTS      +1320
"RTN","VPREVNT",18,0)
 ; ^AUPNVSIT                     2028
"RTN","VPREVNT",19,0)
 ; ^DPT                         10035
"RTN","VPREVNT",20,0)
 ; ^OR(100                       5771
"RTN","VPREVNT",21,0)
 ; DIQ                           2056
"RTN","VPREVNT",22,0)
 ; GMVUTL                        5046
"RTN","VPREVNT",23,0)
 ; TIUSRVLO                      2834
"RTN","VPREVNT",24,0)
 ; VADPT                        10061
"RTN","VPREVNT",25,0)
 ; VASITE                       10112
"RTN","VPREVNT",26,0)
 ; XLFDT                        10103
"RTN","VPREVNT",27,0)
 ; XTHC10                        5515
"RTN","VPREVNT",28,0)
 ;
"RTN","VPREVNT",29,0)
DG ; -- DG FIELD MONITOR protocol listener
"RTN","VPREVNT",30,0)
 Q:$G(DGFILE)'=2          ;Patient file only
"RTN","VPREVNT",31,0)
 N DFN S DFN=+$G(DGDA)
"RTN","VPREVNT",32,0)
 Q:'$G(^XTMP("VPR",DFN))  ;not subscribed
"RTN","VPREVNT",33,0)
 Q:'$$FLD(+$G(DGFIELD))   ;not a used field
"RTN","VPREVNT",34,0)
 D POST(DFN,"PATIENT",DFN)
"RTN","VPREVNT",35,0)
 Q
"RTN","VPREVNT",36,0)
 ;
"RTN","VPREVNT",37,0)
FLD(X) ; --Return 1 or 0, if X is a field tracked by VPR
"RTN","VPREVNT",38,0)
 S X=U_+$G(X)_U
"RTN","VPREVNT",39,0)
 I "^.01^.02^.03^.05^.08^.09^.351^.364^"[X Q 1              ;demographic
"RTN","VPREVNT",40,0)
 I "^.111^.1112^.112^.113^.114^.115^.131^.132^.134^"[X Q 1  ;addr/phone
"RTN","VPREVNT",41,0)
 I "^.211^.212^.213^.214^.216^.217^.218^.219^"[X Q 1        ;NOK
"RTN","VPREVNT",42,0)
 I "^.301^.302^1901^.32102^.32103^.32201^.5295"[X Q 1       ;serv conn
"RTN","VPREVNT",43,0)
 Q 0
"RTN","VPREVNT",44,0)
 ;
"RTN","VPREVNT",45,0)
DGPM ; -- DGPM MOVEMENT EVENTS protocol listener
"RTN","VPREVNT",46,0)
 ;    [expects DFN,DGPM* variables]
"RTN","VPREVNT",47,0)
 Q:'$G(^XTMP("VPR",DFN))
"RTN","VPREVNT",48,0)
 ;-find visit# for corresponding admission
"RTN","VPREVNT",49,0)
 N ADM,PTF,IDT,ID,ACT
"RTN","VPREVNT",50,0)
 I DGPMA S ADM=+DGPMA,PTF=+$P(DGPMA,U,16)
"RTN","VPREVNT",51,0)
 E  S ADM=+DGPMP,PTF=+$P(DGPMP,U,16)
"RTN","VPREVNT",52,0)
 I DGPMT'=1 D  Q:ADM<1
"RTN","VPREVNT",53,0)
 . N VAIP S VAIP("E")=DGPMDA
"RTN","VPREVNT",54,0)
 . D IN5^VADPT S ADM=+VAIP(13,1),PTF=+VAIP(12)
"RTN","VPREVNT",55,0)
 S IDT=9999999-$P(ADM,".") S:ADM["." IDT=IDT_"."_$P(ADM,".",2)
"RTN","VPREVNT",56,0)
 S ID=+$O(^AUPNVSIT("AAH",DFN,IDT,0)) Q:'ID
"RTN","VPREVNT",57,0)
 S ACT=$S(DGPMA:"",1:"@")
"RTN","VPREVNT",58,0)
 D POST(DFN,"VISIT",ID,ACT)
"RTN","VPREVNT",59,0)
 ; POST(DFN,"PTF",PTF,ACT):DGPMT=3
"RTN","VPREVNT",60,0)
 Q
"RTN","VPREVNT",61,0)
 ;
"RTN","VPREVNT",62,0)
NEWINPT() ; -- is DFN newly admitted?
"RTN","VPREVNT",63,0)
 N Y S Y=0
"RTN","VPREVNT",64,0)
 I DGPMT=1,DGPMA,'DGPMP,+$G(^DPT(DFN,.105))=DGPMDA S Y=1 ;new admission
"RTN","VPREVNT",65,0)
 Q Y
"RTN","VPREVNT",66,0)
 ;
"RTN","VPREVNT",67,0)
SDAM ; -- SDAM APPOINTMENT EVENTS protocol listener
"RTN","VPREVNT",68,0)
 I $G(SDATA) D  Q  ;appointments
"RTN","VPREVNT",69,0)
 . N DFN,DATE,HLOC,STS
"RTN","VPREVNT",70,0)
 . S DFN=+$P(SDATA,U,2) Q:DFN<1
"RTN","VPREVNT",71,0)
 . Q:'$G(^XTMP("VPR",DFN))
"RTN","VPREVNT",72,0)
 . S DATE=+$P(SDATA,U,3),HLOC=+$P(SDATA,U,4)
"RTN","VPREVNT",73,0)
 . D POST(DFN,"APPOINTMENT","A;"_DATE_";"_HLOC)
"RTN","VPREVNT",74,0)
 Q
"RTN","VPREVNT",75,0)
 ;
"RTN","VPREVNT",76,0)
PCE ; -- PXK VISIT DATA EVENT protocol listener
"RTN","VPREVNT",77,0)
 N IEN,PX0,PX150,DFN,DA
"RTN","VPREVNT",78,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","VPREVNT",79,0)
 S PX0=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")) Q:$P(PX0,U,7)="E"
"RTN","VPREVNT",80,0)
 I PX0="" D POST(DFN,"VISIT",IEN,"@") Q  ;deleted
"RTN","VPREVNT",81,0)
 S PX150=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,150,"AFTER")) Q:$P(PX150,U,3)'="P"
"RTN","VPREVNT",82,0)
 S DFN=+$P(PX0,U,5) Q:DFN<1  Q:'$G(^XTMP("VPR",DFN))
"RTN","VPREVNT",83,0)
 D POST(DFN,"VISIT",IEN)
"RTN","VPREVNT",84,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"IMM",DA)) Q:DA<1  D POST(DFN,"IMMUNIZATION",DA)
"RTN","VPREVNT",85,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"HF",DA)) Q:DA<1  D POST(DFN,"FACTOR",DA)
"RTN","VPREVNT",86,0)
 Q
"RTN","VPREVNT",87,0)
 ;
"RTN","VPREVNT",88,0)
XQOR(MSG) ; -- messaging listener (update meds, labs, xrays, consults)
"RTN","VPREVNT",89,0)
 N VPRMSG,VPRPKG,MSH,ORC,DFN
"RTN","VPREVNT",90,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",91,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",92,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))
"RTN","VPREVNT",93,0)
 S VPRPKG=$$TYPE($P(@VPRMSG@(MSH),"|",3))  Q:'$L(VPRPKG)
"RTN","VPREVNT",94,0)
 S DFN=$$PID Q:DFN<1  Q:'$G(^XTMP("VPR",DFN))
"RTN","VPREVNT",95,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E(@VPRMSG@(ORC),1,3)="ORC" D
"RTN","VPREVNT",96,0)
 . N ORDCNTRL,PKGIFN,ORIFN
"RTN","VPREVNT",97,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",98,0)
 . ; QUIT if action failed, conversion, purge, or backdoor verify/new
"RTN","VPREVNT",99,0)
 . I ORDCNTRL["U"!("DE^ZC^ZP^ZR^ZV^SN"[ORDCNTRL) Q
"RTN","VPREVNT",100,0)
 . S ORIFN=+$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","VPREVNT",101,0)
 . ; if order has a parent, use parent# and update entire order
"RTN","VPREVNT",102,0)
 . S ORIFN=$S($P($G(^OR(100,ORIFN,3)),U,9):$P(^(3),U,9),1:ORIFN)
"RTN","VPREVNT",103,0)
 . I $$RESULT D  ;update ancillary domains
"RTN","VPREVNT",104,0)
 .. D POST(DFN,VPRPKG,PKGIFN)
"RTN","VPREVNT",105,0)
 .. D:VPRPKG="RADIOLOGY" POST(DFN,"DOCUMENT",PKGIFN)
"RTN","VPREVNT",106,0)
 . I ORIFN,ORDCNTRL'="ZD" D  ;update order(s)
"RTN","VPREVNT",107,0)
 .. D POST(DFN,"ORDER",ORIFN)
"RTN","VPREVNT",108,0)
 .. N ORIG S ORIG=+$P($G(^OR(100,ORIFN,3)),U,5)
"RTN","VPREVNT",109,0)
 .. I ORIG D POST(DFN,"ORDER",ORIG) ;need fwd ptrs, sig flds
"RTN","VPREVNT",110,0)
 Q
"RTN","VPREVNT",111,0)
 ;
"RTN","VPREVNT",112,0)
RESULT() ; -- Return 1 or 0, if message broadcasts a result
"RTN","VPREVNT",113,0)
 ;           [may modify PKGIFN for use in POST]
"RTN","VPREVNT",114,0)
 N Y S Y=0
"RTN","VPREVNT",115,0)
 I VPRPKG="CONSULT" S Y=1,PKGIFN=+PKGIFN G RQ
"RTN","VPREVNT",116,0)
 I VPRPKG="PHARMACY" S Y=1,PKGIFN=ORIFN G RQ
"RTN","VPREVNT",117,0)
 ; VPRPKG="MED" S Y=1,PKGIFN=PKGIFN_$S(+PKGIFN=PKGIFN:"R;",1:";")_$$PV1
"RTN","VPREVNT",118,0)
 ; VPRPKG="PANEL" S:ORDCNTRL="RE" Y=1,PKGIFN=$P(PKGIFN,";",1,3) G RQ
"RTN","VPREVNT",119,0)
 I VPRPKG="LAB" S:ORDCNTRL="RE" Y=1 G RQ
"RTN","VPREVNT",120,0)
 I VPRPKG="RADIOLOGY" S:PKGIFN["~" Y=1,PKGIFN=$TR($P(PKGIFN,"~",2,3),"~","-") G RQ
"RTN","VPREVNT",121,0)
RQ Q Y
"RTN","VPREVNT",122,0)
 ;
"RTN","VPREVNT",123,0)
NA(MSG) ; -- messaging listener (new backdoor orders)
"RTN","VPREVNT",124,0)
 N VPRMSG,VPRPKG,MSH,ORC,DFN
"RTN","VPREVNT",125,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",126,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",127,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))
"RTN","VPREVNT",128,0)
 S VPRPKG=$$TYPE($P(@VPRMSG@(MSH),"|",3))  Q:'$L(VPRPKG)
"RTN","VPREVNT",129,0)
 S DFN=$$PID Q:DFN<1  Q:'$G(^XTMP("VPR",DFN))
"RTN","VPREVNT",130,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E(@VPRMSG@(ORC),1,3)="ORC" D
"RTN","VPREVNT",131,0)
 . N ORDCNTRL,ORIFN
"RTN","VPREVNT",132,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",133,0)
 . Q:ORDCNTRL'="NA"
"RTN","VPREVNT",134,0)
 . S ORIFN=+$P($P(ORC,"|",3),U) D POST(DFN,"ORDER",ORIFN)
"RTN","VPREVNT",135,0)
 . I VPRPKG="PHARMACY" D POST(DFN,VPRPKG,ORIFN)
"RTN","VPREVNT",136,0)
 Q
"RTN","VPREVNT",137,0)
 ;
"RTN","VPREVNT",138,0)
TYPE(NAME) ; -- Returns type name for XML
"RTN","VPREVNT",139,0)
 I NAME="LABORATORY" Q "LAB"  ;"PANEL"
"RTN","VPREVNT",140,0)
 I NAME="PHARMACY" Q "PHARMACY"
"RTN","VPREVNT",141,0)
 I NAME="CONSULTS" Q "CONSULT"
"RTN","VPREVNT",142,0)
 I NAME="PROCEDURES" Q "CONSULT"
"RTN","VPREVNT",143,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RADIOLOGY"
"RTN","VPREVNT",144,0)
 I NAME="ORDER ENTRY" Q "ORDER"
"RTN","VPREVNT",145,0)
 Q ""
"RTN","VPREVNT",146,0)
 ;
"RTN","VPREVNT",147,0)
PID() ; -- Returns patient from PID segment in current msg
"RTN","VPREVNT",148,0)
 N I,SEG,Y S I=MSH
"RTN","VPREVNT",149,0)
 F  S I=$O(@VPRMSG@(I)) Q:I'>0  S SEG=$E(@VPRMSG@(I),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","VPREVNT",150,0)
 . S Y=+$P(@VPRMSG@(I),"|",4)
"RTN","VPREVNT",151,0)
 .;I '$D(^DPT(Y,0)) S:$L($P(@VPRMSG@(I),"|",5)) Y=+$P(@VPRMSG@(I),"|",5) ;alt ID for Lab
"RTN","VPREVNT",152,0)
 Q Y
"RTN","VPREVNT",153,0)
 ;
"RTN","VPREVNT",154,0)
PV1() ; -- Returns patient class from PV1 segment in current msg
"RTN","VPREVNT",155,0)
 N I,SEG,Y S I=MSH,Y=""
"RTN","VPREVNT",156,0)
 F  S I=$O(@VPRMSG@(I)) Q:I'>0  S SEG=$E(@VPRMSG@(I),1,3) Q:SEG="ORC"  I SEG="PV1" D  Q
"RTN","VPREVNT",157,0)
 . S Y=$P(@VPRMSG@(I),"|",3)
"RTN","VPREVNT",158,0)
 I Y="",$G(ORIFN) S Y=$$GET1^DIQ(100,+ORIFN_",",10,"I")
"RTN","VPREVNT",159,0)
 Q Y
"RTN","VPREVNT",160,0)
 ;
"RTN","VPREVNT",161,0)
GMRA(ACT) ; -- GMRA SIGN-OFF ON DATA protocol listener
"RTN","VPREVNT",162,0)
 ;   also GMRA ENTERED IN ERROR [ACT=@]
"RTN","VPREVNT",163,0)
 N DFN,IEN
"RTN","VPREVNT",164,0)
 S DFN=+$G(GMRAPA(0)),IEN=+$G(GMRAPA)
"RTN","VPREVNT",165,0)
 D POST(DFN,"ALLERGY",IEN,$G(ACT))
"RTN","VPREVNT",166,0)
 Q
"RTN","VPREVNT",167,0)
 ;
"RTN","VPREVNT",168,0)
GMPL(DFN,IEN) ; -- GMPL EVENT protocol listener
"RTN","VPREVNT",169,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",170,0)
 ;N ACT S ACT=$S($P($G(^AUPNPROB(IEN,1)),U,2)="H":"@",1:"")
"RTN","VPREVNT",171,0)
 D POST(DFN,"PROBLEM",IEN) ;,ACT)
"RTN","VPREVNT",172,0)
 Q
"RTN","VPREVNT",173,0)
 ;
"RTN","VPREVNT",174,0)
GMRV(DFN,IEN,ERR) ; -- Vital Measurement file #120.5 AVPR index
"RTN","VPREVNT",175,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",176,0)
 ;. N VPRY
"RTN","VPREVNT",177,0)
 ;. D GETREC^GMVUTL(.VPRY,IEN,1) ;use Date Taken instead,
"RTN","VPREVNT",178,0)
 ;. I $G(VPRY(0)) S IEN=+VPRY(0) ; to get all related results
"RTN","VPREVNT",179,0)
 N ACT S ACT=$S($G(ERR):"@",1:"")
"RTN","VPREVNT",180,0)
 D POST(DFN,"VITAL",IEN,ACT)
"RTN","VPREVNT",181,0)
 Q
"RTN","VPREVNT",182,0)
 ;
"RTN","VPREVNT",183,0)
MDC(OBS) ; -- CLiO OBS file #704.117
"RTN","VPREVNT",184,0)
 N DFN,ID,ACT,TYPE
"RTN","VPREVNT",185,0)
 S DFN=+$G(OBS("PATIENT_ID","I")) Q:DFN<1
"RTN","VPREVNT",186,0)
 S ID=$G(OBS("OBS_ID","I")) Q:'$L(ID)
"RTN","VPREVNT",187,0)
 S ACT=$S('$G(OBS("STATUS","I")):"@",1:"")
"RTN","VPREVNT",188,0)
 S TYPE=$S($G(OBS("DOMAIN","VITALS")):"VITAL",1:"OBSERVATION")
"RTN","VPREVNT",189,0)
 D POST(DFN,TYPE,ID,ACT)
"RTN","VPREVNT",190,0)
 Q
"RTN","VPREVNT",191,0)
 ;
"RTN","VPREVNT",192,0)
CP(DFN,ID,ACT) ; -- CP Transaction file #702 AVPR index
"RTN","VPREVNT",193,0)
 S DFN=+$G(DFN),ID=$G(ID)
"RTN","VPREVNT",194,0)
 D POST(DFN,"PROCEDURE",ID,$G(ACT))
"RTN","VPREVNT",195,0)
 Q
"RTN","VPREVNT",196,0)
 ;
"RTN","VPREVNT",197,0)
SR(DFN,IEN,ACT) ; -- Surgery [SROERR] update
"RTN","VPREVNT",198,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",199,0)
 D POST(DFN,"SURGERY",IEN,$G(ACT))
"RTN","VPREVNT",200,0)
 Q
"RTN","VPREVNT",201,0)
 ;
"RTN","VPREVNT",202,0)
TIU(DFN,IEN) ; -- TIU Document file #8925 AVPR index
"RTN","VPREVNT",203,0)
 N ACT
"RTN","VPREVNT",204,0)
 S DFN=+$G(DFN),IEN=+$G(IEN),ACT=""
"RTN","VPREVNT",205,0)
 ; $$ISADDNDM^TIULC1(IEN) S IEN=+$$GET1^DIQ(8925,IEN_",",.06,"I")
"RTN","VPREVNT",206,0)
 N VPRX S VPRX=$$RESOLVE^TIUSRVLO(IEN)
"RTN","VPREVNT",207,0)
 I $P(VPRX,U,13),$P($P(VPRX,U)," ")="Addendum" S IEN=$P(VPRX,U,13)
"RTN","VPREVNT",208,0)
 I $P(VPRX,U,6)="retracted" S ACT="@"
"RTN","VPREVNT",209,0)
 D POST(DFN,"DOCUMENT",IEN,ACT)
"RTN","VPREVNT",210,0)
 Q
"RTN","VPREVNT",211,0)
 ;
"RTN","VPREVNT",212,0)
POST(DFN,TYPE,ID,ACT) ; -- track updated items
"RTN","VPREVNT",213,0)
 S DFN=+$G(DFN),TYPE=$G(TYPE),ID=$G(ID)
"RTN","VPREVNT",214,0)
 Q:DFN<1  Q:TYPE=""  Q:ID=""  ;incomplete request
"RTN","VPREVNT",215,0)
 Q:'$G(^XTMP("VPR",DFN))      ;patient not subscribed to
"RTN","VPREVNT",216,0)
 S ^XTMP("VPR-"_DT,$$NEXT)=DFN_U_TYPE_U_ID_U_$G(ACT)
"RTN","VPREVNT",217,0)
 Q
"RTN","VPREVNT",218,0)
 ;
"RTN","VPREVNT",219,0)
NEXT() ; -- Return next sequential number in ^XTMP("VPR-DT",n)
"RTN","VPREVNT",220,0)
 L +^XTMP("VPR-"_DT):5 ;I'$T ??
"RTN","VPREVNT",221,0)
 N Y S Y=+$O(^XTMP("VPR-"_DT,"A"),-1)+1
"RTN","VPREVNT",222,0)
 I '$D(^XTMP("VPR-"_DT,0)) S ^(0)=$$FMADD^XLFDT(DT,3)_U_DT_"^VPR Updates"
"RTN","VPREVNT",223,0)
 L -^XTMP("VPR-"_DT)
"RTN","VPREVNT",224,0)
 Q Y
"RTN","VPREVNT",225,0)
 ;
"RTN","VPREVNT",226,0)
CLEAN(BEG,END) ; -- Remove all updates from ^XTMP, for testing
"RTN","VPREVNT",227,0)
 N DATE,SEQ,XTMP,ENDT,ENDS
"RTN","VPREVNT",228,0)
 S BEG=$G(BEG,"0:0"),DATE=+BEG,SEQ=+$P(BEG,":",2)
"RTN","VPREVNT",229,0)
 S XTMP=$NA(^XTMP("VPR-"_DATE,SEQ)) K @XTMP
"RTN","VPREVNT",230,0)
 S END=$G(END,"9999999:999999"),ENDT=+END,ENDS=+$P(END,":",2)
"RTN","VPREVNT",231,0)
 F  S XTMP=$Q(@XTMP) Q:XTMP'?1"^XTMP(""VPR-"7N.E  D
"RTN","VPREVNT",232,0)
 . S DATE=+$P(XTMP,"-",2),SEQ=+$P(XTMP,",",2)
"RTN","VPREVNT",233,0)
 . Q:DATE>ENDT  I DATE<ENDT W !,XTMP Q  ;K @XTMP Q
"RTN","VPREVNT",234,0)
 . I SEQ'>ENDS W !,XTMP ;K @XTMP
"RTN","VPREVNT",235,0)
 Q
"RTN","VPREVNT",236,0)
 ;
"RTN","VPREVNT",237,0)
HTTP(DFN,TYPE,ID) ; -- send message that TYPE/ID has been updated
"RTN","VPREVNT",238,0)
 N DIV,URL,X,VPRX
"RTN","VPREVNT",239,0)
 S DFN=+$G(DFN) Q:DFN<1  ;patient req'd
"RTN","VPREVNT",240,0)
 S DIV=$P($$SITE^VASITE,U,3) ;station number
"RTN","VPREVNT",241,0)
 S URL="http://vhaislbll22.vha.DOMAIN.EXT:8080/vpr/echo?division="_DIV_"&dfn="_+$G(DFN)
"RTN","VPREVNT",242,0)
 I $L($G(TYPE)) S URL=URL_"&type="_TYPE
"RTN","VPREVNT",243,0)
 I $L($G(ID))   S URL=URL_"&id="_ID
"RTN","VPREVNT",244,0)
 S ^XTMP("VPR",DFN,"HTTP")=$H
"RTN","VPREVNT",245,0)
 S X=$$GETURL^XTHC10(URL,,"VPRX")
"RTN","VPREVNT",246,0)
 ; I X>200 = ERROR
"RTN","VPREVNT",247,0)
 Q
"RTN","VPRFPTC")
0^10^B14007897
"RTN","VPRFPTC",1,0)
VPRFPTC ;SLC/MKB,AGP - Patient look-up Utilities at Facility ; 6/06/12
"RTN","VPRFPTC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRFPTC",3,0)
 ;
"RTN","VPRFPTC",4,0)
CHKS(VPR,DFN) ; perform patient select checks
"RTN","VPRFPTC",5,0)
 ;
"RTN","VPRFPTC",6,0)
 N ACCESS,CHKS,CNT,ERR,I,IEN,STR,X,VPRY
"RTN","VPRFPTC",7,0)
 ; check for sensitive record
"RTN","VPRFPTC",8,0)
 S STR="patientChecks"
"RTN","VPRFPTC",9,0)
 S ACCESS=0
"RTN","VPRFPTC",10,0)
 D PTSEC^DGSEC4(.VPRY,DFN)  ;IA #3027
"RTN","VPRFPTC",11,0)
 S ACCESS=1
"RTN","VPRFPTC",12,0)
 I VPRY(1)>0 D
"RTN","VPRFPTC",13,0)
 .S CHKS("sensitive","dfn")=DFN
"RTN","VPRFPTC",14,0)
 .S ACCESS=(VPRY(1)<3)
"RTN","VPRFPTC",15,0)
 .S CHKS("sensitive","mayAccess")=$S(ACCESS=1:"true",1:"false")
"RTN","VPRFPTC",16,0)
 .S CHKS("sensitive","logAccess")=$S(VPRY(1)>1:"true",1:"false")
"RTN","VPRFPTC",17,0)
 .S CNT=2,X=""
"RTN","VPRFPTC",18,0)
 .F  S CNT=$O(VPRY(CNT)) Q:CNT'>0  S X=X_$C(13)_$C(10)_$G(VPRY(CNT))
"RTN","VPRFPTC",19,0)
 .S CHKS("sensitive","text")=X
"RTN","VPRFPTC",20,0)
 ;
"RTN","VPRFPTC",21,0)
 ; check for deceased patient
"RTN","VPRFPTC",22,0)
 I +$G(^DPT(DFN,.35)) D
"RTN","VPRFPTC",23,0)
 . S CHKS("deceased","text")="This patient died on "_$$FMTE^XLFDT(^DPT(DFN,.35),"D")_"."_$C(13)_$C(10)_" Do you wish to continue?"
"RTN","VPRFPTC",24,0)
 ;
"RTN","VPRFPTC",25,0)
 ; check for similar patients
"RTN","VPRFPTC",26,0)
 K VPRY
"RTN","VPRFPTC",27,0)
 N MSG,SIM,SIMPAT,TEXT S MSG=0,SIM=0
"RTN","VPRFPTC",28,0)
 D GUIBS5A^DPTLK6(.VPRY,DFN)  ;IA #3593
"RTN","VPRFPTC",29,0)
 I VPRY(1)>0 D
"RTN","VPRFPTC",30,0)
 .S TEXT=""
"RTN","VPRFPTC",31,0)
 .S I=1 F  S I=$O(VPRY(I)) Q:'I  S X=VPRY(I) D
"RTN","VPRFPTC",32,0)
 .. S SIM=SIM+1
"RTN","VPRFPTC",33,0)
 .. I $E(X)=0 S TEXT=$S($L(TEXT):TEXT_$C(13)_$C(10)_$P(X,U,2),1:$P(X,U,2))
"RTN","VPRFPTC",34,0)
 .. I $E(X)=1 D
"RTN","VPRFPTC",35,0)
 ... ;S CHKS("similar",SIM,"dfn")=$P(X,U,2)
"RTN","VPRFPTC",36,0)
 ... ;S CHKS("similar",SIM,"name")=$P(X,U,3)
"RTN","VPRFPTC",37,0)
 ... ;S CHKS("similar",SIM,"dob")=$$FMTE^XLFDT($P(X,U,4),"D")
"RTN","VPRFPTC",38,0)
 ... ;S CHKS("similar",SIM,"ssn")=$P(X,U,5)
"RTN","VPRFPTC",39,0)
 ... S SIMPAT="Patient Name: "_$P(X,U,3)_" Date of Birth: "_$$FMTE^XLFDT($P(X,U,4),"D")_" SSN: "_$P(X,U,5)
"RTN","VPRFPTC",40,0)
 ... S TEXT=TEXT_$C(13)_$C(10)_SIMPAT
"RTN","VPRFPTC",41,0)
 .S CHKS("similar","text")=TEXT
"RTN","VPRFPTC",42,0)
 ;
"RTN","VPRFPTC",43,0)
 ; possibly check means test: GUIMTD^DPTLK6
"RTN","VPRFPTC",44,0)
 ; possibly check legacy data: I $L($T(HXDATA^A7RDPAGU)...
"RTN","VPRFPTC",45,0)
 ;
"RTN","VPRFPTC",46,0)
 I ACCESS D PRF(DFN,.CHKS)
"RTN","VPRFPTC",47,0)
 S ERR(0)=""
"RTN","VPRFPTC",48,0)
 ;S VPR=$$ENCODE^VPRJSON("CHKS","ERR")
"RTN","VPRFPTC",49,0)
 D ENCODE^VPRJSON("CHKS","VPR","ERR")
"RTN","VPRFPTC",50,0)
 Q
"RTN","VPRFPTC",51,0)
 ;
"RTN","VPRFPTC",52,0)
PRF(DFN,CHKS) ; get Patient Record Flags
"RTN","VPRFPTC",53,0)
 N VPRY,EDI,PRF,N,X
"RTN","VPRFPTC",54,0)
 Q:$$GETACT^DGPFAPI(DFN,"VPRY")'>0
"RTN","VPRFPTC",55,0)
 S EDI=0 F  S EDI=$O(VPRY(EDI)) Q:EDI<1  K PRF D
"RTN","VPRFPTC",56,0)
 . S CHKS("patientRecordFlag",EDI,"assignmentStatus")="Active"
"RTN","VPRFPTC",57,0)
 . S CHKS("patientRecordFlag",EDI,"assignTS")=$P($G(VPRY(EDI,"ASSIGNDT")),U)
"RTN","VPRFPTC",58,0)
 . S CHKS("patientRecordFlag",EDI,"approved")=$P($G(VPRY(EDI,"APPRVBY")),U,2)
"RTN","VPRFPTC",59,0)
 . S CHKS("patientRecordFlag",EDI,"nextReviewDT")=$P($G(VPRY(EDI,"REVIEWDT")),U)
"RTN","VPRFPTC",60,0)
 . S CHKS("patientRecordFlag",EDI,"name")=$P($G(VPRY(EDI,"FLAG")),U,2)
"RTN","VPRFPTC",61,0)
 . S CHKS("patientRecordFlag",EDI,"type")=$P($G(VPRY(EDI,"FLAGTYPE")),U,2)
"RTN","VPRFPTC",62,0)
 . S CHKS("patientRecordFlag",EDI,"category")=$P($G(VPRY(EDI,"CATEGORY")),U,2)
"RTN","VPRFPTC",63,0)
 . S CHKS("patientRecordFlag",EDI,"ownerSite")=$P($G(VPRY(EDI,"OWNER")),U,2)
"RTN","VPRFPTC",64,0)
 . S CHKS("patientRecordFlag",EDI,"originatingSite")=$P($G(VPRY(EDI,"ORIGSITE")),U,2)
"RTN","VPRFPTC",65,0)
 . S N=1,X=$G(VPRY(EDI,"NARR",1,0))
"RTN","VPRFPTC",66,0)
 . F  S N=$O(VPRY(EDI,"NARR",N)) Q:N<1  S X=X_$C(13)_$C(10)_$G(VPRY(EDI,"NARR",N,0))
"RTN","VPRFPTC",67,0)
 . S CHKS("patientRecordFlag",EDI,"text")=X
"RTN","VPRFPTC",68,0)
 Q
"RTN","VPRFPTC",69,0)
 ;
"RTN","VPRFPTC",70,0)
LOG(VPR,DFN) ; Make entry in security log for sensitive patient access
"RTN","VPRFPTC",71,0)
 N ERR,RESULTS,VPRY,X
"RTN","VPRFPTC",72,0)
 D NOTICE^DGSEC4(.VPRY,DFN) ;IA #3027
"RTN","VPRFPTC",73,0)
 S X=$S(VPRY:"ok",1:"fail")
"RTN","VPRFPTC",74,0)
 S RESULTS("result")=X
"RTN","VPRFPTC",75,0)
 ;S VPR=$$ENCODE^VPRJSON("RESULTS","ERR")
"RTN","VPRFPTC",76,0)
 D ENCODE^VPRJSON("RESULTS","VPR","ERR")
"RTN","VPRFPTC",77,0)
 Q
"RTN","VPRFPTC",78,0)
 ;
"RTN","VPRFPTC",79,0)
ENROS(VPR,DFNARRAY) ;PROCESS PATIENTS FROM A ROSTER
"RTN","VPRFPTC",80,0)
 N DFN S DFN=0
"RTN","VPRFPTC",81,0)
 F  S DFN=$O(DFNARRAY(DFN)) Q:DFN'>0  D CHKS(.VPR,DFN)
"RTN","VPRFPTC",82,0)
 Q
"RTN","VPRFPTC",83,0)
 ;
"RTN","VPRFPTC",84,0)
TEST ; 
"RTN","VPRFPTC",85,0)
 S EDPSITE=$$IEN^XUAF4(442),NAME="doe,john"
"RTN","VPRFPTC",86,0)
 D CHKS(1,"",NAME)
"RTN","VPRFPTC",87,0)
 ;N PID S EDPSITE=$$IEN^XUAF4(442)
"RTN","VPRFPTC",88,0)
 ;R "DFN:",PID Q:PID=""  W !
"RTN","VPRFPTC",89,0)
 ;D CHK(1,PID,$P(^DPT(PID,0),U))
"RTN","VPRFPTC",90,0)
 N I S I=0 F  S I=$O(EDPXML(I)) Q:'I  W !,EDPXML(I)
"RTN","VPRFPTC",91,0)
 K EDPXML
"RTN","VPRFPTC",92,0)
 Q
"RTN","VPRFPTC",93,0)
TEST1 ;
"RTN","VPRFPTC",94,0)
 S EDPSITE=$$IEN^XUAF4(442),NAME="doe,john"
"RTN","VPRFPTC",95,0)
 D CHKS(1,"",NAME)
"RTN","VPRFPTC",96,0)
 ;
"RTN","VPRFPTC",97,0)
 ;DO LATER?  -- linked progress notes
"RTN","VPRFPTC",98,0)
 ;D GETTITLE^TIUPRF2(.EDPT,DFN,EDI),GETNOTES^TIUPRF2(.EDPN,DFN,EDPT,1)
"RTN","VPRFPTC",99,0)
 ;I $O(EDPN(0)) D
"RTN","VPRFPTC",100,0)
 ;. D XML^EDPX("<notes>")
"RTN","VPRFPTC",101,0)
 ;. S N=0 F  S N=$O(EDPN(N)) Q:N<1  K PN S X=EDPN(N) D
"RTN","VPRFPTC",102,0)
 ;.. S PN("id")=+X,PN("action")=$P(X,U,2),PN("author")=$P(X,U,4)
"RTN","VPRFPTC",103,0)
 ;.. S PN("noteTS")=9999999-N
"RTN","VPRFPTC",104,0)
 ;.. D TGET^TIUSRVR1(.EDPX,+X)
"RTN","VPRFPTC",105,0)
 ;.. S X=$$XMLA^EDPX("note",.PN),X=$TR(X,"/") D XML^EDPX(X)
"RTN","VPRFPTC",106,0)
 ;.. S I=1,X=$G(@EDPX@(1))
"RTN","VPRFPTC",107,0)
 ;.. F  S I=$O(@EDPX@(I)) Q:I<1  S X=X_$C(13,10)_$G(@EDPX@(I))
"RTN","VPRFPTC",108,0)
 ;.. S X="<text>"_$$ESC^EDPX(X)_"</text>" D XML^EDPX(X)
"RTN","VPRFPTC",109,0)
 ;.. D XML^EDPX("</note>")
"RTN","VPRFPTC",110,0)
 ;. D XML^EDPX("</notes>")
"RTN","VPRHTTP")
0^11^B14174140
"RTN","VPRHTTP",1,0)
VPRHTTP ;SLC/MKB -- HTTP interface
"RTN","VPRHTTP",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRHTTP",3,0)
 ;
"RTN","VPRHTTP",4,0)
 ; External References          DBIA#
"RTN","VPRHTTP",5,0)
 ; -------------------          -----
"RTN","VPRHTTP",6,0)
 ; %ZTLOAD                      10063
"RTN","VPRHTTP",7,0)
 ; DIR                          10026
"RTN","VPRHTTP",8,0)
 ; VASITE                       10112
"RTN","VPRHTTP",9,0)
 ; XLFCRC                        3156
"RTN","VPRHTTP",10,0)
 ; XLFUTL                        2622
"RTN","VPRHTTP",11,0)
 ; XPAR                          2263
"RTN","VPRHTTP",12,0)
 ; XTHC10                        5515
"RTN","VPRHTTP",13,0)
 ; XUPARAM                       2541
"RTN","VPRHTTP",14,0)
 ;
"RTN","VPRHTTP",15,0)
EN ; -- manage the background job
"RTN","VPRHTTP",16,0)
 N ZTSK,STS
"RTN","VPRHTTP",17,0)
 S ZTSK=+$G(^XTMP("VPR","ZTSK")),STS=$$STS
"RTN","VPRHTTP",18,0)
 W !,?24,"--- VPR Patient Data Monitor ---"
"RTN","VPRHTTP",19,0)
 W !!,"Task"_$S(ZTSK:" #"_ZTSK,1:"")_" is "_$P(STS,U,2)_".",!
"RTN","VPRHTTP",20,0)
 ;
"RTN","VPRHTTP",21,0)
 I ZTSK,+STS=1!(+STS=2) D:$$STOP  Q
"RTN","VPRHTTP",22,0)
 . N X S X=$$ASKSTOP^%ZTLOAD(ZTSK)
"RTN","VPRHTTP",23,0)
 . W !,$P(X,U,2),!
"RTN","VPRHTTP",24,0)
 ;
"RTN","VPRHTTP",25,0)
 I $$START D
"RTN","VPRHTTP",26,0)
 . W !!,"Starting VPR Patient Data Monitor ... " D QUE
"RTN","VPRHTTP",27,0)
 . I $G(ZTSK) W "task #"_ZTSK_" started.",!
"RTN","VPRHTTP",28,0)
 . E  W !,"ERROR: task NOT created.  Try again later.",!
"RTN","VPRHTTP",29,0)
 . S ^XTMP("VPR","ZTSK")=$G(ZTSK)
"RTN","VPRHTTP",30,0)
 Q
"RTN","VPRHTTP",31,0)
 ;
"RTN","VPRHTTP",32,0)
STS() ; -- get the status of ZTSK
"RTN","VPRHTTP",33,0)
 D STAT^%ZTLOAD
"RTN","VPRHTTP",34,0)
 N Y S Y=+$G(ZTSK(1))_U_$G(ZTSK(2))
"RTN","VPRHTTP",35,0)
 Q Y
"RTN","VPRHTTP",36,0)
 ;
"RTN","VPRHTTP",37,0)
STOP() ; -- stop the task?
"RTN","VPRHTTP",38,0)
 N X,Y,DIR
"RTN","VPRHTTP",39,0)
 S DIR("A")="Do you want to stop the data monitor? ",DIR(0)="YA",DIR("B")="NO"
"RTN","VPRHTTP",40,0)
 S DIR("?",1)="Enter YES to stop or cancel the data monitor; please restart ASAP!"
"RTN","VPRHTTP",41,0)
 S DIR("?",3)="This job must be running in the background for AViVA to be notified"
"RTN","VPRHTTP",42,0)
 S DIR("?")="when new patient data is available.",DIR("?",2)="  "
"RTN","VPRHTTP",43,0)
 D ^DIR S:Y<1 Y=0
"RTN","VPRHTTP",44,0)
 Q Y
"RTN","VPRHTTP",45,0)
 ;
"RTN","VPRHTTP",46,0)
START() ; -- [re]start the task?
"RTN","VPRHTTP",47,0)
 N X,Y,DIR
"RTN","VPRHTTP",48,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","VPRHTTP",49,0)
 S DIR("A")="Do you want to "_$S(STS:"re",1:"")_"start the data monitor? "
"RTN","VPRHTTP",50,0)
 S DIR("?",1)="Enter YES to "_$S(STS:"re",1:"")_"start the VPR Patient Data Monitor."
"RTN","VPRHTTP",51,0)
 S DIR("?",3)="This job must be running in the background for AViVA to be notified"
"RTN","VPRHTTP",52,0)
 S DIR("?")="when new patient data is available.",DIR("?",2)="  "
"RTN","VPRHTTP",53,0)
 D ^DIR S:Y<1 Y=0
"RTN","VPRHTTP",54,0)
 Q Y
"RTN","VPRHTTP",55,0)
 ;
"RTN","VPRHTTP",56,0)
QUE ; -- create the background task: returns ZTSK
"RTN","VPRHTTP",57,0)
 N IO,IOP,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSAVE,%ZIS
"RTN","VPRHTTP",58,0)
 S %ZIS="0H",IOP="NULL" D ^%ZIS I POP W !,"Null Device Not Found" Q
"RTN","VPRHTTP",59,0)
 S ZTDESC="VPR new data monitor for AViVA",ZTDTH=$H,ZTIO=""
"RTN","VPRHTTP",60,0)
 S ZTRTN="POKE^VPRHTTP" K ZTSK
"RTN","VPRHTTP",61,0)
 D ^%ZTLOAD
"RTN","VPRHTTP",62,0)
 Q
"RTN","VPRHTTP",63,0)
 ;
"RTN","VPRHTTP",64,0)
POKE ; -- background job to poke the client when new data is available
"RTN","VPRHTTP",65,0)
 ; ^XTMP("VPR",DFN,TYPE,ID) = new data since last update
"RTN","VPRHTTP",66,0)
 N DIV,ID,DFN,DATA,IOP,X,DA,TOKEN,NEW K ZTSTOP
"RTN","VPRHTTP",67,0)
 S IOP="NULL" D ^%ZIS
"RTN","VPRHTTP",68,0)
 S ID=(+$H)+$P($H,",",2)
"RTN","VPRHTTP",69,0)
 S DFN=0 F  S DFN=$O(^XTMP("VPR",DFN)) Q:DFN<1  I $D(^(DFN))>9 D
"RTN","VPRHTTP",70,0)
 . L +^XTMP("VPR",DFN):5 Q:'$T  ;try again next cycle
"RTN","VPRHTTP",71,0)
 . K DATA M DATA=^XTMP("VPR",DFN)
"RTN","VPRHTTP",72,0)
 . S X=$G(^XTMP("VPR",DFN)) K ^(DFN) S ^(DFN)=X ;clear list, keep subscription
"RTN","VPRHTTP",73,0)
 . L -^XTMP("VPR",DFN)
"RTN","VPRHTTP",74,0)
 . ; add to list for URL
"RTN","VPRHTTP",75,0)
 . S DA=0 F  S DA=$O(^VPR(560,"ADFN",DFN,DA)) Q:DA<1  D
"RTN","VPRHTTP",76,0)
 .. S TOKEN=DA_"~"_ID,NEW(TOKEN)=""
"RTN","VPRHTTP",77,0)
 .. M ^XTMP("VPRX",TOKEN,DFN)=DATA
"RTN","VPRHTTP",78,0)
 D SEND(.NEW)
"RTN","VPRHTTP",79,0)
 I $$S^%ZTLOAD S ZTSTOP=1,ZTREQ="@" Q
"RTN","VPRHTTP",80,0)
 D HANG S ZTREQ="" ;re-queue
"RTN","VPRHTTP",81,0)
 Q
"RTN","VPRHTTP",82,0)
 ;
"RTN","VPRHTTP",83,0)
SEND(LIST) ; send each list ID to its URL
"RTN","VPRHTTP",84,0)
 N SYS,ID,DA,URL,X
"RTN","VPRHTTP",85,0)
 S SYS=$$SYS
"RTN","VPRHTTP",86,0)
 ; DIV=$P($$SITE^VASITE,U,3) ;station#
"RTN","VPRHTTP",87,0)
 S ID="" F  S ID=$O(LIST(ID)) Q:ID=""  D
"RTN","VPRHTTP",88,0)
 . S DA=+ID,URL=$G(^VPR(560,DA,.1)) Q:URL=""
"RTN","VPRHTTP",89,0)
 . S URL=URL_"?vistaId="_SYS_"&id="_ID
"RTN","VPRHTTP",90,0)
 . S X=$$GETURL^XTHC10(URL,,"VPRX") ;I X>200 = ERROR
"RTN","VPRHTTP",91,0)
 Q
"RTN","VPRHTTP",92,0)
 ;
"RTN","VPRHTTP",93,0)
SYS() ; -- return hashed system name
"RTN","VPRHTTP",94,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","VPRHTTP",95,0)
 ;
"RTN","VPRHTTP",96,0)
HANG ; -- wait #seconds
"RTN","VPRHTTP",97,0)
 N X S X=$$GET^XPAR("ALL","VPR TASK WAIT TIME") S:'X X=99
"RTN","VPRHTTP",98,0)
 H X
"RTN","VPRHTTP",99,0)
 Q
"RTN","VPRHTTP",100,0)
 ;
"RTN","VPRHTTP",101,0)
KILL ; -- kill/reset ^VPR(560) for testing
"RTN","VPRHTTP",102,0)
 K ^VPR(560)
"RTN","VPRHTTP",103,0)
 S ^VPR(560,0)="VPR SUBSCRIPTION^560^^"
"RTN","VPRHTTP",104,0)
 Q
"RTN","VPRIDX")
0^12^B8711715
"RTN","VPRIDX",1,0)
VPRIDX ;SLC/MKB -- Create VPR triggers
"RTN","VPRIDX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRIDX",3,0)
 Q
"RTN","VPRIDX",4,0)
 ;
"RTN","VPRIDX",5,0)
EN ; -- create index triggers
"RTN","VPRIDX",6,0)
 Q:$D(^XTMP("VPR"))  ;not first time
"RTN","VPRIDX",7,0)
 ; GMPL              ;Problems -- GMPL*2*36 provides protocol event
"RTN","VPRIDX",8,0)
 D GMRV              ;Vitals
"RTN","VPRIDX",9,0)
 D TIU               ;TIU
"RTN","VPRIDX",10,0)
 ;
"RTN","VPRIDX",11,0)
 D EN^XPAR("PKG.VIRTUAL PATIENT RECORD","VPR TASK WAIT TIME",1,99)
"RTN","VPRIDX",12,0)
 S ^XTMP("VPR",0)="3991231^3110101^VPR Patient Data Monitor"
"RTN","VPRIDX",13,0)
 Q
"RTN","VPRIDX",14,0)
 ;
"RTN","VPRIDX",15,0)
GMPL ; -- create AVPR index on Problem file #9000011
"RTN","VPRIDX",16,0)
 N VPRX,VPRY
"RTN","VPRIDX",17,0)
 S VPRX("FILE")=9000011,VPRX("NAME")="AVPR"
"RTN","VPRIDX",18,0)
 S VPRX("TYPE")="MU",VPRX("USE")="A"
"RTN","VPRIDX",19,0)
 S VPRX("EXECUTION")="R",VPRX("ACTIVITY")="R"
"RTN","VPRIDX",20,0)
 S VPRX("SHORT DESCR")="Event for VPR"
"RTN","VPRIDX",21,0)
 S VPRX("DESCR",1)="This index invokes a VPR event point when problems are modified."
"RTN","VPRIDX",22,0)
 S VPRX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","VPRIDX",23,0)
 S VPRX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D GMPL^VPREVNT(X,DA)"
"RTN","VPRIDX",24,0)
 S VPRX("KILL")="Q",VPRX("WHOLE KILL")="Q"
"RTN","VPRIDX",25,0)
 S VPRX("VAL",1)=.02 ;Patient
"RTN","VPRIDX",26,0)
 S VPRX("VAL",2)=.03 ;Date Last Modified
"RTN","VPRIDX",27,0)
 D CREIXN^DDMOD(.VPRX,"",.VPRY) ;VPRY=ien^name of index
"RTN","VPRIDX",28,0)
 Q
"RTN","VPRIDX",29,0)
 ;
"RTN","VPRIDX",30,0)
GMRV ; -- create AVPR index on GMRV Measurement file #120.5
"RTN","VPRIDX",31,0)
 N VPRX,VPRY
"RTN","VPRIDX",32,0)
 S VPRX("FILE")=120.5,VPRX("NAME")="AVPR"
"RTN","VPRIDX",33,0)
 S VPRX("TYPE")="MU",VPRX("USE")="A"
"RTN","VPRIDX",34,0)
 S VPRX("EXECUTION")="R",VPRX("ACTIVITY")=""
"RTN","VPRIDX",35,0)
 S VPRX("SHORT DESCR")="Event for VPR"
"RTN","VPRIDX",36,0)
 S VPRX("DESCR",1)="This index invokes a VPR event point when vitals are modified."
"RTN","VPRIDX",37,0)
 S VPRX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","VPRIDX",38,0)
 S VPRX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D GMRV^VPREVNT(X,DA,$G(X3)))"
"RTN","VPRIDX",39,0)
 S VPRX("KILL")="Q",VPRX("WHOLE KILL")="Q"
"RTN","VPRIDX",40,0)
 S VPRX("VAL",1)=.02 ;Patient
"RTN","VPRIDX",41,0)
 S VPRX("VAL",2)=1.2 ;Rate
"RTN","VPRIDX",42,0)
 S VPRX("VAL",3)=2   ;Entered in Error
"RTN","VPRIDX",43,0)
 D CREIXN^DDMOD(.VPRX,"",.VPRY) ;VPRY=ien^name of index
"RTN","VPRIDX",44,0)
 Q
"RTN","VPRIDX",45,0)
 ;
"RTN","VPRIDX",46,0)
TIU ; -- create AVPR index on TIU Document file #8925
"RTN","VPRIDX",47,0)
 N VPRX,VPRY
"RTN","VPRIDX",48,0)
 S VPRX("FILE")=8925,VPRX("NAME")="AVPR"
"RTN","VPRIDX",49,0)
 S VPRX("TYPE")="MU",VPRX("USE")="A"
"RTN","VPRIDX",50,0)
 S VPRX("EXECUTION")="R",VPRX("ACTIVITY")=""
"RTN","VPRIDX",51,0)
 S VPRX("SHORT DESCR")="Event for VPR"
"RTN","VPRIDX",52,0)
 S VPRX("DESCR",1)="This index invokes a VPR event point when documents are modified."
"RTN","VPRIDX",53,0)
 S VPRX("DESCR",2)="No actual cross-reference nodes are set or killed."
"RTN","VPRIDX",54,0)
 S VPRX("SET")="Q:$D(DIU(0))!($G(XDRDVALF)=1)  D:X(2)>5 TIU^VPREVNT(X,DA)"
"RTN","VPRIDX",55,0)
 S VPRX("KILL")="Q",VPRX("WHOLE KILL")="Q"
"RTN","VPRIDX",56,0)
 S VPRX("VAL",1)=.02 ;Patient
"RTN","VPRIDX",57,0)
 S VPRX("VAL",2)=.05 ;Status
"RTN","VPRIDX",58,0)
 D CREIXN^DDMOD(.VPRX,"",.VPRY) ;VPRY=ien^name of index
"RTN","VPRIDX",59,0)
 Q
"RTN","VPRP3I")
0^^B15285783
"RTN","VPRP3I",1,0)
VPRP3I ;SLC/AGP -- VPR patch 3 post install
"RTN","VPRP3I",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRP3I",3,0)
 ;
"RTN","VPRP3I",4,0)
ENV ; -- environment check to prevent production installation
"RTN","VPRP3I",5,0)
 I $$PROD^XUPROD D
"RTN","VPRP3I",6,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","VPRP3I",7,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","VPRP3I",8,0)
 .S XPDABORT=1
"RTN","VPRP3I",9,0)
 Q
"RTN","VPRP3I",10,0)
 ;
"RTN","VPRP3I",11,0)
PRE ; -- clean out VPR SUBSCRIPTION and ^XTMP("VPR") entries for testing
"RTN","VPRP3I",12,0)
 N VPRDT S VPRDT="VPR-1111111"
"RTN","VPRP3I",13,0)
 F  S VPRDT=$O(^XTMP(VPRDT)) Q:VPRDT'?1"VPR-"7N  K ^XTMP(VPRDT)
"RTN","VPRP3I",14,0)
 K ^XTMP("VPR"),^TMP("VPRX"),^VPR(560)
"RTN","VPRP3I",15,0)
 S ^VPR(560,0)="VPR SUBSCRIPTION^560^^"
"RTN","VPRP3I",16,0)
 ;D CLEARPAR
"RTN","VPRP3I",17,0)
PRE1 I $D(^VPRD(562)) D  ;prepare to move file #562 -> #560.1
"RTN","VPRP3I",18,0)
 . L +^VPRD(562,0):3 ;I'$T ??
"RTN","VPRP3I",19,0)
 . K ^XTMP("VPRP3") M ^XTMP("VPRP3")=^VPRD(562)
"RTN","VPRP3I",20,0)
 . N DIU S DIU=562,DIU(0)="D" D EN^DIU2
"RTN","VPRP3I",21,0)
 . L -^VPRD(562,0)
"RTN","VPRP3I",22,0)
 Q
"RTN","VPRP3I",23,0)
 ;
"RTN","VPRP3I",24,0)
ASK(FILENUM) ;
"RTN","VPRP3I",25,0)
 N DIC,Y
"RTN","VPRP3I",26,0)
 S DIC=FILENUM,DIC(0)="AEQMZ",DIC("A")="Select "_$S(FILENUM=4:"division: ",1:"service/section: ")
"RTN","VPRP3I",27,0)
 I FILENUM=4 S DIC("S")="S DINUM=X K:$S($D(^XUSEC(""XUMGR"",DUZ)):0,'$$TF^XUAF4(X):1,1:0) X,DINUM"
"RTN","VPRP3I",28,0)
 D ^DIC
"RTN","VPRP3I",29,0)
 Q Y
"RTN","VPRP3I",30,0)
 ;
"RTN","VPRP3I",31,0)
CLEARPAR ;
"RTN","VPRP3I",32,0)
 N ENT,ERROR,INST,LIST,PAR,TYPE,X,UID
"RTN","VPRP3I",33,0)
 ;S PAR="" F  S PAR=$O(^XTV(8989.51,"B","VPR PARAMETERS","")) I PAR>0 Q
"RTN","VPRP3I",34,0)
 S PAR=$O(^XTV(8989.51,"B","VPR PARAMETERS","")) Q:PAR'>0
"RTN","VPRP3I",35,0)
 S X="" F  S X=$O(^XTV(8989.5,"AC",PAR,X)) Q:X=""  D
"RTN","VPRP3I",36,0)
 .S TYPE=$S(X["VA":"USR",X["DIC":"SYS",1:"") I TYPE="" Q
"RTN","VPRP3I",37,0)
 .S ENT=TYPE_".`"_+X
"RTN","VPRP3I",38,0)
 .S UID="" F  S UID=$O(^XTV(8989.5,"AC",PAR,X,UID)) Q:UID=""  D
"RTN","VPRP3I",39,0)
 ..D DEL^XPAR(ENT,"VPR PARAMETERS",UID,.ERROR)
"RTN","VPRP3I",40,0)
 Q
"RTN","VPRP3I",41,0)
 ;
"RTN","VPRP3I",42,0)
CREATEUS ;
"RTN","VPRP3I",43,0)
 N DIV,FDA,IC,IEN,IENS,NAME,SER,VPRERR
"RTN","VPRP3I",44,0)
 ;do not create the user if the patch is already installed or if the user is already created
"RTN","VPRP3I",45,0)
 I $$PATCH^XPDUTL("VPR*1.0*3") Q
"RTN","VPRP3I",46,0)
 D EN^DDIOL("Creating VPR Sync User")
"RTN","VPRP3I",47,0)
 ;
"RTN","VPRP3I",48,0)
 S NAME="VPR,USER SYNC"
"RTN","VPRP3I",49,0)
 S IEN=$$CREATE^XUSAP(NAME,"","VPR SYNCHRONIZATION CONTEXT")
"RTN","VPRP3I",50,0)
 I IEN=0 D EN^DDIOL("User already exists") Q
"RTN","VPRP3I",51,0)
 I IEN<0 D EN^DDIOL("Cannot create user") Q
"RTN","VPRP3I",52,0)
 S IENS="?"_IEN_","
"RTN","VPRP3I",53,0)
 S DIV=$$ASK(4) I DIV'>0 D EN^DDIOL("A division needs to be selected.") Q
"RTN","VPRP3I",54,0)
 S SER=$$ASK(49) I SER'>0 D EN^DDIOL("A service needs to be selected.") Q
"RTN","VPRP3I",55,0)
 S FDA(200,IENS,.01)=NAME
"RTN","VPRP3I",56,0)
 S FDA(200,IENS,7.2)=1
"RTN","VPRP3I",57,0)
 S FDA(200,IENS,29)=$P(SER,U)
"RTN","VPRP3I",58,0)
 S FDA(200,IENS,200.04)=1
"RTN","VPRP3I",59,0)
 S FDA(200,IENS,200.1)=99999
"RTN","VPRP3I",60,0)
 ;S FDA(200.03,"?+2,"_IENS,.01)="VPR SYNCHRONIZATION CONTEXT"
"RTN","VPRP3I",61,0)
 ;S FDA(200.03,"?+3,"_IENS,.01)="VPR UI CONTEXT"
"RTN","VPRP3I",62,0)
 S FDA(200.02,"?+4,"_IENS,.01)=$P(DIV,U)
"RTN","VPRP3I",63,0)
 S FDA(200.02,"?+4,"_IENS,1)=1
"RTN","VPRP3I",64,0)
 D UPDATE^DIE("","FDA","","VPRERR")
"RTN","VPRP3I",65,0)
 I $D(VPRERR) D  Q
"RTN","VPRP3I",66,0)
 .D EN^DDIOL("Update failed, UPDATE^DIE returned the following error message.")
"RTN","VPRP3I",67,0)
 .S IC="VPRERR"
"RTN","VPRP3I",68,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","VPRP3I",69,0)
 .D EN^DDIOL("Examine the above error message for the reason.")
"RTN","VPRP3I",70,0)
 .H 2
"RTN","VPRP3I",71,0)
 D EN^DDIOL("Add ACCESS/VERIFY codes to the "_NAME)
"RTN","VPRP3I",72,0)
 Q
"RTN","VPRP3I",73,0)
 ;
"RTN","VPRP3I",74,0)
POST ;
"RTN","VPRP3I",75,0)
 ;D CREATEUS
"RTN","VPRP3I",76,0)
 D MOVE
"RTN","VPRP3I",77,0)
 Q
"RTN","VPRP3I",78,0)
 ;
"RTN","VPRP3I",79,0)
MOVE ; -- move VPR Object file from 562->560.1
"RTN","VPRP3I",80,0)
 Q:'$D(^XTMP("VPRP3"))
"RTN","VPRP3I",81,0)
 N I S I=0
"RTN","VPRP3I",82,0)
 S $P(^VPR(560.1,0),U,3,4)=$P(^XTMP("VPRP3",0),U,3,4)
"RTN","VPRP3I",83,0)
 F  S I=$O(^XTMP("VPRP3",I)) Q:I<1  D
"RTN","VPRP3I",84,0)
 . M ^VPR(560.1,I)=^XTMP("VPRP3",I)
"RTN","VPRP3I",85,0)
 . S:$D(^VPR(560.1,I,1,0)) $P(^VPR(560.1,I,1,0),U,2)="560.101"
"RTN","VPRP3I",86,0)
 F I="B","C" M ^VPR(560.1,I)=^XTMP("VPRP3",I)
"RTN","VPRP3I",87,0)
 K ^XTMP("VPRP3")
"RTN","VPRP3I",88,0)
 Q
"RTN","VPRP3I",89,0)
 ;
"RTN","VPRP3I",90,0)
TESTM1 ; -- check results of MOVE
"RTN","VPRP3I",91,0)
 N I S I=0
"RTN","VPRP3I",92,0)
 F  S I=$O(^VPR(560.1,I)) Q:I<1  D
"RTN","VPRP3I",93,0)
 . I $G(^VPR(560.1,I,0))'=$G(^XTMP("VPRP3",I,0)) W !,I
"RTN","VPRP3I",94,0)
 . I $G(^VPR(560.1,I,1,1,0))'=$G(^XTMP("VPRP3",I,1,1,0)) W !,I
"RTN","VPRP3I",95,0)
 Q
"RTN","VPRP3I",96,0)
 ;
"RTN","VPRP3I",97,0)
TESTM2 ; -- check results of MOVE
"RTN","VPRP3I",98,0)
 N I S I=0
"RTN","VPRP3I",99,0)
 F  S I=$O(^XTMP("VPRP3",I)) Q:I<1  D
"RTN","VPRP3I",100,0)
 . I $G(^VPR(560.1,I,0))'=$G(^XTMP("VPRP3",I,0)) W !,I
"RTN","VPRP3I",101,0)
 . I $G(^VPR(560.1,I,1,1,0))'=$G(^XTMP("VPRP3",I,1,1,0)) W !,I
"RTN","VPRP3I",102,0)
 Q
"RTN","VPRPANEL")
0^13^B9307129
"RTN","VPRPANEL",1,0)
VPRPANEL ;SLC/GRR -- Reminder List processing
"RTN","VPRPANEL",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRPANEL",3,0)
 ;
"RTN","VPRPANEL",4,0)
 ; External References          DBIA#
"RTN","VPRPANEL",5,0)
 ; -------------------          -----
"RTN","VPRPANEL",6,0)
 ;
"RTN","VPRPANEL",7,0)
 ; ------------ Get Panel(s) from VistA ------------
"RTN","VPRPANEL",8,0)
 ;
"RTN","VPRPANEL",9,0)
EN(VPR) ; -- find Panels to update
"RTN","VPRPANEL",10,0)
 K ^TMP($J,"VPRPANEL")
"RTN","VPRPANEL",11,0)
 N VPRPAN,VPRPAT,VPRI
"RTN","VPRPANEL",12,0)
 S VPR=$NA(^TMP($J,"VPR")),VPRC=0,VPRT=0
"RTN","VPRPANEL",13,0)
 F  S VPRC=$O(^VPROSTER(VPRC)) Q:VPRC'>0  D
"RTN","VPRPANEL",14,0)
 . S VPRT=VPRT+1
"RTN","VPRPANEL",15,0)
 . S VPRPAN(VPRC)=^VPROSTER(VPRC,0) D
"RTN","VPRPANEL",16,0)
 . N LIEN,PLNAME S LIEN=+$P(VPRPAN(VPRC),"^",2),PLNAME=$P(VPRPAN(VPRC),U,1)
"RTN","VPRPANEL",17,0)
 . ;agp need to determine what secure and over should be set to
"RTN","VPRPANEL",18,0)
 . S SECURE=0,OVER=1
"RTN","VPRPANEL",19,0)
 . D RUNLIST(.VPRPAN,LIEN,PLNAME,SECURE,OVER)
"RTN","VPRPANEL",20,0)
CREATE ; -- create panel(s) in XML
"RTN","VPRPANEL",21,0)
 N VPRVER S VPRVER="<results version='"_$P($T(VPRPANEL+1),";",3)_"'>"
"RTN","VPRPANEL",22,0)
 N VPRTTXT S VPRTTXT="<panels total='"_VPRT_"'>"
"RTN","VPRPANEL",23,0)
 D ADD(VPRVER),ADD(VPRTTXT)
"RTN","VPRPANEL",24,0)
 D PANEL
"RTN","VPRPANEL",25,0)
 S TEXT="</results>" D ADD(TEXT)
"RTN","VPRPANEL",26,0)
 Q
"RTN","VPRPANEL",27,0)
 ;
"RTN","VPRPANEL",28,0)
PANEL ;-- create panel XML
"RTN","VPRPANEL",29,0)
 S VPRC=0 F  S VPRC=$O(VPRPAN(VPRC)) Q:VPRC'>0  D
"RTN","VPRPANEL",30,0)
 .D ADD("<panel>")
"RTN","VPRPANEL",31,0)
 .N TEXT S TEXT="<panel name='"_$P(VPRPAN(VPRC),"^",2)_"' />" D ADD(TEXT)
"RTN","VPRPANEL",32,0)
 .S TEXT="<panelString code='"_$P(VPRPAN(VPRC),"^")_"' />" D ADD(TEXT)
"RTN","VPRPANEL",33,0)
 .D PATS
"RTN","VPRPANEL",34,0)
 .S TEXT="</panel>" D ADD(TEXT)
"RTN","VPRPANEL",35,0)
 S TEXT="</panels>" D ADD(TEXT)
"RTN","VPRPANEL",36,0)
 Q
"RTN","VPRPANEL",37,0)
 ;
"RTN","VPRPANEL",38,0)
CREATEPL(PLNAME,SECURE,OVER) ;
"RTN","VPRPANEL",39,0)
 N FDA,IENS,NAME,NUM,RESULT,UNIQUE
"RTN","VPRPANEL",40,0)
 S (NUM,RESULT,UNIQUE)=0
"RTN","VPRPANEL",41,0)
 ;if overwrite check to see if the list exist
"RTN","VPRPANEL",42,0)
 I OVER=1 S RESULT=$O(^PXRMXP(810.5,"B",PLNAME,""))
"RTN","VPRPANEL",43,0)
 I RESULT>0 Q RESULT
"RTN","VPRPANEL",44,0)
 S NAME=PLNAME
"RTN","VPRPANEL",45,0)
 ;if not overwrite find unique name
"RTN","VPRPANEL",46,0)
 I OVER=0 D
"RTN","VPRPANEL",47,0)
 .I $D(^PXRMXP(810.5,"B",NAME))=0 Q
"RTN","VPRPANEL",48,0)
 .F  Q:UNIQUE=1  D
"RTN","VPRPANEL",49,0)
 ..S NUM=NUM+1
"RTN","VPRPANEL",50,0)
 ..S NAME=PLNAME_" ("_NUM_")"
"RTN","VPRPANEL",51,0)
 ..I $D(^PXRMXP(810.5,"B",NAME))=0 S UNIQUE=1
"RTN","VPRPANEL",52,0)
 ;create stub in 810.5
"RTN","VPRPANEL",53,0)
 S IENS="+1,"
"RTN","VPRPANEL",54,0)
 S FDA(810.5,IENS,.01)=NAME
"RTN","VPRPANEL",55,0)
 S FDA(810.5,IENS,100)="L"
"RTN","VPRPANEL",56,0)
 S FDA(810.5,IENS,.07)=DUZ
"RTN","VPRPANEL",57,0)
 S FDA(810.5,IENS,.08)=$S(SECURE=0:"PUB",1:"PVT")
"RTN","VPRPANEL",58,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","VPRPANEL",59,0)
 ;if error display message and quit
"RTN","VPRPANEL",60,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") Q 0
"RTN","VPRPANEL",61,0)
 S RESULT=$O(^PXRMXP(810.5,"B",NAME,""))
"RTN","VPRPANEL",62,0)
 Q RESULT
"RTN","VPRPANEL",63,0)
 ;
"RTN","VPRPANEL",64,0)
RUNLIST(VPRPAN,LIEN,PLNAME,SECURE,OVER) ;
"RTN","VPRPANEL",65,0)
 N PLIEN
"RTN","VPRPANEL",66,0)
 S PLIEN=$$CREATEPL(PLNAME,SECURE,OVER)
"RTN","VPRPANEL",67,0)
 S PATCREAT=$S(SECURE=1:"Y",1:0),PLISTPUG=1
"RTN","VPRPANEL",68,0)
 I PLIEN=0 Q
"RTN","VPRPANEL",69,0)
 D RUN^PXRMLCR(LIEN,PLIEN,"PXRMRULE",DT,DT,0,0)
"RTN","VPRPANEL",70,0)
 N VPRPAT S VPRPAT=0
"RTN","VPRPANEL",71,0)
 F  S VPRPAT=$O(^PXRMXP(810.5,PLIEN,30,VPRPAT)) Q:VPRPAT'>0  S VPRPAN(VPRC,VPRPAT)=$P($G(^PXRMXP(810.5,PLIEN,30,VPRPAT,0)),"^",1)
"RTN","VPRPANEL",72,0)
 Q
"RTN","VPRPANEL",73,0)
 ;
"RTN","VPRPANEL",74,0)
PATS ; -- create patient XML
"RTN","VPRPANEL",75,0)
 S TEXT="<patients>" D ADD(TEXT)
"RTN","VPRPANEL",76,0)
 S VPRPAT=0 F  S VPRPAT=$O(VPRPAN(VPRC,VPRPAT)) D  Q:VPRPAT'>0
"RTN","VPRPANEL",77,0)
 .I VPRPAT'>0 S TEXT="</patients>" D ADD(TEXT) Q
"RTN","VPRPANEL",78,0)
 .S TEXT="<patient code='"_VPRPAN(VPRC,VPRPAT)_"' />" D ADD(TEXT)
"RTN","VPRPANEL",79,0)
 ;
"RTN","VPRPANEL",80,0)
 ;
"RTN","VPRPANEL",81,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRPANEL",82,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRPANEL",83,0)
 S @VPR@(VPRI)=X
"RTN","VPRPANEL",84,0)
 Q
"RTN","VPRPANEL",85,0)
 ;
"RTN","VPRPANEL",86,0)
NITELY ; -- Nightly run to update all Panels
"RTN","VPRPANEL",87,0)
 ; 
"RTN","VPRPARAM")
0^22^B12487700
"RTN","VPRPARAM",1,0)
VPRPARAM ; SLC/AGP - Parameter routine. ; 10/4/12 7:04pm
"RTN","VPRPARAM",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRPARAM",3,0)
 Q
"RTN","VPRPARAM",4,0)
 ;
"RTN","VPRPARAM",5,0)
 ;
"RTN","VPRPARAM",6,0)
BLDENT(UID,ENTITY) ;
"RTN","VPRPARAM",7,0)
 ;urn:va:param:F484:1120:VPR USER PREF
"RTN","VPRPARAM",8,0)
 ;urn:va:param:F484:1120:VPR ROSTER PREF:13
"RTN","VPRPARAM",9,0)
 ;urn:va:param:F484:SYS:VPR USER PREF
"RTN","VPRPARAM",10,0)
 S ENTITY("uid")=UID
"RTN","VPRPARAM",11,0)
 I +$P(UID,":",5)>0 D  Q
"RTN","VPRPARAM",12,0)
 .S ENTITY("entity")="USR"
"RTN","VPRPARAM",13,0)
 .S ENTITY("entityId")=$P(UID,":",5)
"RTN","VPRPARAM",14,0)
 S ENTITY("entity")="SYS"
"RTN","VPRPARAM",15,0)
 Q
"RTN","VPRPARAM",16,0)
 ;
"RTN","VPRPARAM",17,0)
BUILDUID(VALUES,TYPE,ID) ;
"RTN","VPRPARAM",18,0)
 N DOMAIN
"RTN","VPRPARAM",19,0)
 S DOMAIN=$$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","VPRPARAM",20,0)
 S VALUES("uid")="urn:va:"_TYPE_":"_DOMAIN_":"_ID
"RTN","VPRPARAM",21,0)
 Q
"RTN","VPRPARAM",22,0)
 ;
"RTN","VPRPARAM",23,0)
DELPARAM(RESULT,UID) ;
"RTN","VPRPARAM",24,0)
 N ARRAY,ENT,ENTITY,ENTVALUE,ERR,STR,VPRERR
"RTN","VPRPARAM",25,0)
 D BLDENT(UID,.ARRAY)
"RTN","VPRPARAM",26,0)
 ;delete old parameter
"RTN","VPRPARAM",27,0)
 S ENTITY=ARRAY("entity")
"RTN","VPRPARAM",28,0)
 S ENTVALUE=ARRAY("entityId")
"RTN","VPRPARAM",29,0)
 S ENT=$S($G(ENTVALUE)>0:ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","VPRPARAM",30,0)
 I $G(ARRAY("uid"))="" Q
"RTN","VPRPARAM",31,0)
 I $G(ENT)="" Q
"RTN","VPRPARAM",32,0)
 D DEL^XPAR(ENT,"VPR PARAMETERS",ARRAY("uid"),.VPRERR)
"RTN","VPRPARAM",33,0)
 Q
"RTN","VPRPARAM",34,0)
 ;
"RTN","VPRPARAM",35,0)
GETALPAR(JSONRES,ENTITY,ENTVALUE,RETVALUE) ;
"RTN","VPRPARAM",36,0)
 N CNT,DECODE,ENT,GETVAL,INST,PARAM,RESULT,VPRERR,VPRLIST
"RTN","VPRPARAM",37,0)
 S ENT=$S($G(ENTVALUE)'="":ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","VPRPARAM",38,0)
 D GETLST^XPAR(.VPRLIST,ENT,"VPR PARAMETERS","I")
"RTN","VPRPARAM",39,0)
 I VPRLIST=0 Q
"RTN","VPRPARAM",40,0)
 S GETVAL=$S(RETVALUE="true":1,1:0)
"RTN","VPRPARAM",41,0)
 I GETVAL=0 D   Q
"RTN","VPRPARAM",42,0)
 .S CNT=0,INST="" F  S INST=$O(VPRLIST(INST)) Q:INST=""  S JSONRES(CNT)=INST,CNT=CNT+1
"RTN","VPRPARAM",43,0)
 S CNT=0,INST="" F  S INST=$O(VPRLIST(INST)) Q:INST=""  D
"RTN","VPRPARAM",44,0)
 .S CNT=CNT+1
"RTN","VPRPARAM",45,0)
 .S RESULT("params",CNT,"uid")=INST
"RTN","VPRPARAM",46,0)
 .D GETPARAM(.PARAM,"VPR PARAMETERS",ENTITY,ENTVALUE,INST)
"RTN","VPRPARAM",47,0)
 .I '$D(PARAM) Q
"RTN","VPRPARAM",48,0)
 .M RESULT("params",CNT,"value",":")=PARAM
"RTN","VPRPARAM",49,0)
 .;K DECODE
"RTN","VPRPARAM",50,0)
 .;D DECODE^VPRJSON("PARAM","DECODE","VPRERR")
"RTN","VPRPARAM",51,0)
 .;;S RESULT("param",CNT,"value")=PARAM
"RTN","VPRPARAM",52,0)
 .;M RESULT("param",CNT)=DECODE
"RTN","VPRPARAM",53,0)
 .K PARAM
"RTN","VPRPARAM",54,0)
 I '$D(RESULT) Q ""
"RTN","VPRPARAM",55,0)
 ;S JSONRES=$$ENCODE^VPRJSON("RESULT","VPRERR")
"RTN","VPRPARAM",56,0)
 D ENCODE^VPRJSON("RESULT","JSONRES","VPRERR")
"RTN","VPRPARAM",57,0)
 Q
"RTN","VPRPARAM",58,0)
 ;
"RTN","VPRPARAM",59,0)
GETPARAM(RESULT,NAME,ENTITY,ENTVALUE,INST) ; Get value for a param
"RTN","VPRPARAM",60,0)
 N CNT,ENT,FORMAT,IEN,VPRPAR,VPRERR
"RTN","VPRPARAM",61,0)
 ;S IEN=$O(^XTV(8989.51,"B",NAME,"")) Q:IEN'>0
"RTN","VPRPARAM",62,0)
 S FORMAT="I"
"RTN","VPRPARAM",63,0)
 ;D BLDLST^XPAREDIT(.VPRPAR,IEN
"RTN","VPRPARAM",64,0)
 S ENT=$S($G(ENTVALUE)'="":ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","VPRPARAM",65,0)
 D GETWP^XPAR(.VPRAR,ENT,NAME,INST,.VPRERR)
"RTN","VPRPARAM",66,0)
 S CNT=0 F  S CNT=$O(VPRAR(CNT)) Q:CNT'>0  D
"RTN","VPRPARAM",67,0)
 .S RESULT(CNT)=VPRAR(CNT,0)
"RTN","VPRPARAM",68,0)
 Q
"RTN","VPRPARAM",69,0)
 ;
"RTN","VPRPARAM",70,0)
GETBYUID(RESULT,UID) ;
"RTN","VPRPARAM",71,0)
 N ENTITY
"RTN","VPRPARAM",72,0)
 D BLDENT(UID,.ENTITY)
"RTN","VPRPARAM",73,0)
 D GETPARAM(.RESULT,"VPR PARAMETERS",$G(ENTITY("entity")),$G(ENTITY("entityId")),$G(ENTITY("uid")))
"RTN","VPRPARAM",74,0)
 ;I $D(RESULT)<10 S RESULT(0)="{}"
"RTN","VPRPARAM",75,0)
 Q
"RTN","VPRPARAM",76,0)
 ;
"RTN","VPRPARAM",77,0)
PARSEJSN(VALUE,ARRAY,ERR) ;
"RTN","VPRPARAM",78,0)
 N JSON
"RTN","VPRPARAM",79,0)
 D DECODE^VPRJSON("VALUE","ARRAY","ERR")
"RTN","VPRPARAM",80,0)
 I $D(ERR) Q
"RTN","VPRPARAM",81,0)
 ;S ARRAY("UID")="urn:va:"_ARRAY("domain")_":"_DUZ(0)_":"_ARRAY("param")_":"_$G(ARRAY("instance"))
"RTN","VPRPARAM",82,0)
 Q
"RTN","VPRPARAM",83,0)
 ;
"RTN","VPRPARAM",84,0)
PUTPARAM(RESULT,VALUE,ENTARR) ;
"RTN","VPRPARAM",85,0)
 N CNT,ENT,ENTITY,ENTVALUE,ERR,STR,VPRERR,X
"RTN","VPRPARAM",86,0)
 I $D(ENTARR)<10 D PARSEJSN(.VALUE,.ENTARR,.ERR)
"RTN","VPRPARAM",87,0)
 ;delete old parameter
"RTN","VPRPARAM",88,0)
 S ENTITY=ENTARR("entity")
"RTN","VPRPARAM",89,0)
 S ENTVALUE=ENTARR("entityId")
"RTN","VPRPARAM",90,0)
 S ENT=$S($G(ENTVALUE)>0:ENTITY_".`"_ENTVALUE,1:ENTITY)
"RTN","VPRPARAM",91,0)
 D DEL^XPAR(ENT,"VPR PARAMETERS",ENTARR("uid"),.VPRERR)
"RTN","VPRPARAM",92,0)
 S CNT=$O(VALUE(""),-1) I CNT="" S STR(1,0)=VALUE
"RTN","VPRPARAM",93,0)
 I CNT>0 F X=0:1:CNT S STR(X+1,0)=VALUE(X)
"RTN","VPRPARAM",94,0)
 D PUT^XPAR(ENT,"VPR PARAMETERS",ENTARR("uid"),.STR,.VPRERR)
"RTN","VPRPARAM",95,0)
 Q
"RTN","VPRPARAM",96,0)
 ;
"RTN","VPRPARAM",97,0)
PUTBYUID(RESULT,UID,VALUE) ;
"RTN","VPRPARAM",98,0)
 N ENTITY
"RTN","VPRPARAM",99,0)
 D BLDENT(UID,.ENTITY)
"RTN","VPRPARAM",100,0)
 D PUTPARAM(.RESULT,.VALUE,.ENTITY)
"RTN","VPRPARAM",101,0)
 Q
"RTN","VPRPARAM",102,0)
 ;
"RTN","VPRPATS")
0^14^B45481720
"RTN","VPRPATS",1,0)
VPRPATS ;SLC/MKB -- Patient Management Utilities
"RTN","VPRPATS",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRPATS",3,0)
 ;
"RTN","VPRPATS",4,0)
 ; External References          DBIA#
"RTN","VPRPATS",5,0)
 ; -------------------          -----
"RTN","VPRPATS",6,0)
 ; ^DGS(41.1                     3796
"RTN","VPRPATS",7,0)
 ; ^DPT                         10035
"RTN","VPRPATS",8,0)
 ; ^OR(100.21
"RTN","VPRPATS",9,0)
 ; ^PXRMXP(810.5
"RTN","VPRPATS",10,0)
 ; ^SC                          10040
"RTN","VPRPATS",11,0)
 ; ^SCTM(404.51                 +2936? >>or use FIND^DIC?
"RTN","VPRPATS",12,0)
 ; DICN                         10009
"RTN","VPRPATS",13,0)
 ; MPIF001                       2701
"RTN","VPRPATS",14,0)
 ; SCAPMC                        1916
"RTN","VPRPATS",15,0)
 ; SDAMA301                      4433
"RTN","VPRPATS",16,0)
 ; XLFDT                        10103
"RTN","VPRPATS",17,0)
 ; XPAR                          2263
"RTN","VPRPATS",18,0)
 ; XUAF4                         2171
"RTN","VPRPATS",19,0)
 ;
"RTN","VPRPATS",20,0)
APPT ; -- Return patients w/appointments tomorrow
"RTN","VPRPATS",21,0)
 ; OPT = VPR APPOINTMENTS
"RTN","VPRPATS",22,0)
 N NOW,NOW1,VPRX,VPRL,VPRN,DFN,DA,TOKEN,NEW,X
"RTN","VPRPATS",23,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","VPRPATS",24,0)
 S VPRX(1)=NOW_";"_NOW1 ;next 24hours
"RTN","VPRPATS",25,0)
 S VPRX("FLDS")=1,VPRX("SORT")="P",VPRX(3)="R;I;NT"
"RTN","VPRPATS",26,0)
 ; ck parameter for desired location(s): VPRX(2)="loc1;loc2;...;loc#"
"RTN","VPRPATS",27,0)
 D GETLST^XPAR(.VPRL,"ALL","VPR LOCATIONS") I +$G(VPRL) D
"RTN","VPRPATS",28,0)
 . S X=+$G(VPRL(1)),VPRX(2)=$S($D(^SC(X,0)):X,1:"")
"RTN","VPRPATS",29,0)
 . F I=2:1:+VPRL S X=+$G(VPRL(I)) S:$D(^SC(X,0)) VPRX(2)=VPRX(2)_";"_X
"RTN","VPRPATS",30,0)
 S VPRN=$$SDAPI^SDAMA301(.VPRX) Q:VPRN<1
"RTN","VPRPATS",31,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  D
"RTN","VPRPATS",32,0)
 . S DA=0 F  S DA=$O(^VPR(560,DA)) Q:DA<1  I $P($G(^(DA,0)),U,2) D
"RTN","VPRPATS",33,0)
 .. Q:$D(^VPR(560,"ADFN",DFN,DA))  ;already subscribed
"RTN","VPRPATS",34,0)
 .. S TOKEN=DA_"~"_NOW,NEW(TOKEN)=""
"RTN","VPRPATS",35,0)
 .. S ^XTMP("VPRX",TOKEN,DFN)=""
"RTN","VPRPATS",36,0)
 I $D(NEW) D SEND^VPRHTTP(.NEW) ;send poke to each URL with list TOKEN
"RTN","VPRPATS",37,0)
 Q
"RTN","VPRPATS",38,0)
 ;
"RTN","VPRPATS",39,0)
ADM(DFN) ; -- Return new inpatient [from DGPM^VPREVNT]
"RTN","VPRPATS",40,0)
 N NOW,DA,TOKEN,NEW
"RTN","VPRPATS",41,0)
 S NOW=$$NOW^XLFDT,DFN=+$G(DFN)
"RTN","VPRPATS",42,0)
 S DA=0 F  S DA=$O(^VPR(560,DA)) Q:DA<1  I $P($G(^(DA,0)),U,3) D
"RTN","VPRPATS",43,0)
 . Q:$D(^VPR(560,"ADFN",DFN,DA))  ;already subscribed
"RTN","VPRPATS",44,0)
 . S TOKEN=DA_"~"_NOW,NEW(TOKEN)=""
"RTN","VPRPATS",45,0)
 . S ^XTMP("VPRX",TOKEN,DFN)=""
"RTN","VPRPATS",46,0)
 I $D(NEW) D SEND^VPRHTTP(.NEW) ;send poke to each URL with list TOKEN
"RTN","VPRPATS",47,0)
 Q
"RTN","VPRPATS",48,0)
 ;
"RTN","VPRPATS",49,0)
GTALLLST(VPR,VPRTYPE) ;
"RTN","VPRPATS",50,0)
 S VPR=$NA(^TMP($J,"VPR")) K @VPR
"RTN","VPRPATS",51,0)
 N VPRI,VPRSITE,VPRUSER,VPRSTA
"RTN","VPRPATS",52,0)
 S VPRUSER=DUZ,VPRSITE=DUZ(2),VPRSTA=$$STA^XUAF4(DUZ(2)),VPRI=0
"RTN","VPRPATS",53,0)
 D ADD("<results>")
"RTN","VPRPATS",54,0)
 I $D(VPRTYPE("ALL"))>0 S (VPRTYPE("OR"),VPRTYPE("PXRM"),VPRTYPE("PCMM"))=""
"RTN","VPRPATS",55,0)
 D ADD("<lists>")
"RTN","VPRPATS",56,0)
 I $D(VPRTYPE("OR"))>0 D GETOERRL
"RTN","VPRPATS",57,0)
 I $D(VPRTYPE("PXRM"))>0 D GETPXRML
"RTN","VPRPATS",58,0)
 I $D(VPRTYPE("PCMM"))>0 D GETPCMML
"RTN","VPRPATS",59,0)
 D ADD("</lists>")
"RTN","VPRPATS",60,0)
 D ADD("</results>")
"RTN","VPRPATS",61,0)
 Q
"RTN","VPRPATS",62,0)
 ;
"RTN","VPRPATS",63,0)
GETLSTPT(VPR,VPRLIST) ;
"RTN","VPRPATS",64,0)
 S VPR=$NA(^TMP($J,"VPR")) K @VPR
"RTN","VPRPATS",65,0)
 N GBL,IEN,TAG,VPRI,VPRSITE,VPRUSER,VPRSTA
"RTN","VPRPATS",66,0)
 S VPRUSER=DUZ,VPRSITE=DUZ(2),VPRSTA=$$STA^XUAF4(DUZ(2)),VPRI=0
"RTN","VPRPATS",67,0)
 D ADD("<results>")
"RTN","VPRPATS",68,0)
 S GBL=VPRLIST("global"),IEN=VPRLIST("ien")
"RTN","VPRPATS",69,0)
 S TAG=$S(GBL="OR":"GETOERRP",GBL="PXRMXP":"GETPXRMP",GBL="PCMM":"GETPCMMP",1:"")
"RTN","VPRPATS",70,0)
 I TAG'="",IEN'="" D @(TAG_"(IEN)")
"RTN","VPRPATS",71,0)
 D ADD("</results>")
"RTN","VPRPATS",72,0)
 Q
"RTN","VPRPATS",73,0)
 Q
"RTN","VPRPATS",74,0)
 ;
"RTN","VPRPATS",75,0)
GETPCMML ;
"RTN","VPRPATS",76,0)
 N NAME,IEN
"RTN","VPRPATS",77,0)
 S NAME="" F  S NAME=$O(^SCTM(404.51,"B",NAME)) Q:NAME=""  D
"RTN","VPRPATS",78,0)
 .S IEN=$O(^SCTM(404.51,"B",NAME,"")) Q:IEN'>0
"RTN","VPRPATS",79,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='PCMM'/>")
"RTN","VPRPATS",80,0)
 Q
"RTN","VPRPATS",81,0)
 ;
"RTN","VPRPATS",82,0)
GETPCMMP(IEN) ;
"RTN","VPRPATS",83,0)
 N DFN,OK,VPRERR,VPRX
"RTN","VPRPATS",84,0)
 K ^TMP($J,"PCM")
"RTN","VPRPATS",85,0)
 S OK=$$PTTM^SCAPMC(IEN,"SCDT","^TMP($J,""PCM"")",.VPRERR)
"RTN","VPRPATS",86,0)
 I OK'>0 Q
"RTN","VPRPATS",87,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"PCM","SCPTA",DFN)) Q:DFN'>0  D
"RTN","VPRPATS",88,0)
 .S VPRX(DFN)=""
"RTN","VPRPATS",89,0)
 D XML(.VPRX)
"RTN","VPRPATS",90,0)
 Q
"RTN","VPRPATS",91,0)
 ;
"RTN","VPRPATS",92,0)
GETPXRML ;
"RTN","VPRPATS",93,0)
 N NAME,IEN
"RTN","VPRPATS",94,0)
 S NAME="" F  S NAME=$O(^PXRMXP(810.5,"B",NAME)) Q:NAME=""  D
"RTN","VPRPATS",95,0)
 .S IEN=$O(^PXRMXP(810.5,"B",NAME,"")) Q:IEN'>0
"RTN","VPRPATS",96,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='PXRMXP'/>")
"RTN","VPRPATS",97,0)
 Q
"RTN","VPRPATS",98,0)
 ;
"RTN","VPRPATS",99,0)
GETPXRMP(IEN) ;
"RTN","VPRPATS",100,0)
 N CNT,VPRX
"RTN","VPRPATS",101,0)
 S CNT=0 F  S CNT=$O(^PXRMXP(810.5,IEN,30,CNT)) Q:CNT'>0  D
"RTN","VPRPATS",102,0)
 .S VPRX(+$G(^PXRMXP(810.5,IEN,30,CNT,0)))=""
"RTN","VPRPATS",103,0)
 D XML(.VPRX)
"RTN","VPRPATS",104,0)
 Q
"RTN","VPRPATS",105,0)
 ;
"RTN","VPRPATS",106,0)
GETOERRL ;
"RTN","VPRPATS",107,0)
 N NAME,IEN
"RTN","VPRPATS",108,0)
 S NAME="" F  S NAME=$O(^OR(100.21,"B",NAME)) Q:NAME=""  D
"RTN","VPRPATS",109,0)
 .S IEN=$O(^OR(100.21,"B",NAME,"")) Q:IEN'>0
"RTN","VPRPATS",110,0)
 .D ADD("<list value='"_NAME_"' id='"_IEN_"' global='OR'/>")
"RTN","VPRPATS",111,0)
 Q
"RTN","VPRPATS",112,0)
 ;
"RTN","VPRPATS",113,0)
GETOERRP(IEN) ;
"RTN","VPRPATS",114,0)
 N CNT,VPRX
"RTN","VPRPATS",115,0)
 S CNT=0 F  S CNT=$O(^OR(100.21,IEN,10,CNT)) Q:CNT'>0  D
"RTN","VPRPATS",116,0)
 .S VPRX(+$G(^OR(100.21,IEN,10,CNT,0)))=""
"RTN","VPRPATS",117,0)
 D XML(.VPRX)
"RTN","VPRPATS",118,0)
 Q
"RTN","VPRPATS",119,0)
 ;
"RTN","VPRPATS",120,0)
IN(VPR) ; -- Return current inpatients
"RTN","VPRPATS",121,0)
 ; RPC = VPR INPATIENTS
"RTN","VPRPATS",122,0)
 N WARD,DFN,VPRX,VPRI
"RTN","VPRPATS",123,0)
 S WARD="" F  S WARD=$O(^DPT("CN",WARD)) Q:WARD=""  D
"RTN","VPRPATS",124,0)
 . S DFN=0 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN<1  S VPRX(DFN)=""
"RTN","VPRPATS",125,0)
 S VPR=$NA(^TMP($J,"VPR")) K @VPR
"RTN","VPRPATS",126,0)
 D XML(.VPRX)
"RTN","VPRPATS",127,0)
 Q
"RTN","VPRPATS",128,0)
 ;
"RTN","VPRPATS",129,0)
OUT(VPR,BEG,END) ; -- Return patients w/appointments [tomorrow]
"RTN","VPRPATS",130,0)
 ; RPC = VPR APPOINTMENTS
"RTN","VPRPATS",131,0)
 N VPRX,VPRN,DFN,VPRDT,VPRI,VPRA
"RTN","VPRPATS",132,0)
 I '$G(BEG) D   ;default = tomorrow, if not passed in
"RTN","VPRPATS",133,0)
 . S BEG=$$FMADD^XLFDT(DT,1),END=BEG
"RTN","VPRPATS",134,0)
 ; find patients with appointments
"RTN","VPRPATS",135,0)
 S END=$G(END,BEG),VPRX(1)=BEG_";"_END
"RTN","VPRPATS",136,0)
 S VPRX("SORT")="P",VPRX("FLDS")=1,VPRX(3)="R;I;NT"
"RTN","VPRPATS",137,0)
 S VPRN=$$SDAPI^SDAMA301(.VPRX) Q:VPRN<1  K VPRX
"RTN","VPRPATS",138,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  S VPRX(DFN)=""
"RTN","VPRPATS",139,0)
 ; find patients scheduled for admission
"RTN","VPRPATS",140,0)
 S VPRDT=0 F  S VPRDT=$O(^DGS(41.1,"C",VPRDT)) Q:VPRDT<1!(VPRDT>END)  D
"RTN","VPRPATS",141,0)
 . S VPRI=0 F  S VPRI=$O(^DGS(41.1,"C",VPRDT,VPRI)) Q:VPRI<1  D
"RTN","VPRPATS",142,0)
 .. S VPRA=$G(^DGS(41.1,VPRI))
"RTN","VPRPATS",143,0)
 .. Q:$P(VPRA,U,13)  Q:$P(VPRA,U,17)  ;cancelled or admitted
"RTN","VPRPATS",144,0)
 .. S DFN=+VPRA S:DFN VPRX(DFN)=""
"RTN","VPRPATS",145,0)
 ; return list
"RTN","VPRPATS",146,0)
 S VPR=$NA(^TMP($J,"VPR")) K @VPR
"RTN","VPRPATS",147,0)
 D XML(.VPRX)
"RTN","VPRPATS",148,0)
 Q
"RTN","VPRPATS",149,0)
 ;
"RTN","VPRPATS",150,0)
XML(PATIENT) ; -- Return patient list as XML
"RTN","VPRPATS",151,0)
 N DFN,ICN,Y
"RTN","VPRPATS",152,0)
 D ADD("<patients>")
"RTN","VPRPATS",153,0)
 S DFN=0 F  S DFN=$O(PATIENT(DFN)) Q:DFN<1  D
"RTN","VPRPATS",154,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRPATS",155,0)
 . S Y="<patient id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","VPRPATS",156,0)
 D ADD("</patients>")
"RTN","VPRPATS",157,0)
 Q
"RTN","VPRPATS",158,0)
 ;
"RTN","VPRPATS",159,0)
SUBS(VPR,SYS,ON,LIST) ; -- Un/Subscribe to Patient Data Monitor
"RTN","VPRPATS",160,0)
 ; RPC = VPR SUBSCRIBE
"RTN","VPRPATS",161,0)
 N DA,I,ICN,DFN,HDR,VPRI
"RTN","VPRPATS",162,0)
 S SYS=$G(SYS),ON=+$G(ON) Q:'$L(SYS)
"RTN","VPRPATS",163,0)
 S DA=$$FIND(SYS) Q:DA<1
"RTN","VPRPATS",164,0)
 S VPR=$NA(^TMP("VPR",$J)) K @VPR
"RTN","VPRPATS",165,0)
 S:'$D(^XTMP("VPR")) ^XTMP("VPR",0)="3991231^"_DT_"^VPR Patient Data Monitor"
"RTN","VPRPATS",166,0)
 ;
"RTN","VPRPATS",167,0)
 ; loop through LIST(n) = 'dfn;icn'
"RTN","VPRPATS",168,0)
 D ADD("<patients>")
"RTN","VPRPATS",169,0)
 S I="" F  S I=$O(LIST(I)) Q:I=""  S DFN=LIST(I) D
"RTN","VPRPATS",170,0)
 . S ICN=+$P(DFN,";",2),DFN=+$G(DFN)
"RTN","VPRPATS",171,0)
 . I 'DFN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRPATS",172,0)
 . I DFN<1!'$D(^DPT(DFN)) D RET(DFN,"error") Q
"RTN","VPRPATS",173,0)
 . I ON D  Q
"RTN","VPRPATS",174,0)
 .. S:'$D(^VPR(560,DA,1,DFN,0)) HDR=$G(^VPR(560,DA,1,0)),^(0)="^560.01P^"_DFN_U_($P(HDR,U,4)+1)
"RTN","VPRPATS",175,0)
 .. S ^VPR(560,DA,1,DFN,0)=DFN_U_ON,^VPR(560,"ADFN",DFN,DA)=""
"RTN","VPRPATS",176,0)
 .. S ^XTMP("VPR",DFN)=ON D RET(DFN,"on")
"RTN","VPRPATS",177,0)
 . ; else, remove patient tracking info from ^XTMP
"RTN","VPRPATS",178,0)
 . S:$D(^VPR(560,DA,1,DFN,0)) $P(^(0),U,2)=0
"RTN","VPRPATS",179,0)
 . K ^VPR(560,"ADFN",DFN,DA) I '$D(^VPR(560,"ADFN",DFN)) K ^XTMP("VPR",DFN)
"RTN","VPRPATS",180,0)
 . D RET(DFN,"off")
"RTN","VPRPATS",181,0)
 D ADD("</patients>")
"RTN","VPRPATS",182,0)
 Q
"RTN","VPRPATS",183,0)
 ;
"RTN","VPRPATS",184,0)
ZFIND(URL) ; -- Return ien of URL in ^VPR
"RTN","VPRPATS",185,0)
 N NAME,DA S NAME=$G(URL)
"RTN","VPRPATS",186,0)
 S:NAME?1"http".E NAME=$P(NAME,"/",3) S:NAME[":" NAME=$P(NAME,":")
"RTN","VPRPATS",187,0)
 S DA=0 F  S DA=$O(^VPR(560,"B",NAME,DA)) Q:DA<1  I $G(^VPR(560,DA,.1))=URL Q
"RTN","VPRPATS",188,0)
 I DA<1 D  ;add
"RTN","VPRPATS",189,0)
 . N DO,DIC,X,Y
"RTN","VPRPATS",190,0)
 . S DIC="^VPR(560,",DIC(0)="F",X=NAME
"RTN","VPRPATS",191,0)
 . D FILE^DICN S DA=+Y
"RTN","VPRPATS",192,0)
 . S:DA>0 ^VPR(560,DA,.1)=URL
"RTN","VPRPATS",193,0)
 Q DA
"RTN","VPRPATS",194,0)
 ;
"RTN","VPRPATS",195,0)
FIND(ID) ; -- Return ien of system ID in ^VPR
"RTN","VPRPATS",196,0)
 N DA,DO,DIC,X,Y
"RTN","VPRPATS",197,0)
 I $G(ID)="" Q 0                        ;error
"RTN","VPRPATS",198,0)
 S DA=+$O(^VPR(560,"B",ID,0)) I DA<1 D  ;add
"RTN","VPRPATS",199,0)
 . S DIC="^VPR(560,",DIC(0)="F",X=ID
"RTN","VPRPATS",200,0)
 . D FILE^DICN S DA=+Y
"RTN","VPRPATS",201,0)
 Q DA
"RTN","VPRPATS",202,0)
 ;
"RTN","VPRPATS",203,0)
RET(DFN,STS) ; -- add XML node for patient DFN update subscription
"RTN","VPRPATS",204,0)
 N Y S Y="<patient dfn='"_$G(DFN)
"RTN","VPRPATS",205,0)
 S Y=Y_"' subscribe='"_$G(STS)_"' />"
"RTN","VPRPATS",206,0)
 D ADD(Y)
"RTN","VPRPATS",207,0)
 Q
"RTN","VPRPATS",208,0)
 ;
"RTN","VPRPATS",209,0)
ADD(X) ; Add a line @VPR@(n)=X
"RTN","VPRPATS",210,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRPATS",211,0)
 S @VPR@(VPRI)=X
"RTN","VPRPATS",212,0)
 Q
"RTN","VPRPRODC")
0^15^B2553308
"RTN","VPRPRODC",1,0)
VPRPRODC ;SLC/AGP - Environmental check for installations ;02/02/12
"RTN","VPRPRODC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2,3**;Sep 01, 2011;Build 55
"RTN","VPRPRODC",3,0)
 ;
"RTN","VPRPRODC",4,0)
 ;This routine will check to see if the user is in a production account
"RTN","VPRPRODC",5,0)
 ;if they are then the user will not be allowed to install this
"RTN","VPRPRODC",6,0)
 ;patch/build/bundle
"RTN","VPRPRODC",7,0)
 ;
"RTN","VPRPRODC",8,0)
ENV ;
"RTN","VPRPRODC",9,0)
 I $$PROD^XUPROD D
"RTN","VPRPRODC",10,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","VPRPRODC",11,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","VPRPRODC",12,0)
 .S XPDABORT=1
"RTN","VPRPRODC",13,0)
 Q
"RTN","VPRPXRM")
0^24^B3625288
"RTN","VPRPXRM",1,0)
VPRPXRM ; SLC/AGP - Clinical Remidners routine. ; 8/16/12 7:09pm
"RTN","VPRPXRM",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRPXRM",3,0)
 Q
"RTN","VPRPXRM",4,0)
 ;
"RTN","VPRPXRM",5,0)
EVALREM(RESULT,PT,UID) ;return detail for a pt's clinical reminder
"RTN","VPRPXRM",6,0)
 K ^TMP("PXRHM",$J)
"RTN","VPRPXRM",7,0)
 N DUEDATE,I,J,LASTDONE,NAME,NODE,RIEN,STATUS,TMP,TXT
"RTN","VPRPXRM",8,0)
 S RIEN=$P(UID,":",5)
"RTN","VPRPXRM",9,0)
 D MAIN^PXRM(PT,RIEN,5)     ; 5 returns all reminder info
"RTN","VPRPXRM",10,0)
 S I=1,TXT=""
"RTN","VPRPXRM",11,0)
 S NAME="",NAME=$O(^TMP("PXRHM",$J,RIEN,NAME)) Q:NAME=""  D
"RTN","VPRPXRM",12,0)
 .S NODE=$G(^TMP("PXRHM",$J,RIEN,NAME))
"RTN","VPRPXRM",13,0)
 .S STATUS=$P(NODE,U),DUEDATE=$$JSONDT^VPRUTILS($P(NODE,U,2)),LASTDONE=$$JSONDT^VPRUTILS($P(NODE,U,3))
"RTN","VPRPXRM",14,0)
 .S J=0 F  S J=$O(^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)) Q:J=""  D
"RTN","VPRPXRM",15,0)
 ..S TXT=$G(TXT)_^TMP("PXRHM",$J,RIEN,NAME,"TXT",J)_$C(13)_$C(10),I=I+1
"RTN","VPRPXRM",16,0)
 K ^TMP("PXRHM",$J)
"RTN","VPRPXRM",17,0)
 S TMP("uid")=UID
"RTN","VPRPXRM",18,0)
 S TMP("status")=STATUS
"RTN","VPRPXRM",19,0)
 S TMP("dueDate")=DUEDATE
"RTN","VPRPXRM",20,0)
 S TMP("lastDone")=LASTDONE
"RTN","VPRPXRM",21,0)
 S TMP("clinicalMaintenance")=TXT
"RTN","VPRPXRM",22,0)
 D ENCODE^VPRJSON("TMP","RESULT","ERROR")
"RTN","VPRPXRM",23,0)
 Q
"RTN","VPRPXRM",24,0)
 ;
"RTN","VPRPXRM",25,0)
REMLIST(RESULT,USERUID,LOC) ;
"RTN","VPRPXRM",26,0)
 N CNT,NUM,RIEN,TMP,UID,USER,VPRTMP
"RTN","VPRPXRM",27,0)
 S USER=$P(USERUID,":",5)
"RTN","VPRPXRM",28,0)
 D GETLIST^ORQQPX(.VPRTMP,LOC)
"RTN","VPRPXRM",29,0)
 S CNT=0,NUM=0 F  S CNT=$O(VPRTMP(CNT)) Q:CNT'>0  D
"RTN","VPRPXRM",30,0)
 .S RIEN=$G(VPRTMP(CNT)) I RIEN'>0 Q
"RTN","VPRPXRM",31,0)
 .S NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U,3)
"RTN","VPRPXRM",32,0)
 .I NAME="" S NAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","VPRPXRM",33,0)
 .S UID="urn:va:pxrm:"_$$SYS^VPRUTILS()_":"_RIEN
"RTN","VPRPXRM",34,0)
 .S NUM=NUM+1,TMP("reminders",NUM,"uid")=UID,TMP("reminders",NUM,"name")=NAME
"RTN","VPRPXRM",35,0)
 D ENCODE^VPRJSON("TMP","RESULT","ERROR")
"RTN","VPRPXRM",36,0)
 Q
"RTN","VPRPXRM",37,0)
 ;
"RTN","VPRROS2")
0^16^B104600206
"RTN","VPRROS2",1,0)
VPRROS2 ;SLC/GRR -- Roster Management
"RTN","VPRROS2",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRROS2",3,0)
 ;; Compile Roster
"RTN","VPRROS2",4,0)
COMPILE(VPR,VPRIEN,VPROWNER) ;
"RTN","VPRROS2",5,0)
 ;; Input - VPRIEN is internal entry number of roster
"RTN","VPRROS2",6,0)
 ;;         VPROWNER - If this parameter exists, only rosters for this owner will be compiled and passed
"RTN","VPRROS2",7,0)
 K VPRLIST,VPRLIST2
"RTN","VPRROS2",8,0)
 N VPRLIST,VPRFILT,VPRTYPE,VPERR,VPRI,VPRRNAME,VPRY,VPROP,VPRTAG,VPRLAB,VPRNLIST,BEG,DOB,END,GENDER,ICN,NAME,VPRACT,VPRC
"RTN","VPRROS2",9,0)
 N VPRCIEN,VPRDNAME,VPRDOB,VPRIII,VPRINM,VPRLIEN,VPRNAME,VPROIEN,VPRONAME,VPROWNID,VPROWNNM,VPRPAT,VPRPIEN,VPRNME,VPRCNT
"RTN","VPRROS2",10,0)
 N VPRSRCDN,VPRCID,VPRTEXT,VPRTIEN,VPRTLST,VPRVER,VPRWIEN,VPRWNAME,VPRPNME,VPRRCNT,VPRSRCID,X,Y
"RTN","VPRROS2",11,0)
 K ^TMP($J,"VPROSTER")
"RTN","VPRROS2",12,0)
 S VPR=$NA(^TMP($J,"VPROSTER")),VPRNLIST=""
"RTN","VPRROS2",13,0)
 I $G(VPRIEN)="" S VPRIEN=0
"RTN","VPRROS2",14,0)
 S (VPRLIST,VPRFILT,VPRTYPE,VPROP,VPRLIST2,VPERR)="",VPRI=0
"RTN","VPRROS2",15,0)
 I $G(VPROWNER)'="" D MULTI Q VPR
"RTN","VPRROS2",16,0)
 I +$G(VPRIEN)'>0 S VPERR="0^Invalid Roster IEN" Q
"RTN","VPRROS2",17,0)
 S VPRRNAME=$P(^VPROSTER(VPRIEN,0),"^",1)
"RTN","VPRROS2",18,0)
 F  S VPRI=$O(^VPROSTER(VPRIEN,1,VPRI)) Q:VPRI'>0  D
"RTN","VPRROS2",19,0)
 . S VPRY=$G(^VPROSTER(VPRIEN,1,VPRI,0))
"RTN","VPRROS2",20,0)
 . S VPROP=$P(VPRY,"^",3)
"RTN","VPRROS2",21,0)
 . S VPRFILT=$P(VPRY,"^",4)
"RTN","VPRROS2",22,0)
 . S VPRTAG=$P($P(VPRY,"^",2),";",2)
"RTN","VPRROS2",23,0)
 . S VPRLAB=""
"RTN","VPRROS2",24,0)
 . I VPRTAG["SC(" S VPRLAB="CLIN"
"RTN","VPRROS2",25,0)
 . I VPRTAG["DIC(42" S VPRLAB="WARD"
"RTN","VPRROS2",26,0)
 . I VPRTAG["DPT" S VPRLAB="PAT"
"RTN","VPRROS2",27,0)
 . I VPRTAG["SCTM" S VPRLAB="PCMM"
"RTN","VPRROS2",28,0)
 . I VPRTAG["OR(100.21" S VPRLAB="CPRS"
"RTN","VPRROS2",29,0)
 . I VPRTAG["VPROSTER" S VPRLAB="ROST"
"RTN","VPRROS2",30,0)
 . I VPRTAG["DIC(45.7" S VPRLAB="SPEC"
"RTN","VPRROS2",31,0)
 . I VPRTAG["VA(200" S VPRLAB="PROV"
"RTN","VPRROS2",32,0)
 . I VPRTAG["PXRM(810.4" S VPRLAB="PXRM"
"RTN","VPRROS2",33,0)
 . I VPRLAB="" S VPERR="1^INVALID FILE TYPE" Q
"RTN","VPRROS2",34,0)
 . D @VPRLAB
"RTN","VPRROS2",35,0)
 . S VPRLAB=$S(VPROP=0:"UNION",VPROP=1:"INTER",1:"DIFF")
"RTN","VPRROS2",36,0)
 . S VPRNLIST=""
"RTN","VPRROS2",37,0)
 . D @VPRLAB
"RTN","VPRROS2",38,0)
 I $D(VPROUT) K VPROUT M VPRLIST2=VPRLIST Q
"RTN","VPRROS2",39,0)
 I $O(VPRLIST(0))'>0 S VPERR="1^EMPTY ROSTER",@VPR@(1)=VPERR Q
"RTN","VPRROS2",40,0)
 D SEND
"RTN","VPRROS2",41,0)
 D ENROS^VPRFPTC(.ZZ,.VPRLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","VPRROS2",42,0)
 Q VPR
"RTN","VPRROS2",43,0)
 ;
"RTN","VPRROS2",44,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","VPRROS2",45,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",46,0)
 I '$D(DT) S DT=$$DT^XLFDT()
"RTN","VPRROS2",47,0)
 S BEG=DT,END=$S(VPRFILT="T":DT+.24,1:9999999+.24),VPRIII=BEG
"RTN","VPRROS2",48,0)
 S VPRCIEN=+$P(VPRY,"^",2) F  S VPRIII=$O(^SC(VPRCIEN,"S",VPRIII)) Q:VPRIII'>0!(VPRIII>END)  D
"RTN","VPRROS2",49,0)
 . S VPRII=0 F  S VPRII=$O(^SC(VPRCIEN,"S",VPRIII,1,VPRII)) Q:VPRII'>0  S DFN=$P($G(^SC(VPRCIEN,"S",VPRIII,1,VPRII,0)),"^",1) I DFN>0 D
"RTN","VPRROS2",50,0)
 . .S VPRLIST2(DFN)=""
"RTN","VPRROS2",51,0)
 Q
"RTN","VPRROS2",52,0)
 ;
"RTN","VPRROS2",53,0)
WARD ;Process patients for this ward
"RTN","VPRROS2",54,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",55,0)
 S VPRWIEN=+$P(VPRY,"^",2),VPRWNAME=$P($G(^DIC(42,VPRWIEN,0)),"^",1)
"RTN","VPRROS2",56,0)
 S VPRIII=0 F  S VPRIII=$O(^DGPM("CN",VPRWNAME,VPRIII)) Q:VPRIII'>0  D
"RTN","VPRROS2",57,0)
 . S DFN=$P($G(^DGPM(VPRIII,0)),"^",3),VPRLIST2(DFN)=""
"RTN","VPRROS2",58,0)
 Q
"RTN","VPRROS2",59,0)
 ;
"RTN","VPRROS2",60,0)
PAT ;Process patient from Patient file Source
"RTN","VPRROS2",61,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",62,0)
 S DFN=+$P(VPRY,"^",2),VPRLIST2(DFN)=""
"RTN","VPRROS2",63,0)
 Q
"RTN","VPRROS2",64,0)
 ;
"RTN","VPRROS2",65,0)
PCMM ;Process patients from a PCMM team
"RTN","VPRROS2",66,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",67,0)
 S VPRTIEN=+$P(VPRY,"^",2),VPERR="",VPRTLST=""
"RTN","VPRROS2",68,0)
 D PTTM^SCAPMC(VPRTIEN,,"VPRTLST",VPERR)
"RTN","VPRROS2",69,0)
 S VPRIII="" F  S VPRIII=$O(VPRTLST(VPRIII)) Q:VPRIII'>0  S DFN=$P(VPRTLST(VPRIII),"^",1) S VPRLIST2(DFN)=""
"RTN","VPRROS2",70,0)
 Q
"RTN","VPRROS2",71,0)
 ;
"RTN","VPRROS2",72,0)
CPRS ;Process patients from CPRS Lists
"RTN","VPRROS2",73,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",74,0)
 S VPROIEN=+$P(VPRY,"^",2),VPERR=""
"RTN","VPRROS2",75,0)
 S VPRIII=0 F  S VPRIII=$O(^OR(100.21,VPROIEN,10,VPRIII)) Q:VPRIII'>0  S DFN=$P(^OR(100.21,VPROIEN,10,VPRIII,0),";",1) S VPRLIST2(DFN)=""
"RTN","VPRROS2",76,0)
 Q
"RTN","VPRROS2",77,0)
 ;
"RTN","VPRROS2",78,0)
ROST ;Process patients from selected roster
"RTN","VPRROS2",79,0)
 K VPRLIST2,VPRBLIST S (VPRLIST2,VPRBLIST)="" ; -- kcm added comma
"RTN","VPRROS2",80,0)
 N VPR,VPRIEN,VPERR
"RTN","VPRROS2",81,0)
 S VPRIEN=+$P(VPRY,"^",2),VPERR="",VPROUT=1,VPR="VPRBLIST"
"RTN","VPRROS2",82,0)
 D COMPILE^VPRROS2(.VPR,VPRIEN,"")
"RTN","VPRROS2",83,0)
 M VPRBLIST=VPRLIST2
"RTN","VPRROS2",84,0)
 K VPROUT
"RTN","VPRROS2",85,0)
 Q
"RTN","VPRROS2",86,0)
 ;
"RTN","VPRROS2",87,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","VPRROS2",88,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",89,0)
 S VPROIEN=+$P(VPRY,"^",2),VPERR=""
"RTN","VPRROS2",90,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("ATR",VPROIEN,DFN)) Q:DFN'>0  S VPRLIST2(DFN)=""
"RTN","VPRROS2",91,0)
 Q
"RTN","VPRROS2",92,0)
 ;
"RTN","VPRROS2",93,0)
PROV ;Process patients for selected provider
"RTN","VPRROS2",94,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",95,0)
 S VPRPIEN=+$P(VPRY,"^",2),VPERR=""
"RTN","VPRROS2",96,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("APR",VPRPIEN,DFN)) Q:DFN'>0  S VPRLIST2(DFN)=""
"RTN","VPRROS2",97,0)
 Q
"RTN","VPRROS2",98,0)
 ;
"RTN","VPRROS2",99,0)
PXRM ;Process patients for selected panel
"RTN","VPRROS2",100,0)
 K VPRLIST2 S VPRLIST2=""
"RTN","VPRROS2",101,0)
 S VPRPIEN=+$P(VPRY,"^",2),VPERR=""
"RTN","VPRROS2",102,0)
 S VPRC=VPRPIEN,VPRLIEN=$P(^VPROSTER(VPRIEN,0),"^",1),VPRPNME=$P(^VPROSTER(VPRIEN,0),"^",6) I VPRPNME="" S VPRPNME=VPRRNAME,$P(^VPROSTER(VPRIEN,0),U,6)=VPRRNAME
"RTN","VPRROS2",103,0)
 S VPRPAT="" D RUNLIST^VPRROS5(.VPRPAT,VPRLIEN,VPRPNME,0,1)
"RTN","VPRROS2",104,0)
 S VPRII=0 F  S VPRII=$O(VPRPAT(VPRC,VPRII)) Q:VPRII'>0  S DFN=VPRPAT(VPRC,VPRII),VPRLIST2(DFN)=""
"RTN","VPRROS2",105,0)
 Q
"RTN","VPRROS2",106,0)
 ;
"RTN","VPRROS2",107,0)
UNION ;Add to existing list
"RTN","VPRROS2",108,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST2(VPRII)) Q:VPRII'>0  S VPRLIST(VPRII)=""
"RTN","VPRROS2",109,0)
 Q
"RTN","VPRROS2",110,0)
 ;
"RTN","VPRROS2",111,0)
INTER ;Intersect with existing list
"RTN","VPRROS2",112,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS2",113,0)
 . I '$D(VPRLIST2(VPRII)) K VPRLIST(VPRII)
"RTN","VPRROS2",114,0)
 Q
"RTN","VPRROS2",115,0)
 ;
"RTN","VPRROS2",116,0)
DIFF ;Remove patients from this source that we have so far
"RTN","VPRROS2",117,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST2(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS2",118,0)
 . K VPRLIST(VPRII)
"RTN","VPRROS2",119,0)
 Q
"RTN","VPRROS2",120,0)
 ;
"RTN","VPRROS2",121,0)
SEND ;send pending rosters.  Called through RPC
"RTN","VPRROS2",122,0)
 S VPRRCNT=0,VPRI=0,VPRII=0
"RTN","VPRROS2",123,0)
 S VPRVER="<results version='"_$P($T(VPRROS2+1),";",3)_"'>"
"RTN","VPRROS2",124,0)
 D ADD(VPRVER)
"RTN","VPRROS2",125,0)
 S VPRRNAME=$P(^VPROSTER(VPRIEN,0),"^",1),VPRDNAME=$P(^VPROSTER(VPRIEN,0),"^",2),VPRRNAME=$$ESC^VPRD(VPRRNAME),VPRDNAME=$$ESC^VPRD(VPRDNAME)
"RTN","VPRROS2",126,0)
 S VPRTEXT="<roster ien='"_VPRIEN_"'>" D ADD(VPRTEXT)
"RTN","VPRROS2",127,0)
 S VPRTEXT="<rosterName>"_VPRRNAME_"</rosterName>" D ADD(VPRTEXT)
"RTN","VPRROS2",128,0)
 S VPRTEXT="<displayName>"_VPRDNAME_"</displayName>" D ADD(VPRTEXT)
"RTN","VPRROS2",129,0)
 D ADD("<patients>")
"RTN","VPRROS2",130,0)
 K VPRII S VPRII=0 F  S VPRII=$O(VPRLIST(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS2",131,0)
 . N VPRY
"RTN","VPRROS2",132,0)
 . S DFN=VPRII,VPRY=$G(^DPT(DFN,0))
"RTN","VPRROS2",133,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS2",134,0)
 . S NAME=$P(VPRY,"^",1),GENDER=$P(VPRY,"^",2),DOB=$P(VPRY,"^",3),SSN=$P(VPRY,"^",9),VPRDOB=$$FMTHL7^XLFDT(DOB)
"RTN","VPRROS2",135,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_VPRDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","VPRROS2",136,0)
 D ADD("</patients>")
"RTN","VPRROS2",137,0)
 D ADD("</roster>")
"RTN","VPRROS2",138,0)
 S VPRTEXT="</results>" D ADD(VPRTEXT)
"RTN","VPRROS2",139,0)
 Q
"RTN","VPRROS2",140,0)
 ;
"RTN","VPRROS2",141,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRROS2",142,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRROS2",143,0)
 S @VPR@(VPRI)=X
"RTN","VPRROS2",144,0)
 Q
"RTN","VPRROS2",145,0)
 ;
"RTN","VPRROS2",146,0)
GETROS(VPR,VPRFILT) ;; Get all Rosters
"RTN","VPRROS2",147,0)
 ;; Input - None
"RTN","VPRROS2",148,0)
 N VPRLIST,VPRTYPE,VPERR,VPRI,VPRRNAME,VPRY,VPROP,VPRTAG,VPRLAB,VPRNLIST,BEG,DOB,END,GENDER,ICN,NAME,VPRACT,VPRC
"RTN","VPRROS2",149,0)
 N VPRCIEN,VPRDNAME,VPRDOB,VPRIII,VPRINM,VPRLIEN,VPRNAME,VPROIEN,VPRONAME,VPROWNID,VPROWNNM,VPRPAT,VPRPIEN,VPRNME,VPRCNT
"RTN","VPRROS2",150,0)
 N VPRSRCDN,VPRCID,VPRTEXT,VPRTIEN,VPRTLST,VPRVER,VPRWIEN,VPRWNAME,VPRPNME,VPRRCNT,VPRSRCID,X,Y
"RTN","VPRROS2",151,0)
 K VPRLIST
"RTN","VPRROS2",152,0)
 S (VPRLIST,VPRNAME,VPRTYPE,VPROP,VPRLIST2)="",VPRI=0,VPRIEN=0
"RTN","VPRROS2",153,0)
 S VPRACT="I 1"
"RTN","VPRROS2",154,0)
 K ^TMP($J,"VPROSTER")
"RTN","VPRROS2",155,0)
 S VPR=$NA(^TMP($J,"VPROSTER"))
"RTN","VPRROS2",156,0)
 S VPRVER="<results version='"_$P($T(VPRROS2+1),";",3)_"'>"
"RTN","VPRROS2",157,0)
 D ADD(VPRVER)
"RTN","VPRROS2",158,0)
 S VPRNAME="",VPRFILT=$G(VPRFILT)
"RTN","VPRROS2",159,0)
 I VPRFILT'="" S X=VPRFILT X ^%ZOSF("UPPERCASE") S VPRFILT=X,VPRNAME="",VPRACT="I VPRNAME[VPRFILT"
"RTN","VPRROS2",160,0)
 F  S VPRNAME=$O(^VPROSTER("B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") X VPRACT D
"RTN","VPRROS2",161,0)
 . S VPRIEN=0 F  S VPRIEN=$O(^VPROSTER("B",VPRNAME,VPRIEN)) Q:VPRIEN'>0  I '$P(^VPROSTER(VPRIEN,0),"^",3)!($P($G(^VPROSTER(VPRIEN,3)),"^",1)']"") X VPRACT I  D 
"RTN","VPRROS2",162,0)
 . . S VPRONAME=$$ESC^VPRD(VPRNAME),VPRDNAME=$P(^VPROSTER(VPRIEN,0),"^",2),VPRDNAME=$$ESC^VPRD(VPRDNAME)
"RTN","VPRROS2",163,0)
 . . S VPROWNID=$P(^VPROSTER(VPRIEN,0),"^",4),VPROWNNM=$P($G(^VA(200,VPROWNID,0)),"^",1),VPROWNNM=$$ESC^VPRD(VPROWNNM)
"RTN","VPRROS2",164,0)
 . . S VPRTEXT="<roster ien='"_VPRIEN_"'  ownername='"_VPROWNNM_"'  ownerid='"_VPROWNID_"'>" D ADD(VPRTEXT)
"RTN","VPRROS2",165,0)
 . . S VPRTEXT="<rosterName>"_VPRONAME_"</rosterName>" D ADD(VPRTEXT)
"RTN","VPRROS2",166,0)
 . . S VPRTEXT="<displayName>"_VPRDNAME_"</displayName>" D ADD(VPRTEXT)
"RTN","VPRROS2",167,0)
 . . S VPRTEXT="<sources>" D ADD(VPRTEXT)
"RTN","VPRROS2",168,0)
 . . N VPRII,VPRAS S VPRII=0 F  S VPRII=$O(^VPROSTER(VPRIEN,1,"AS",VPRII)) Q:VPRII'>0  S VPRAS=$O(^VPROSTER(VPRIEN,1,"AS",VPRII,0)) D
"RTN","VPRROS2",169,0)
 . . . N VPRSEQ,VPRSRC,VPRTYP,VPROP,VPRY,VPRSRCNM
"RTN","VPRROS2",170,0)
 . . . S VPRY=$G(^VPROSTER(VPRIEN,1,VPRAS,0))
"RTN","VPRROS2",171,0)
 . . . S VPRSRC=$P($P(VPRY,"^",2),";",2)
"RTN","VPRROS2",172,0)
 . . . S VPRSEQ=VPRII
"RTN","VPRROS2",173,0)
 . . . I VPRSRC["SC(" S VPRSRCNM="Clinic"
"RTN","VPRROS2",174,0)
 . . . I VPRSRC["DIC(42," S VPRSRCNM="Ward"
"RTN","VPRROS2",175,0)
 . . . I VPRSRC["DPT(" S VPRSRCNM="Patient"
"RTN","VPRROS2",176,0)
 . . . I VPRSRC["SCTM" S VPRSRCNM="PCMM Team"
"RTN","VPRROS2",177,0)
 . . . I VPRSRC["OR(100.21" S VPRSRCNM="OE/RR"
"RTN","VPRROS2",178,0)
 . . . I VPRSRC["VPROSTER" S VPRSRCNM="VPR Roster"
"RTN","VPRROS2",179,0)
 . . . I VPRSRC["DIC(45.7" S VPRSRCNM="Specialty"
"RTN","VPRROS2",180,0)
 . . . I VPRSRC["VA(200," S VPRSRCNM="Provider"
"RTN","VPRROS2",181,0)
 . . . I VPRSRC["PXRM(810.4," S VPRSRCNM="PXRM"
"RTN","VPRROS2",182,0)
 . . . S VPRSRCID=+$P(VPRY,"^",2),VPRSRCDN="^"_VPRSRC_VPRSRCID_",0)",VPRINM=$P(@VPRSRCDN,"^",1),VPRINM=$$ESC^VPRD(VPRINM)
"RTN","VPRROS2",183,0)
 . . . S VPROP=$S($P(VPRY,"^",3)=0:"Union",$P(VPRY,"^",3)=1:"Intersection",$P(VPRY,"^",3)=2:"Difference",1:"Invalid")
"RTN","VPRROS2",184,0)
 . . . S VPRTEXT="<source sequence='"_VPRSEQ_"'  type='"_VPRSRCNM_"'  name='"_VPRINM_"'  id='"_VPRSRCID_"'  operation='"_VPROP_"' />" D ADD(VPRTEXT)
"RTN","VPRROS2",185,0)
 . . S VPRTEXT="</sources>" D ADD(VPRTEXT)
"RTN","VPRROS2",186,0)
 . . S VPRTEXT="</roster>" D ADD(VPRTEXT)
"RTN","VPRROS2",187,0)
 S VPRTEXT="</results>" D ADD(VPRTEXT)
"RTN","VPRROS2",188,0)
 Q
"RTN","VPRROS2",189,0)
 ;
"RTN","VPRROS2",190,0)
MULTI ;;Process multiple rosters
"RTN","VPRROS2",191,0)
 I $O(^VPROSTER("AC",VPROWNER,0))'>0 S VPERR="1^EMPTY ROSTER",@VPR@(1)=VPERR Q
"RTN","VPRROS2",192,0)
 S VPRRCNT=0,VPRI=0,VPRII=0,VPRIII=0
"RTN","VPRROS2",193,0)
 S VPRVER="<results version='"_$P($T(VPRROS2+1),";",3)_"'>"
"RTN","VPRROS2",194,0)
 D ADD(VPRVER)
"RTN","VPRROS2",195,0)
 F  S VPRIEN=$O(^VPROSTER("AC",VPROWNER,VPRIEN)) Q:VPRIEN'>0  D
"RTN","VPRROS2",196,0)
 .S VPRRNAME=$P(^VPROSTER(VPRIEN,0),"^",1),VPRDNAME=$P(^VPROSTER(VPRIEN,0),"^",2)
"RTN","VPRROS2",197,0)
 .S VPRTEXT="<roster ien='"_VPRIEN_"'>" D ADD(VPRTEXT)
"RTN","VPRROS2",198,0)
 .S VPRTEXT="<rosterName>"_VPRRNAME_"</rosterName>" D ADD(VPRTEXT)
"RTN","VPRROS2",199,0)
 .S VPRTEXT="<displayName>"_VPRDNAME_"</displayName>" D ADD(VPRTEXT)
"RTN","VPRROS2",200,0)
 . S VPRIII=0 F  S VPRIII=$O(^VPROSTER(VPRIEN,1,VPRIII)) Q:VPRIII'>0  D
"RTN","VPRROS2",201,0)
 .. S VPRY=$G(^VPROSTER(VPRIEN,1,VPRIII,0))
"RTN","VPRROS2",202,0)
 .. S VPROP=$P(VPRY,"^",3)
"RTN","VPRROS2",203,0)
 .. S VPRFILT=$P(VPRY,"^",4)
"RTN","VPRROS2",204,0)
 .. S VPRTAG=$P($P(VPRY,"^",2),";",2)
"RTN","VPRROS2",205,0)
 .. S VPRLAB=""
"RTN","VPRROS2",206,0)
 .. I VPRTAG["SC(" S VPRLAB="CLIN"
"RTN","VPRROS2",207,0)
 .. I VPRTAG["DIC(42" S VPRLAB="WARD"
"RTN","VPRROS2",208,0)
 .. I VPRTAG["DPT" S VPRLAB="PAT"
"RTN","VPRROS2",209,0)
 .. I VPRTAG["SCTM" S VPRLAB="PCMM"
"RTN","VPRROS2",210,0)
 .. I VPRTAG["OR(100.21" S VPRLAB="CPRS"
"RTN","VPRROS2",211,0)
 .. I VPRTAG["VPROSTER" S VPRLAB="ROST"
"RTN","VPRROS2",212,0)
 .. I VPRTAG["DIC(45.7" S VPRLAB="SPEC"
"RTN","VPRROS2",213,0)
 .. I VPRTAG["VA(200" S VPRLAB="PROV"
"RTN","VPRROS2",214,0)
 .. I VPRTAG["PXRM(810.4," S VPRLAB="PXRM"
"RTN","VPRROS2",215,0)
 .. I VPRLAB="" S VPERR="1^INVALID FILE TYPE" Q
"RTN","VPRROS2",216,0)
 .. D @VPRLAB
"RTN","VPRROS2",217,0)
 .. S VPRLAB=$S(VPROP=0:"UNION",VPROP=1:"INTER",1:"DIFF")
"RTN","VPRROS2",218,0)
 .. D @VPRLAB
"RTN","VPRROS2",219,0)
 . D FORMAT
"RTN","VPRROS2",220,0)
 . I $O(VPRLIST(0))'>0 S VPERR="1^EMPTY ROSTER",@VPR@(1)=VPERR Q
"RTN","VPRROS2",221,0)
 . D ENROS^VPRFPTC(.ZZ,VPRLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","VPRROS2",222,0)
 . I $D(VPROUT) K VPROUT M @VPR=VPRLIST Q
"RTN","VPRROS2",223,0)
 S VPRTEXT="</results>" D ADD(VPRTEXT)
"RTN","VPRROS2",224,0)
 Q VPR
"RTN","VPRROS2",225,0)
 ;;
"RTN","VPRROS2",226,0)
FORMAT ;;
"RTN","VPRROS2",227,0)
 D ADD("<patients>")
"RTN","VPRROS2",228,0)
 K VPRII S VPRII=0 F  S VPRII=$O(VPRLIST(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS2",229,0)
 . N VPRY
"RTN","VPRROS2",230,0)
 . S DFN=VPRII,VPRY=^DPT(DFN,0)
"RTN","VPRROS2",231,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS2",232,0)
 . S NAME=$P(VPRY,"^",1),GENDER=$P(VPRY,"^",2),DOB=$P(VPRY,"^",3),VPRDOB=$$FMTHL7^XLFDT(DOB),SSN=$P(VPRY,"^",9)
"RTN","VPRROS2",233,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_VPRDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","VPRROS2",234,0)
 D ADD("</patients>")
"RTN","VPRROS2",235,0)
 D ADD("</roster>")
"RTN","VPRROS2",236,0)
 K Y
"RTN","VPRROS2",237,0)
 Q
"RTN","VPRROS2",238,0)
 ;;
"RTN","VPRROS3")
0^17^B71479404
"RTN","VPRROS3",1,0)
VPRROS3 ;SLC/GRR -- Roster Management ; 8/28/12 6:22pm
"RTN","VPRROS3",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;AUG 17, 2011;Build 55
"RTN","VPRROS3",3,0)
PREVIEW(VPR,VPRARRAY) ;; Previews what a roster would look like as defined
"RTN","VPRROS3",4,0)
 ;;  Called by the GUI Roster Builder
"RTN","VPRROS3",5,0)
 ;; Input - VPRARRAY - contains roster data entered thru GUI
"RTN","VPRROS3",6,0)
 K VPRLIST,VPRLIST2
"RTN","VPRROS3",7,0)
 N %,BEG,DA,DIDEL,DIE,DOB,SSN,DR,END,GENDER,ICN,NAME,VPRC,VPRCIEN,VPRDIS,VPRDNAME,VPRDOB,VPRDT,VPRIII,VPRLIEN,VPROIEN,VPROWNID
"RTN","VPRROS3",8,0)
 N VPROWNNM,VPRPAT,VPRPIEN,VPRPNME,VPRRCNT,VPRRID,VPRTEXT,VPRTIEN,VPRLST,VPRVAR,VPRVER,VPRWIEN,VPRWNAME,VPRZ,X,Y
"RTN","VPRROS3",9,0)
 N VPRFILT,VPRI,VPRNLIST,VPRSRCID,VPRTAG,VPRTLST,VPRY,VPRTYPE,ZZ
"RTN","VPRROS3",10,0)
 S (VPRLIST,VPRFILT,VPRTYPE,VPROP,VPRLIST2,VPERR)="",VPRI=0
"RTN","VPRROS3",11,0)
 S VPR=$NA(^TMP($J,"VPROSTER")) ; kcm -- moved this here so VPR gets defined
"RTN","VPRROS3",12,0)
 K ^TMP($J,"VPROSTER")
"RTN","VPRROS3",13,0)
 I $O(VPRARRAY(""))="" S @VPR@(1)="0^No roster data passed" Q
"RTN","VPRROS3",14,0)
 Q:'$$VALIDATE
"RTN","VPRROS3",15,0)
 D NOW^%DTC S VPRDT=%
"RTN","VPRROS3",16,0)
 S VPRZ="" S VPRZ=$O(VPRARRAY(VPRZ)) I VPRZ="" Q
"RTN","VPRROS3",17,0)
 S VPRNLIST=""
"RTN","VPRROS3",18,0)
 S VPRRNAME=$P(VPRARRAY(VPRZ),"^",1),VPRRNAME=$$ESC^VPRD(VPRRNAME)
"RTN","VPRROS3",19,0)
 S VPRDNAME=$P(VPRARRAY(VPRZ),"^",3),VPRDNAME=$$ESC^VPRD(VPRDNAME)
"RTN","VPRROS3",20,0)
 S VPRDIS=$P(VPRARRAY(VPRZ),"^",4)
"RTN","VPRROS3",21,0)
 S VPROWNID=$P(VPRARRAY(VPRZ),"^",5)
"RTN","VPRROS3",22,0)
 S VPROWNNM=$P($G(^VA(200,VPROWNID,0)),"^",1),VPROWNNM=$$ESC^VPRD(VPROWNNM)
"RTN","VPRROS3",23,0)
 F  S VPRZ=$O(VPRARRAY(VPRZ)) Q:VPRZ=""  D
"RTN","VPRROS3",24,0)
 . S VPRY=VPRARRAY(VPRZ)
"RTN","VPRROS3",25,0)
 . S VPROP=$P(VPRY,"^",2)
"RTN","VPRROS3",26,0)
 . S VPRTAG=$P(VPRY,"^",1)
"RTN","VPRROS3",27,0)
 . S VPRLAB=""
"RTN","VPRROS3",28,0)
 . I VPRTAG["Clinic" S VPRLAB="CLIN"
"RTN","VPRROS3",29,0)
 . I VPRTAG["Ward" S VPRLAB="WARD"
"RTN","VPRROS3",30,0)
 . I VPRTAG["Patient" S VPRLAB="PAT"
"RTN","VPRROS3",31,0)
 . I VPRTAG["PCMM Team" S VPRLAB="PCMM"
"RTN","VPRROS3",32,0)
 . I VPRTAG["OE/RR" S VPRLAB="CPRS"
"RTN","VPRROS3",33,0)
 . I VPRTAG["VPR Roster" S VPRLAB="ROST"
"RTN","VPRROS3",34,0)
 . I VPRTAG["Specialty" S VPRLAB="SPEC"
"RTN","VPRROS3",35,0)
 . I VPRTAG["Provider" S VPRLAB="PROV"
"RTN","VPRROS3",36,0)
 . I VPRTAG["PXRM" S VPRLAB="PXRM"
"RTN","VPRROS3",37,0)
 . I VPRLAB="" S @VPR@(1)="1^INVALID FILE TYPE" Q
"RTN","VPRROS3",38,0)
 . D @VPRLAB
"RTN","VPRROS3",39,0)
 . S VPRLAB=$S(VPROP="UNION":"UNION",VPROP="Intersection":"INTER",1:"DIFF")
"RTN","VPRROS3",40,0)
 . S VPRNLIST=""
"RTN","VPRROS3",41,0)
 . D @VPRLAB
"RTN","VPRROS3",42,0)
 I $D(VPROUT) K VPROUT M VPRLIST2=VPRLIST Q
"RTN","VPRROS3",43,0)
 I $O(VPRLIST(0))'>0 S @VPR@(1)="1^EMPTY ROSTER" Q
"RTN","VPRROS3",44,0)
 D SEND
"RTN","VPRROS3",45,0)
 D ENROS^VPRFPTC(.ZZ,VPRLIST) ;added 5/17/12 grr to check patient sensitivity
"RTN","VPRROS3",46,0)
 Q VPR
"RTN","VPRROS3",47,0)
 ;
"RTN","VPRROS3",48,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","VPRROS3",49,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",50,0)
 I '$D(DT) S DT=$$DT^XLFDT()
"RTN","VPRROS3",51,0)
 S BEG=DT,END=$S(VPRFILT="T":DT+.24,1:9999999+.24),VPRIII=BEG
"RTN","VPRROS3",52,0)
 S VPRCIEN=+$P(VPRY,"^",3) F  S VPRIII=$O(^SC(VPRCIEN,"S",VPRIII)) Q:VPRIII'>0!(VPRIII>END)  D
"RTN","VPRROS3",53,0)
 . S VPRII=0 F  S VPRII=$O(^SC(VPRCIEN,"S",VPRIII,1,VPRII)) Q:VPRII'>0  S DFN=$P($G(^SC(VPRCIEN,"S",VPRIII,1,VPRII,0)),"^",1) I DFN>0 D
"RTN","VPRROS3",54,0)
 . .S VPRLIST2(DFN)=""
"RTN","VPRROS3",55,0)
 Q
"RTN","VPRROS3",56,0)
 ;
"RTN","VPRROS3",57,0)
WARD ;Process patients for this ward
"RTN","VPRROS3",58,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",59,0)
 S VPRWIEN=+$P(VPRY,"^",3),VPRWNAME=$P($G(^DIC(42,VPRWIEN,0)),"^",1)
"RTN","VPRROS3",60,0)
 S VPRIII=0 F  S VPRIII=$O(^DGPM("CN",VPRWNAME,VPRIII)) Q:VPRIII'>0  D
"RTN","VPRROS3",61,0)
 . S DFN=$P($G(^DGPM(VPRIII,0)),"^",3),VPRLIST2(DFN)=""
"RTN","VPRROS3",62,0)
 Q
"RTN","VPRROS3",63,0)
 ;
"RTN","VPRROS3",64,0)
PAT ;Process patient from Patient file Source
"RTN","VPRROS3",65,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",66,0)
 S DFN=+$P(VPRY,"^",3),VPRLIST2(DFN)=""
"RTN","VPRROS3",67,0)
 Q
"RTN","VPRROS3",68,0)
 ;
"RTN","VPRROS3",69,0)
PCMM ;Process patients from a PCMM team
"RTN","VPRROS3",70,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",71,0)
 S VPRTIEN=+$P(VPRY,"^",3),VPERR="",VPRTLST=""
"RTN","VPRROS3",72,0)
 D PTTM^SCAPMC(VPRTIEN,,"VPRTLST",VPERR)
"RTN","VPRROS3",73,0)
 S VPRIII="" F  S VPRIII=$O(VPRTLST(VPRIII)) Q:VPRIII'>0  S DFN=$P(VPRTLST(VPRIII),"^",1) S VPRLIST2(DFN)=""
"RTN","VPRROS3",74,0)
 Q
"RTN","VPRROS3",75,0)
 ;
"RTN","VPRROS3",76,0)
CPRS ;Process patients from CPRS Lists
"RTN","VPRROS3",77,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",78,0)
 S VPROIEN=+$P(VPRY,"^",3),VPERR=""
"RTN","VPRROS3",79,0)
 S VPRIII=0 F  S VPRIII=$O(^OR(100.21,VPROIEN,10,VPRIII)) Q:VPRIII'>0  S DFN=$P(^OR(100.21,VPROIEN,10,VPRIII,0),";",1) S VPRLIST2(DFN)=""
"RTN","VPRROS3",80,0)
 Q
"RTN","VPRROS3",81,0)
 ;
"RTN","VPRROS3",82,0)
ROST ;Process patients from selected roster
"RTN","VPRROS3",83,0)
 N VPR,VPRIEN,VPERR
"RTN","VPRROS3",84,0)
 S VPRIEN=+$P(VPRY,"^",3),VPERR="",VPROUT=1
"RTN","VPRROS3",85,0)
 D COMPILE^VPRROS2(.VPR,VPRIEN,"")
"RTN","VPRROS3",86,0)
 M VPRLIST=VPRLIST2
"RTN","VPRROS3",87,0)
 K VPROUT
"RTN","VPRROS3",88,0)
 Q
"RTN","VPRROS3",89,0)
 ;
"RTN","VPRROS3",90,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","VPRROS3",91,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",92,0)
 S VPROIEN=+$P(VPRY,"^",3),VPERR=""
"RTN","VPRROS3",93,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("ATR",VPROIEN,DFN)) Q:DFN'>0  S VPRLIST2(DFN)=""
"RTN","VPRROS3",94,0)
 Q
"RTN","VPRROS3",95,0)
 ;
"RTN","VPRROS3",96,0)
PROV ;Process patients for selected provider
"RTN","VPRROS3",97,0)
 K VPRLIST2,VPROUT S VPRLIST2=""
"RTN","VPRROS3",98,0)
 S VPRPIEN=+$P(VPRY,"^",3),VPERR=""
"RTN","VPRROS3",99,0)
 N DFN S DFN=0 F  S DFN=$O(^DPT("APR",VPRPIEN,DFN)) Q:DFN'>0  S VPRLIST2(DFN)=""
"RTN","VPRROS3",100,0)
 Q
"RTN","VPRROS3",101,0)
 ;
"RTN","VPRROS3",102,0)
PXRM ;Process patients for selected panel
"RTN","VPRROS3",103,0)
 K VPRLIST2,VPROUT,VPRPAT,VPRRIEN S VPRLIST2=""
"RTN","VPRROS3",104,0)
 S VPRPIEN=+$P(VPRY,"^",3),VPERR="",VPRLIEN=$P($G(^PXRM(810.4,VPRPIEN,0)),"^",1) I VPRLIEN="" S @VPR@(1)="Invalid PXRM" Q
"RTN","VPRROS3",105,0)
 ;S VPRRIEN=$O(^VPROSTER("B",VPRRNAME,"")) I VPRRIEN'>0 S @VPR@(1)="Invalid PXRM" Q
"RTN","VPRROS3",106,0)
 ;S VPRPNME=$P(^VPROSTER(VPRRIEN,0),"^",6)
"RTN","VPRROS3",107,0)
 S VPRC=VPRPIEN
"RTN","VPRROS3",108,0)
 S VPRPAT="" D RUNLIST^VPRROS5(.VPRPAT,VPRPIEN,VPRRNAME,0,1)
"RTN","VPRROS3",109,0)
 S VPRII=0 F  S VPRII=$O(VPRPAT(VPRC,VPRII)) Q:VPRII'>0  S DFN=VPRPAT(VPRC,VPRII),VPRLIST2(DFN)=""
"RTN","VPRROS3",110,0)
 Q
"RTN","VPRROS3",111,0)
 ;
"RTN","VPRROS3",112,0)
UNION ;Add to existing list
"RTN","VPRROS3",113,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST2(VPRII)) Q:VPRII'>0  S VPRLIST(VPRII)=""
"RTN","VPRROS3",114,0)
 Q
"RTN","VPRROS3",115,0)
 ;
"RTN","VPRROS3",116,0)
INTER ;Intersect with existing list
"RTN","VPRROS3",117,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS3",118,0)
 . I '$D(VPRLIST2(VPRII)) K VPRLIST(VPRII)
"RTN","VPRROS3",119,0)
 Q
"RTN","VPRROS3",120,0)
 ;
"RTN","VPRROS3",121,0)
DIFF ;Remove patients from this source that we have so far
"RTN","VPRROS3",122,0)
 S VPRII=0 F  S VPRII=$O(VPRLIST2(VPRII)) Q:VPRII'>0  D
"RTN","VPRROS3",123,0)
 . K VPRLIST(VPRII)
"RTN","VPRROS3",124,0)
 Q
"RTN","VPRROS3",125,0)
 ;
"RTN","VPRROS3",126,0)
SEND ;send pending rosters.  Called through RPC
"RTN","VPRROS3",127,0)
 S VPRRCNT=0,VPRI=0,VPRII=0
"RTN","VPRROS3",128,0)
 S VPRVER="<results version='"_$P($T(VPRROS3+1),";",3)_"'>"
"RTN","VPRROS3",129,0)
 D ADD(VPRVER)
"RTN","VPRROS3",130,0)
 ;S VPRRNAME=$P(^VPROSTER(VPRIEN,0),"^",1),VPRDNAME=$P(^VPROSTER(VPRIEN,0),"^",2)
"RTN","VPRROS3",131,0)
 S VPRTEXT="<roster ien='' ownername='"_VPROWNNM_"'  ownerid='"_VPROWNID_"'>" D ADD(VPRTEXT)
"RTN","VPRROS3",132,0)
 S VPRTEXT="<rosterName>"_VPRRNAME_"</rosterName>" D ADD(VPRTEXT)
"RTN","VPRROS3",133,0)
 S VPRTEXT="<displayName>"_VPRDNAME_"</displayName>" D ADD(VPRTEXT)
"RTN","VPRROS3",134,0)
 D ADD("<patients>")
"RTN","VPRROS3",135,0)
 K VPRII S VPRII=0 F  S VPRII=$O(VPRLIST(VPRII)) Q:VPRII'>0  D 
"RTN","VPRROS3",136,0)
 . S DFN=VPRII
"RTN","VPRROS3",137,0)
 . S ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS3",138,0)
 . S NAME=$P(^DPT(DFN,0),"^",1),GENDER=$P(^DPT(DFN,0),"^",2),SSN=$P(^DPT(DFN,0),"^",9),DOB=$P(^DPT(DFN,0),"^",3),VPRDOB=$$FMTHL7^XLFDT(DOB)
"RTN","VPRROS3",139,0)
 . S Y="<patient name='"_NAME_"' gender='"_GENDER_"' dob='"_VPRDOB_"' ssn='"_SSN_"' id='"_DFN_$S(ICN:"' icn='"_ICN,1:"")_"' />" D ADD(Y)
"RTN","VPRROS3",140,0)
 D ADD("</patients>")
"RTN","VPRROS3",141,0)
 D ADD("</roster>")
"RTN","VPRROS3",142,0)
 S VPRTEXT="</results>" D ADD(VPRTEXT)
"RTN","VPRROS3",143,0)
 Q
"RTN","VPRROS3",144,0)
 ;
"RTN","VPRROS3",145,0)
 ;
"RTN","VPRROS3",146,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRROS3",147,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRROS3",148,0)
 S @VPR@(VPRI)=X
"RTN","VPRROS3",149,0)
 Q
"RTN","VPRROS3",150,0)
 ;
"RTN","VPRROS3",151,0)
UPDATE(VPR,VPRARRAY) ;;Update Roster data with data from GUI
"RTN","VPRROS3",152,0)
 N VPRZ,VPRRNAME,VPRID,VPRDNAME,VPRDIS,VPRRID,FDA,VPROWNID,VPRSRCID,VPROP,VPRSRCNM,VPRLAB,VPRVAR
"RTN","VPRROS3",153,0)
 S VPR=$NA(^TMP($J,"VPROSTER"))
"RTN","VPRROS3",154,0)
 Q:'$$VALIDATE
"RTN","VPRROS3",155,0)
 D NOW^%DTC S VPRDT=% ;added 5/11/12 grr for tracing
"RTN","VPRROS3",156,0)
 S VPRZ="" S VPRZ=$O(VPRARRAY(VPRZ)) Q:VPRZ=""
"RTN","VPRROS3",157,0)
 S VPRRNAME=$P(VPRARRAY(VPRZ),"^",1),VPRRID=$P(VPRARRAY(VPRZ),"^",2),VPRDNAME=$P(VPRARRAY(VPRZ),"^",3),VPRDIS=$P(VPRARRAY(VPRZ),"^",4),VPROWNID=$P(VPRARRAY(VPRZ),"^",5)
"RTN","VPRROS3",158,0)
 I VPRRID="" D ADDROS
"RTN","VPRROS3",159,0)
 I '$D(^VPROSTER(VPRRID,0)) S @VPR@(1)="RosterID passed was invalid" Q
"RTN","VPRROS3",160,0)
 S FDA(1,561.2,""_VPRRID_","_"",.01)=VPRRNAME
"RTN","VPRROS3",161,0)
 S FDA(1,561.2,""_VPRRID_","_"",.02)=VPRDNAME
"RTN","VPRROS3",162,0)
 S FDA(1,561.2,""_VPRRID_","_"",.03)=VPRDIS
"RTN","VPRROS3",163,0)
 S FDA(1,561.2,""_VPRRID_","_"",.04)=VPROWNID
"RTN","VPRROS3",164,0)
 S FDA(1,561.2,""_VPRRID_","_"",99)=VPRDT
"RTN","VPRROS3",165,0)
 D UPDATE^DIE("","FDA(1)")
"RTN","VPRROS3",166,0)
 K ^VPROSTER(VPRRID,1),FDA
"RTN","VPRROS3",167,0)
 F  S VPRZ=$O(VPRARRAY(VPRZ)) Q:VPRZ=""  D
"RTN","VPRROS3",168,0)
 . S VPRY=VPRARRAY(VPRZ)
"RTN","VPRROS3",169,0)
 . S VPRSRCID=$P(VPRY,"^",3)
"RTN","VPRROS3",170,0)
 . S VPROP=$P(VPRY,"^",2)
"RTN","VPRROS3",171,0)
 . S VPRSRCNM=$P(VPRY,"^",1)
"RTN","VPRROS3",172,0)
 . S VPRLAB=""
"RTN","VPRROS3",173,0)
 . I VPRSRCNM["Clinic" S VPRVAR="SC("
"RTN","VPRROS3",174,0)
 . I VPRSRCNM["Ward" S VPRVAR="DIC(42,"
"RTN","VPRROS3",175,0)
 . I VPRSRCNM["Patient" S VPRVAR="DPT("
"RTN","VPRROS3",176,0)
 . I VPRSRCNM["PCMM Team" S VPRVAR="SCTM(404.51,"
"RTN","VPRROS3",177,0)
 . I VPRSRCNM["OE/RR" S VPRVAR="OR(100.21,"
"RTN","VPRROS3",178,0)
 . I VPRSRCNM["VPR Roster" S VPRVAR="VPROSTER("
"RTN","VPRROS3",179,0)
 . I VPRSRCNM["Specialty" S VPRVAR="DIC(45.7,"
"RTN","VPRROS3",180,0)
 . I VPRSRCNM["Provider" S VPRVAR="VA(200,"
"RTN","VPRROS3",181,0)
 . I VPRSRCNM["PXRM" S VPRVAR="PXRM(810.4,"
"RTN","VPRROS3",182,0)
 . S FDA(1,561.21,"+1,"_VPRRID_",",.01)=VPRZ
"RTN","VPRROS3",183,0)
 . S FDA(1,561.21,"+1,"_VPRRID_",",.02)=VPRSRCID_";"_VPRVAR
"RTN","VPRROS3",184,0)
 . S FDA(1,561.21,"+1,"_VPRRID_",",.03)=$S(VPROP="UNION":0,VPROP="INTERSECTION":1,1:2)
"RTN","VPRROS3",185,0)
 . I VPRSRCNM="PXRM" S FDA(1,561.21,"+1,"_VPRRID_",",.06)="UPDATE TEST HMP ROSTER"
"RTN","VPRROS3",186,0)
 . D UPDATE^DIE("","FDA(1)")
"RTN","VPRROS3",187,0)
 D COMPILE^VPRROS2(.VPR,VPRRID)
"RTN","VPRROS3",188,0)
 Q VPR
"RTN","VPRROS3",189,0)
 ;
"RTN","VPRROS3",190,0)
ADDROS ;
"RTN","VPRROS3",191,0)
 N DIC,DLAYGO,X,Y
"RTN","VPRROS3",192,0)
 S DIC="^VPROSTER(",DIC(0)="LQ",DLAYGO=561.2,X=VPRRNAME D ^DIC S VPRRID=+Y
"RTN","VPRROS3",193,0)
 Q
"RTN","VPRROS3",194,0)
 ;
"RTN","VPRROS3",195,0)
DELROS(VPR,VPRIEN) ;
"RTN","VPRROS3",196,0)
 S HDUZ(0)=DUZ(0),DUZ(0)="@",DIK="^VPROSTER(",DA=VPRIEN,DIDEL=1 D ^DIK S DUZ(0)=HDUZ(0),VPR="Roster Deleted!"
"RTN","VPRROS3",197,0)
 K HDUZ,DIK,DIDEL
"RTN","VPRROS3",198,0)
 Q
"RTN","VPRROS3",199,0)
 ;
"RTN","VPRROS3",200,0)
VALIDATE() ;Will verify VPRARRAY entries are all valid
"RTN","VPRROS3",201,0)
 N I,OUT,OK
"RTN","VPRROS3",202,0)
 S I="",OK=0,OUT=0
"RTN","VPRROS3",203,0)
 F  S I=$O(VPRARRAY(I)) Q:I=""  D  Q:OUT
"RTN","VPRROS3",204,0)
 . I $L(VPRARRAY(I),"^")'=5&($L(VPRARRAY(I),"^")'=3) S @VPR@(1)="Parameter format invalid: "_VPRARRAY(I) S OK=0,OUT=1 Q
"RTN","VPRROS3",205,0)
 . I $L(VPRARRAY(I),"^")=3 D  Q:OUT
"RTN","VPRROS3",206,0)
 . . I $P(VPRARRAY(I),"^",2)="UNION"!($P(VPRARRAY(I),"^",2)="INTERSECTION")!($P(VPRARRAY(I),"^",2)="DIFFERENCE") S OK=1,OUT=0
"RTN","VPRROS3",207,0)
 . . E  S OK=0,OUT=1,@VPR@(1)="Parameter format invalid: "_VPRARRAY(I) Q
"RTN","VPRROS3",208,0)
 . . I $P(VPRARRAY(I),"^",3)>0 S OK=1,OUT=0
"RTN","VPRROS3",209,0)
 . . E  S OK=0,OUT=1,@VPR@(1)="Parameter format invalid: "_VPRARRAY(I) Q
"RTN","VPRROS3",210,0)
 Q OK
"RTN","VPRROS3",211,0)
 ;
"RTN","VPRROS3",212,0)
TEST ;TEMPORARY
"RTN","VPRROS3",213,0)
 S VPRARRAY(0)="AAA TEST^^aaaa test^^1088"
"RTN","VPRROS3",214,0)
 S VPRARRAY(1)="Patient^UNION^100846"
"RTN","VPRROS3",215,0)
 S VPRARRAY(2)="Patient^UNION^100847"
"RTN","VPRROS3",216,0)
 D UPDATE(.VPR,.VPRARRAY)
"RTN","VPRROS3",217,0)
 Q
"RTN","VPRROS3",218,0)
 ;
"RTN","VPRROS4")
0^18^B87434809
"RTN","VPRROS4",1,0)
VPRROS4 ;SLC/GRR -- Roster Management
"RTN","VPRROS4",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;AUG 17, 2011;Build 55
"RTN","VPRROS4",3,0)
GETSRC(VPR,VPRSRC,VPRFILT) ;; Get Source data from requested source type
"RTN","VPRROS4",4,0)
 ;;  For example, If source type is "Clinic", pass all clinic names and id's to calling GUI
"RTN","VPRROS4",5,0)
 ;; Input - VPRARRAY - contains roster data entered thru GUI
"RTN","VPRROS4",6,0)
 ;K VPRLIST,VPRLIST2
"RTN","VPRROS4",7,0)
 N VPRLIST,VPRLIST2,VPRTYPE,VPERR,VPRI,VPRRNAME,VPRY,VPROP,VPRTAG,VPRLAB,VPRNLIST,VPRSTN,VPRTEXT,VPRVER,Y,ACT,CHK,CSNM
"RTN","VPRROS4",8,0)
 N CSNUM,CSP,IDNAME,IDVALUE,TYPENM,UPNAME,VDATE,VPRACT,VPRDATA,VPRDIVP,VPRNAME,VPRCNT,VPRRCNT,ACTIVE
"RTN","VPRROS4",9,0)
 S (VPRLIST,VPRTYPE,VPROP,VPRLIST2,VPERR)="",VPRI=0
"RTN","VPRROS4",10,0)
 K ^TMP($J,"VPROSTER")
"RTN","VPRROS4",11,0)
 S VPR=$NA(^TMP($J,"VPROSTER"))
"RTN","VPRROS4",12,0)
 S VPRACT="I 1"
"RTN","VPRROS4",13,0)
 I VPRFILT'="" S X=VPRFILT X ^%ZOSF("UPPERCASE") S VPRFILT=Y S VPRACT="I UPNAME[VPRFILT"
"RTN","VPRROS4",14,0)
 I VPRSRC["Clinic" S VPRLAB="CLIN"
"RTN","VPRROS4",15,0)
 I VPRSRC["Ward" S VPRLAB="WARD"
"RTN","VPRROS4",16,0)
 I VPRSRC["Patient" S VPRLAB="PAT"
"RTN","VPRROS4",17,0)
 I VPRSRC["PCMM Team" S VPRLAB="PCMM"
"RTN","VPRROS4",18,0)
 I VPRSRC["OE/RR" S VPRLAB="CPRS"
"RTN","VPRROS4",19,0)
 I VPRSRC["VPR Roster" S VPRLAB="ROST"
"RTN","VPRROS4",20,0)
 I VPRSRC["Specialty" S VPRLAB="SPEC"
"RTN","VPRROS4",21,0)
 I VPRSRC["Provider" S VPRLAB="PROV"
"RTN","VPRROS4",22,0)
 I VPRSRC["PXRM" S VPRLAB="PXRM"
"RTN","VPRROS4",23,0)
 I VPRLAB="" S VPERR="1^INVALID SOURCE TYPE" Q
"RTN","VPRROS4",24,0)
 D @VPRLAB
"RTN","VPRROS4",25,0)
 D SEND
"RTN","VPRROS4",26,0)
 Q VPR
"RTN","VPRROS4",27,0)
 ;
"RTN","VPRROS4",28,0)
CLIN ;Process patients for this clinic.  Select all if filter is null
"RTN","VPRROS4",29,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",30,0)
 S VPRNAME="" F  S VPRNAME=$O(^SC("B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",31,0)
 . S VPRI=$O(^SC("B",VPRNAME,0)) I $P(^SC(VPRI,0),"^",3)="C" D
"RTN","VPRROS4",32,0)
 . . S CSP=$P(^SC(VPRI,0),"^",7),CSNM=$P(^DIC(40.7,CSP,0),"^",1),CSNUM=$P(^DIC(40.7,CSP,0),"^",2)
"RTN","VPRROS4",33,0)
 . . S VPRDIVP=$P(^SC(VPRI,0),"^",15),VPRDIV=$P($G(^DG(40.8,VPRDIVP,0)),"^",1)
"RTN","VPRROS4",34,0)
 . . S SVC=$P(^SC(VPRI,0),"^",8),SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="R":"REHAB MEDICINE",SVC="N":"NEUROLOGY",1:"NONE")
"RTN","VPRROS4",35,0)
 . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",36,0)
 . . S VPRARRAY(VPRNAME,1)="DIVISION"_"^"_VPRDIV
"RTN","VPRROS4",37,0)
 . . S VPRARRAY(VPRNAME,2)="CLINIC STOP NAME"_"^"_CSNM
"RTN","VPRROS4",38,0)
 . . S VPRARRAY(VPRNAME,3)="CLINIC STOP NUMBER"_"^"_CSNUM
"RTN","VPRROS4",39,0)
 . . S VPRARRAY(VPRNAME,4)="SERVICE"_"^"_SERVICE
"RTN","VPRROS4",40,0)
 Q
"RTN","VPRROS4",41,0)
 ;
"RTN","VPRROS4",42,0)
WARD ;Process patients for this ward
"RTN","VPRROS4",43,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",44,0)
 S VPRNAME="" F  S VPRNAME=$O(^DIC(42,"B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D 
"RTN","VPRROS4",45,0)
 . S VPRI=$O(^DIC(42,"B",VPRNAME,0))
"RTN","VPRROS4",46,0)
 . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",47,0)
 . N DIVP,VPRDIV,SPECP,SPEC,SVC,SERVICE
"RTN","VPRROS4",48,0)
 . S (DIVP,VPRDIV,SPECP,SPEC,SVC,SERVICE)=""
"RTN","VPRROS4",49,0)
 . S DIVP=$P(^DIC(42,VPRI,0),"^",11) I DIVP]"" S VPRDIV=$P($G(^DG(40.8,DIVP,0)),"^",1)
"RTN","VPRROS4",50,0)
 . S SPECP=$P(^DIC(42,VPRI,0),"^",12) I SPECP]"" S SPEC=$P($G(^DIC(42.4,SPECP,0)),"^",1)
"RTN","VPRROS4",51,0)
 . S SVC=$P(^DIC(42,VPRI,0),"^",3)
"RTN","VPRROS4",52,0)
 . S SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="NH":"NHCU",SVC="NE":"NEUROLOGY",SVC="I":"INTERMEDIATE MEDICINE",1:"")
"RTN","VPRROS4",53,0)
 . S:'$L(SERVICE) SERVICE=$S(SVC="R":"REHAB MEDICINE",SVC="SCI":"SPINAL CORD INJURY",SVC="D":"DOMICILLIARY",SVC="B":"BLIND REHAB",1:"NONE")
"RTN","VPRROS4",54,0)
 . S VPRARRAY(VPRNAME,1)="DIVISION"_"^"_VPRDIV
"RTN","VPRROS4",55,0)
 . S VPRARRAY(VPRNAME,2)="SPECIALTY"_"^"_SPEC
"RTN","VPRROS4",56,0)
 . S VPRARRAY(VPRNAME,3)="SERVICE"_"^"_SERVICE
"RTN","VPRROS4",57,0)
 Q
"RTN","VPRROS4",58,0)
 ;
"RTN","VPRROS4",59,0)
PAT ;Process patient from Patient file Source
"RTN","VPRROS4",60,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",61,0)
 N DFN,SEX,DOB,SSN,ICN,DOBOUT
"RTN","VPRROS4",62,0)
 I VPRFILT?1U4N D  Q
"RTN","VPRROS4",63,0)
 . I $D(^DPT("BS5",VPRFILT)) D
"RTN","VPRROS4",64,0)
 . . S VPRI=0 F  S VPRI=$O(^DPT("BS5",VPRFILT,VPRI)) Q:VPRI'>0  D
"RTN","VPRROS4",65,0)
 . . . S DFN=VPRI,ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS4",66,0)
 . . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","VPRROS4",67,0)
 . . . S VPRNAME=$P(^DPT(VPRI,0),"^",1),VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",68,0)
 . . . S SEX=$P(^DPT(VPRI,0),"^",2),DOB=$P(^DPT(VPRI,0),"^",3),SSN=$P(^DPT(VPRI,0),"^",9)
"RTN","VPRROS4",69,0)
 . . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","VPRROS4",70,0)
 . . . S VPRARRAY(VPRNAME,1)="ICN"_"^"_ICN
"RTN","VPRROS4",71,0)
 . . . S VPRARRAY(VPRNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","VPRROS4",72,0)
 . . . S VPRARRAY(VPRNAME,3)="DOB"_"^"_DOBOUT
"RTN","VPRROS4",73,0)
 . . . S VPRARRAY(VPRNAME,4)="SSN"_"^"_SSN
"RTN","VPRROS4",74,0)
 S VPRNAME=VPRFILT
"RTN","VPRROS4",75,0)
 I $D(^DPT("B",VPRNAME)) D  Q
"RTN","VPRROS4",76,0)
 . S VPRI=0 F  S VPRI=$O(^DPT("B",VPRNAME,VPRI)) Q:VPRI'>0  S VPRARRAY(VPRNAME)=VPRI D
"RTN","VPRROS4",77,0)
 . . S DFN=VPRI,ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS4",78,0)
 . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","VPRROS4",79,0)
 . . S SEX=$P(^DPT(VPRI,0),"^",2),DOB=$P(^DPT(VPRI,0),"^",3),SSN=$P(^DPT(VPRI,0),"^",9)
"RTN","VPRROS4",80,0)
 . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","VPRROS4",81,0)
 . . S VPRARRAY(VPRNAME,1)="ICN"_"^"_ICN
"RTN","VPRROS4",82,0)
 . . S VPRARRAY(VPRNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","VPRROS4",83,0)
 . . S VPRARRAY(VPRNAME,3)="DOB"_"^"_DOBOUT
"RTN","VPRROS4",84,0)
 . . S VPRARRAY(VPRNAME,4)="SSN"_"^"_SSN
"RTN","VPRROS4",85,0)
 E  F  S VPRNAME=$O(^DPT("B",VPRNAME)) Q:VPRNAME=""!(VPRNAME'[VPRFILT)  D
"RTN","VPRROS4",86,0)
 . S VPRI=0 F  S VPRI=$O(^DPT("B",VPRNAME,VPRI)) Q:VPRI'>0  S VPRARRAY(VPRNAME)=VPRI D
"RTN","VPRROS4",87,0)
 . . S DFN=VPRI,ICN=$$GETICN^MPIF001(DFN)
"RTN","VPRROS4",88,0)
 . . K WARN S WARN="" D SECCHK ;ZW WARN
"RTN","VPRROS4",89,0)
 . . S SEX=$P(^DPT(VPRI,0),"^",2),DOB=$P(^DPT(VPRI,0),"^",3),SSN=$P(^DPT(VPRI,0),"^",9)
"RTN","VPRROS4",90,0)
 . . S DOBOUT=$$FMTHL7^XLFDT(DOB)
"RTN","VPRROS4",91,0)
 . . S VPRARRAY(VPRNAME,1)="ICN"_"^"_ICN
"RTN","VPRROS4",92,0)
 . . S VPRARRAY(VPRNAME,2)="GENDER"_"^"_$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"NONE")
"RTN","VPRROS4",93,0)
 . . S VPRARRAY(VPRNAME,3)="DOB"_"^"_DOBOUT
"RTN","VPRROS4",94,0)
 . . S VPRARRAY(VPRNAME,4)="SSN"_"^"_SSN
"RTN","VPRROS4",95,0)
 Q
"RTN","VPRROS4",96,0)
 ;
"RTN","VPRROS4",97,0)
PCMM ;Process patients from a PCMM team
"RTN","VPRROS4",98,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",99,0)
 S VPRSTN=$P($G(^XMB(1,1,"XUS")),"^",17)
"RTN","VPRROS4",100,0)
 S VPRI=0 F  S VPRI=$O(^SCTM(404.51,"AINST",VPRSTN,VPRI)) Q:VPRI'>0  S VPRNAME=$P($G(^SCTM(404.51,VPRI,0)),"^",1) S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",101,0)
 . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",102,0)
 . N TEAMP,TEAMPP,SVCP,SERVICE S (TEAMP,TEAMPP,SVCP,SERVICE)=""
"RTN","VPRROS4",103,0)
 . S TEAMPP=$P(^SCTM(404.51,VPRI,0),"^",3) I TEAMPP]"" S TEAMP=$P(^SD(403.47,TEAMPP,0),"^",1)
"RTN","VPRROS4",104,0)
 . S SVCP=$P(^SCTM(404.51,VPRI,0),"^",6) I SVCP]"" S SERVICE=$P(^DIC(49,SVCP,0),"^",1)
"RTN","VPRROS4",105,0)
 . S VPRARRAY(VPRNAME,1)="TEAM PURPOSE"_"^"_TEAMP
"RTN","VPRROS4",106,0)
 . S VPRARRAY(VPRNAME,2)="SERVICE"_"^"_SERVICE
"RTN","VPRROS4",107,0)
 Q
"RTN","VPRROS4",108,0)
 ;
"RTN","VPRROS4",109,0)
CPRS ;Process patients from CPRS Lists
"RTN","VPRROS4",110,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",111,0)
 S VPRNAME="" F  S VPRNAME=$O(^OR(100.21,"B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",112,0)
 . S VPRI=0 F  S VPRI=$O(^OR(100.21,"B",VPRNAME,VPRI)) Q:VPRI'>0  D
"RTN","VPRROS4",113,0)
 . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",114,0)
 . . N TYPE,CREATP,CREATOR
"RTN","VPRROS4",115,0)
 . . S TYPE=$P(^OR(100.21,VPRI,0),"^",2)
"RTN","VPRROS4",116,0)
 . . S TYPENM=$S(TYPE="P":"PERSONAL PATIENT",TYPE="TA":"TEAM PATIENT AUTOLINKED",TYPE="TM":"TEAM PATIENT MANUAL",TYPE="MRAL":"MANUAL REMOVAL AUTOLINK ADDITION",1:"NONE")
"RTN","VPRROS4",117,0)
 . . S CREATP=$P(^OR(100.21,VPRI,0),"^",5),CREATOR=""
"RTN","VPRROS4",118,0)
 . . I CREATP]"" S CREATOR=$P($G(^VA(200,CREATP,0)),"^",1)
"RTN","VPRROS4",119,0)
 . . S VPRARRAY(VPRNAME,1)="TYPE"_"^"_TYPENM
"RTN","VPRROS4",120,0)
 . . S VPRARRAY(VPRNAME,2)="CREATOR"_"^"_CREATOR
"RTN","VPRROS4",121,0)
 Q
"RTN","VPRROS4",122,0)
 ;
"RTN","VPRROS4",123,0)
ROST ;Process patients from selected roster
"RTN","VPRROS4",124,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",125,0)
 S VPRNAME="" F  S VPRNAME=$O(^VPROSTER("B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",126,0)
 . S VPRI=$O(^VPROSTER("B",VPRNAME,0)) S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",127,0)
 . N DISP,OWNERP,OWNER
"RTN","VPRROS4",128,0)
 . S DISP=$P(^VPROSTER(VPRI,0),"^",2)
"RTN","VPRROS4",129,0)
 . S OWNERP=$P(^VPROSTER(VPRI,0),"^",4),OWNER=""
"RTN","VPRROS4",130,0)
 . I OWNERP]"" S OWNER=$P($G(^VA(200,OWNERP,0)),"^",1)
"RTN","VPRROS4",131,0)
 . S VPRARRAY(VPRNAME,1)="DISPLAY NAME"_"^"_DISP
"RTN","VPRROS4",132,0)
 . S VPRARRAY(VPRNAME,2)="OWNER"_"^"_OWNER
"RTN","VPRROS4",133,0)
 Q
"RTN","VPRROS4",134,0)
 ;
"RTN","VPRROS4",135,0)
SPEC ;Process patients with selected Treating Specialty
"RTN","VPRROS4",136,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",137,0)
 S VPRNAME="" F  S VPRNAME=$O(^DIC(42.4,"B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",138,0)
 . S VPRI=$O(^DIC(42.4,"B",VPRNAME,0)),VDATE=$O(^DIC(42.4,VPRI,"E","ADATE","")),ACT=$O(^DIC(42.4,VPRI,"E","ADATE",VDATE,0)),ACTIVE=$P(^DIC(42.4,VPRI,"E",ACT,0),"^",2)
"RTN","VPRROS4",139,0)
 . I ACTIVE D
"RTN","VPRROS4",140,0)
 . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",141,0)
 . . N SVC,SERVICE
"RTN","VPRROS4",142,0)
 . . S SVC=$P(^DIC(42.4,VPRI,0),"^",3)
"RTN","VPRROS4",143,0)
 . . S SERVICE=$S(SVC="M":"MEDICINE",SVC="S":"SURGERY",SVC="P":"PSYCHIATRY",SVC="NH":"NHCU",SVC="NE":"NEUROLOGY",SVC="I":"INTERMEDIATE MEDICINE",1:"")
"RTN","VPRROS4",144,0)
 . . S:'$L(SERVICE) SERVICE=$S(SVC="R":"REHAB MEDICINE",SVC="SCI":"SPINAL CORD INJURY",SVC="D":"DOMICILLIARY",SVC="B":"BLIND REHAB",SVC="RE":"RESPITE CARE",1:"NONE")
"RTN","VPRROS4",145,0)
 . . S VPRARRAY(VPRNAME,1)="SERVICE"_"^"_SERVICE
"RTN","VPRROS4",146,0)
 Q
"RTN","VPRROS4",147,0)
 ;
"RTN","VPRROS4",148,0)
PROV ;Process patients for selected provider
"RTN","VPRROS4",149,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",150,0)
 N TITLEP,VTITLE,SEX
"RTN","VPRROS4",151,0)
 S VTITLE=""
"RTN","VPRROS4",152,0)
 I VPRFILT'="" D
"RTN","VPRROS4",153,0)
 . S VPRNAME=VPRFILT
"RTN","VPRROS4",154,0)
 . F  S VPRNAME=$O(^VA(200,"B",VPRNAME)) Q:VPRNAME=""!(VPRNAME'[VPRFILT)  D
"RTN","VPRROS4",155,0)
 . . S VPRI=0 F  S VPRI=$O(^VA(200,"B",VPRNAME,VPRI)) Q:VPRI'>0  D
"RTN","VPRROS4",156,0)
 . . . S TITLEP=$P(^VA(200,VPRI,0),"^",9) I TITLEP]"" S VTITLE=$P(^DIC(3.1,TITLEP,0),"^",1)
"RTN","VPRROS4",157,0)
 . . . S SEX=$P(^VA(200,VPRI,1),"^",2)
"RTN","VPRROS4",158,0)
 . . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",159,0)
 . . . S VPRARRAY(VPRNAME,1)="SEX"_"^"_SEX
"RTN","VPRROS4",160,0)
 . . . S VPRARRAY(VPRNAME,2)="TITLE"_"^"_VTITLE
"RTN","VPRROS4",161,0)
 I VPRFILT="" D
"RTN","VPRROS4",162,0)
 . S VPRNAME="" F  S VPRNAME=$O(^VA(200,"B",VPRNAME)) Q:VPRNAME=""  D
"RTN","VPRROS4",163,0)
 . . S VPRI=0 F  S VPRI=$O(^VA(200,"B",VPRNAME,VPRI)) Q:VPRI'>0  D
"RTN","VPRROS4",164,0)
 . . . S TITLEP=$P(^VA(200,VPRI,0),"^",9) I TITLEP]"" S VTITLE=$P(^DIC(3.1,TITLEP,0),"^",1)
"RTN","VPRROS4",165,0)
 . . . S SEX=$P(^VA(200,VPRI,1),"^",2)
"RTN","VPRROS4",166,0)
 . . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",167,0)
 . . . S VPRARRAY(VPRNAME,1)="SEX"_"^"_SEX
"RTN","VPRROS4",168,0)
 . . . S VPRARRAY(VPRNAME,2)="TITLE"_"^"_VTITLE
"RTN","VPRROS4",169,0)
 Q
"RTN","VPRROS4",170,0)
 ;
"RTN","VPRROS4",171,0)
PXRM ;Process patients for selected panel
"RTN","VPRROS4",172,0)
 K VPRARRAY S VPRARRAY=""
"RTN","VPRROS4",173,0)
 S VPRNAME="" F  S VPRNAME=$O(^PXRM(810.4,"B",VPRNAME)) Q:VPRNAME=""  S X=VPRNAME X ^%ZOSF("UPPERCASE") S UPNAME=Y X VPRACT I  D
"RTN","VPRROS4",174,0)
 . S VPRI=0 F  S VPRI=$O(^PXRM(810.4,"B",VPRNAME,VPRI)) Q:VPRI'>0  I $P($G(^PXRM(810.4,VPRI,0)),"^",3)=3 D
"RTN","VPRROS4",175,0)
 . . S VPRARRAY(VPRNAME)=VPRI
"RTN","VPRROS4",176,0)
 . . N LISTP,LISTN,CLASS,CLASSNM
"RTN","VPRROS4",177,0)
 . . S (LISTP,LISTN,CLASS,CLASSNM)="" ;added 3/15/11 grr
"RTN","VPRROS4",178,0)
 . . S LISTP=$P(^PXRM(810.4,VPRI,0),"^",7) I LISTP]"" S LISTN=$P(^PXRMD(811.5,LISTP,0),"^",1)
"RTN","VPRROS4",179,0)
 . . S CLASS=$P(^PXRM(810.4,VPRI,100),"^",1),CLASSNM=$S(CLASS="N":"National",CLASS="V":"VISN",CLASS="L":"Local",1:"NONE")
"RTN","VPRROS4",180,0)
 . . S VPRARRAY(VPRNAME,1)="TERM"_"^"_LISTN
"RTN","VPRROS4",181,0)
 . . S VPRARRAY(VPRNAME,2)="CLASS"_"^"_CLASSNM
"RTN","VPRROS4",182,0)
 Q
"RTN","VPRROS4",183,0)
 ;
"RTN","VPRROS4",184,0)
SEND ;send pending rosters.  Called through RPC
"RTN","VPRROS4",185,0)
 S VPRRCNT=0,VPRI=0
"RTN","VPRROS4",186,0)
 S VPRVER="<results version='"_$P($T(VPRROS4+1),";",3)_"'>"
"RTN","VPRROS4",187,0)
 D ADD(VPRVER)
"RTN","VPRROS4",188,0)
 S VPRTEXT="<source name='"_VPRSRC_"' >" D ADD(VPRTEXT)
"RTN","VPRROS4",189,0)
 D ADD("<entries>")
"RTN","VPRROS4",190,0)
 K VPRII S VPRII="" F  S VPRII=$O(VPRARRAY(VPRII)) Q:VPRII=""  D
"RTN","VPRROS4",191,0)
 . S VPRDATA=$$ESC^VPRD(VPRII)
"RTN","VPRROS4",192,0)
 . S VPRTEXT="<entry NAME='"_VPRDATA_"' id='"_VPRARRAY(VPRII)_"' />" D ADD(VPRTEXT)
"RTN","VPRROS4",193,0)
 . D ADD("<identifiers>")
"RTN","VPRROS4",194,0)
 . N I S I=0 F  S I=$O(VPRARRAY(VPRII,I)) Q:I'>0  D
"RTN","VPRROS4",195,0)
 . . S IDNAME=$P(VPRARRAY(VPRII,I),"^",1),IDVALUE=$P(VPRARRAY(VPRII,I),"^",2),IDVALUE=$$ESC^VPRD(IDVALUE)
"RTN","VPRROS4",196,0)
 . . S VPRTEXT="<ident name='"_IDNAME_"' value='"_IDVALUE_"' />" D ADD(VPRTEXT)
"RTN","VPRROS4",197,0)
 . D ADD("</identifiers>")
"RTN","VPRROS4",198,0)
 D ADD("</entries>")
"RTN","VPRROS4",199,0)
 D ADD("</source>")
"RTN","VPRROS4",200,0)
 S VPRTEXT="</results>" D ADD(VPRTEXT)
"RTN","VPRROS4",201,0)
 Q
"RTN","VPRROS4",202,0)
 ;
"RTN","VPRROS4",203,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRROS4",204,0)
 I X'["<" S X=$$ESC^VPRD(X)
"RTN","VPRROS4",205,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRROS4",206,0)
 S @VPR@(VPRI)=X
"RTN","VPRROS4",207,0)
 Q
"RTN","VPRROS4",208,0)
 ;
"RTN","VPRROS4",209,0)
SECCHK ; check for sensitive record
"RTN","VPRROS4",210,0)
 N VPRY,I,X
"RTN","VPRROS4",211,0)
 K WARN
"RTN","VPRROS4",212,0)
 D PTSEC^DGSEC4(.VPRY,DFN,1)  ;IA #3027
"RTN","VPRROS4",213,0)
 S CHK("dfn")=DFN
"RTN","VPRROS4",214,0)
 S CHK("sensitive")=(VPRY(1)>0)
"RTN","VPRROS4",215,0)
 S CHK("mayAccess")=(VPRY(1)<3)
"RTN","VPRROS4",216,0)
 S CHK("logAccess")=(VPRY(1)>1)
"RTN","VPRROS4",217,0)
 M WARN=VPRY K WARN(1)
"RTN","VPRROS4",218,0)
 ;
"RTN","VPRROS5")
0^19^B9403802
"RTN","VPRROS5",1,0)
VPRROS5 ;SLC/GRR -- Clinical Reminders List Processing
"RTN","VPRROS5",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRROS5",3,0)
 ;
"RTN","VPRROS5",4,0)
 ; External References          DBIA#
"RTN","VPRROS5",5,0)
 ; -------------------          -----
"RTN","VPRROS5",6,0)
 ;
"RTN","VPRROS5",7,0)
 ; ------------ Get Panel(s) from VistA ------------
"RTN","VPRROS5",8,0)
 ;
"RTN","VPRROS5",9,0)
EN(VPR) ; -- find Panels to update
"RTN","VPRROS5",10,0)
 K ^TMP($J,"VPRPANEL")
"RTN","VPRROS5",11,0)
 N VPRPAN,VPRPAT,VPRI,MSG,PATCREAT,PLISTPUG,VPRC,VPRT
"RTN","VPRROS5",12,0)
 S VPR=$NA(^TMP($J,"VPR")),VPRC=0,VPRT=0
"RTN","VPRROS5",13,0)
 F  S VPRC=$O(^VPRPANEL(VPRC)) Q:VPRC'>0  D
"RTN","VPRROS5",14,0)
 . S VPRT=VPRT+1
"RTN","VPRROS5",15,0)
 . S VPRPAN(VPRC)=^VPRPANEL(VPRC,0) D
"RTN","VPRROS5",16,0)
 . N LIEN,PLNAME S LIEN=$P(VPRPAN(VPRC),"^"),PLNAME=$P(VPRPAN(VPRC),U,3)
"RTN","VPRROS5",17,0)
 . ;agp need to determine what secure and over should be set to
"RTN","VPRROS5",18,0)
 . S SECURE=0,OVER=1
"RTN","VPRROS5",19,0)
 . D RUNLIST(.VPRPAN,LIEN,PLNAME,SECURE,OVER)
"RTN","VPRROS5",20,0)
CREATE ; -- create panel(s) in XML
"RTN","VPRROS5",21,0)
 N VPRVER S VPRVER="<results version='"_$P($T(VPRPANEL+1),";",3)_"'>"
"RTN","VPRROS5",22,0)
 N VPRTTXT S VPRTTXT="<panels total='"_VPRT_"'>"
"RTN","VPRROS5",23,0)
 D ADD(VPRVER),ADD(VPRTTXT)
"RTN","VPRROS5",24,0)
 D PANEL
"RTN","VPRROS5",25,0)
 S TEXT="</results>" D ADD(TEXT)
"RTN","VPRROS5",26,0)
 Q
"RTN","VPRROS5",27,0)
 ;
"RTN","VPRROS5",28,0)
PANEL ;-- create panel XML
"RTN","VPRROS5",29,0)
 S VPRC=0 F  S VPRC=$O(VPRPAN(VPRC)) Q:VPRC'>0  D
"RTN","VPRROS5",30,0)
 .D ADD("<panel>")
"RTN","VPRROS5",31,0)
 .N TEXT S TEXT="<panel name='"_$P(VPRPAN(VPRC),"^",2)_"' />" D ADD(TEXT)
"RTN","VPRROS5",32,0)
 .S TEXT="<panelString code='"_$P(VPRPAN(VPRC),"^")_"' />" D ADD(TEXT)
"RTN","VPRROS5",33,0)
 .D PATS
"RTN","VPRROS5",34,0)
 .S TEXT="</panel>" D ADD(TEXT)
"RTN","VPRROS5",35,0)
 S TEXT="</panels>" D ADD(TEXT)
"RTN","VPRROS5",36,0)
 Q
"RTN","VPRROS5",37,0)
 ;
"RTN","VPRROS5",38,0)
CREATEPL(PLNAME,SECURE,OVER) ;
"RTN","VPRROS5",39,0)
 N FDA,IENS,NAME,NUM,RESULT,UNIQUE
"RTN","VPRROS5",40,0)
 S (NUM,RESULT,UNIQUE)=0
"RTN","VPRROS5",41,0)
 ;if overwrite check to see if the list exist
"RTN","VPRROS5",42,0)
 I OVER=1 S RESULT=$O(^PXRMXP(810.5,"B",PLNAME,""))
"RTN","VPRROS5",43,0)
 I RESULT>0 Q RESULT
"RTN","VPRROS5",44,0)
 S NAME=PLNAME
"RTN","VPRROS5",45,0)
 ;if not overwrite find unique name
"RTN","VPRROS5",46,0)
 I OVER=0 D
"RTN","VPRROS5",47,0)
 .I $D(^PXRMXP(810.5,"B",NAME))=0 Q
"RTN","VPRROS5",48,0)
 .F  Q:UNIQUE=1  D
"RTN","VPRROS5",49,0)
 ..S NUM=NUM+1
"RTN","VPRROS5",50,0)
 ..S NAME=PLNAME_" ("_NUM_")"
"RTN","VPRROS5",51,0)
 ..I $D(^PXRMXP(810.5,"B",NAME))=0 S UNIQUE=1
"RTN","VPRROS5",52,0)
 ;create stub in 810.5
"RTN","VPRROS5",53,0)
 S IENS="+1,"
"RTN","VPRROS5",54,0)
 S FDA(810.5,IENS,.01)=NAME
"RTN","VPRROS5",55,0)
 S FDA(810.5,IENS,100)="L"
"RTN","VPRROS5",56,0)
 S FDA(810.5,IENS,.07)=DUZ
"RTN","VPRROS5",57,0)
 S FDA(810.5,IENS,.08)=$S(SECURE=0:"PUB",1:"PVT")
"RTN","VPRROS5",58,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","VPRROS5",59,0)
 ;if error display message and quit
"RTN","VPRROS5",60,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") Q 0
"RTN","VPRROS5",61,0)
 S RESULT=$O(^PXRMXP(810.5,"B",NAME,""))
"RTN","VPRROS5",62,0)
 Q RESULT
"RTN","VPRROS5",63,0)
 ;
"RTN","VPRROS5",64,0)
RUNLIST(VPRPAN,LIEN,PLNAME,SECURE,OVER) ;
"RTN","VPRROS5",65,0)
 N PLIEN
"RTN","VPRROS5",66,0)
 S PLIEN=$$CREATEPL(PLNAME,SECURE,OVER)
"RTN","VPRROS5",67,0)
 S PATCREAT=$S(SECURE=1:"Y",1:0),PLISTPUG=1
"RTN","VPRROS5",68,0)
 I PLIEN=0 Q
"RTN","VPRROS5",69,0)
 D RUN^PXRMLCR(LIEN,PLIEN,"PXRMRULE",DT,DT,0,0)
"RTN","VPRROS5",70,0)
 N VPRPAT S VPRPAT=0
"RTN","VPRROS5",71,0)
 F  S VPRPAT=$O(^PXRMXP(810.5,PLIEN,30,VPRPAT)) Q:VPRPAT'>0  S VPRPAN(VPRC,VPRPAT)=$P($G(^PXRMXP(810.5,PLIEN,30,VPRPAT,0)),"^",1)
"RTN","VPRROS5",72,0)
 Q
"RTN","VPRROS5",73,0)
 ;
"RTN","VPRROS5",74,0)
PATS ; -- create patient XML
"RTN","VPRROS5",75,0)
 S TEXT="<patients>" D ADD(TEXT)
"RTN","VPRROS5",76,0)
 S VPRPAT=0 F  S VPRPAT=$O(VPRPAN(VPRC,VPRPAT)) D  Q:VPRPAT'>0
"RTN","VPRROS5",77,0)
 .I VPRPAT'>0 S TEXT="</patients>" D ADD(TEXT) Q
"RTN","VPRROS5",78,0)
 .S TEXT="<patient code='"_VPRPAN(VPRC,VPRPAT)_"' />" D ADD(TEXT)
"RTN","VPRROS5",79,0)
 ;
"RTN","VPRROS5",80,0)
 ;
"RTN","VPRROS5",81,0)
ADD(X) ; -- Add a line @VPR@(n)=X
"RTN","VPRROS5",82,0)
 S VPRI=$G(VPRI)+1
"RTN","VPRROS5",83,0)
 S @VPR@(VPRI)=X
"RTN","VPRROS5",84,0)
 Q
"RTN","VPRROS5",85,0)
 ;
"RTN","VPRROS5",86,0)
NITELY ; -- Nightly run to update all Panels
"RTN","VPRROS5",87,0)
 ;
"RTN","VPRSR")
0^20^B406288
"RTN","VPRSR",1,0)
VPRSR ;SLC/MKB -- Surgery interface
"RTN","VPRSR",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**3**;Sep 01, 2011;Build 55
"RTN","VPRSR",3,0)
 ;
"RTN","VPRSR",4,0)
 ; Supported by DBIA #4750
"RTN","VPRSR",5,0)
 ;
"RTN","VPRSR",6,0)
 ; ---------------- Update Triggers ----------------
"RTN","VPRSR",7,0)
 ;
"RTN","VPRSR",8,0)
NEW(IEN,DFN,STS) ; -- new surgery request [from SROERR]
"RTN","VPRSR",9,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",10,0)
 D SR^VPREVNT(DFN,IEN)
"RTN","VPRSR",11,0)
 Q
"RTN","VPRSR",12,0)
 ;
"RTN","VPRSR",13,0)
UPD(IEN,DFN,STS) ; -- updated surgery request [from SROERR0]
"RTN","VPRSR",14,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",15,0)
 D SR^VPREVNT(DFN,IEN)
"RTN","VPRSR",16,0)
 Q
"RTN","VPRSR",17,0)
 ;
"RTN","VPRSR",18,0)
DEL(IEN,DFN) ; -- delete surgery request [from SROERR]
"RTN","VPRSR",19,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",20,0)
 D SR^VPREVNT(DFN,IEN,"@")
"RTN","VPRSR",21,0)
 Q
"SEC","^DIC",560,560,0,"AUDIT")
@
"SEC","^DIC",560,560,0,"DD")
@
"SEC","^DIC",560,560,0,"DEL")
@
"SEC","^DIC",560,560,0,"LAYGO")
@
"SEC","^DIC",560,560,0,"RD")
@
"SEC","^DIC",560,560,0,"WR")
@
"SEC","^DIC",560.1,560.1,0,"AUDIT")
@
"SEC","^DIC",560.1,560.1,0,"DD")
@
"SEC","^DIC",560.1,560.1,0,"DEL")
@
"SEC","^DIC",560.1,560.1,0,"LAYGO")
@
"SEC","^DIC",560.1,560.1,0,"RD")
@
"SEC","^DIC",560.1,560.1,0,"WR")
@
"SEC","^DIC",560.11,560.11,0,"AUDIT")
@
"SEC","^DIC",560.11,560.11,0,"DD")
@
"SEC","^DIC",560.11,560.11,0,"DEL")
@
"SEC","^DIC",560.11,560.11,0,"LAYGO")
@
"SEC","^DIC",560.11,560.11,0,"RD")
@
"SEC","^DIC",560.11,560.11,0,"WR")
@
"SEC","^DIC",561,561,0,"AUDIT")
@
"SEC","^DIC",561,561,0,"DD")
@
"SEC","^DIC",561,561,0,"DEL")
@
"SEC","^DIC",561,561,0,"LAYGO")
#
"SEC","^DIC",561,561,0,"RD")
#
"SEC","^DIC",561,561,0,"WR")
#
"SEC","^DIC",561.2,561.2,0,"AUDIT")
@
"SEC","^DIC",561.2,561.2,0,"DD")
@
"SEC","^DIC",561.2,561.2,0,"DEL")
@
"SEC","^DIC",561.2,561.2,0,"LAYGO")
@
"SEC","^DIC",561.2,561.2,0,"RD")
@
"SEC","^DIC",561.2,561.2,0,"WR")
@
"VER")
8.0^22.0
"^DD",560,560,0)
FIELD^^.03^7
"^DD",560,560,0,"DT")
3120523
"^DD",560,560,0,"IX","AR",560.04,.01)

"^DD",560,560,0,"IX","B",560,.01)

"^DD",560,560,0,"NM","VPR SUBSCRIPTION")

"^DD",560,560,0,"VRPK")
VPR
"^DD",560,560,.01,0)
SERVER^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",560,560,.01,1,0)
^.1
"^DD",560,560,.01,1,1,0)
560^B
"^DD",560,560,.01,1,1,1)
S ^VPR(560,"B",$E(X,1,64),DA)=""
"^DD",560,560,.01,1,1,2)
K ^VPR(560,"B",$E(X,1,64),DA)=
"^DD",560,560,.01,3)
Answer must be 1-64 characters in length.
"^DD",560,560,.01,21,0)
^.001^1^1^3120523^^^
"^DD",560,560,.01,21,1,0)
This is the name of the client system that is subscribing to data updates.
"^DD",560,560,.01,"DT")
3120523
"^DD",560,560,.02,0)
APPOINTMENTS^S^1:YES;0:NO;^0;2^Q
"^DD",560,560,.02,3)
Enter YES if this URL should be notified of patients with appointments tomorrow.
"^DD",560,560,.02,21,0)
^^3^3^3110908^
"^DD",560,560,.02,21,1,0)
This field holds a flag, indicating if this URL should be notified via the
"^DD",560,560,.02,21,2,0)
nightly scheduled option VPR APPOINTMENTS of the list of patients expected
"^DD",560,560,.02,21,3,0)
to be seen tomorrow.
"^DD",560,560,.02,"DT")
3110908
"^DD",560,560,.03,0)
ADMISSIONS^S^1:YES;0:NO;^0;3^Q
"^DD",560,560,.03,3)
Enter YES if this URL should be notified of patients when they are admitted.
"^DD",560,560,.03,21,0)
^^2^2^3110908^
"^DD",560,560,.03,21,1,0)
This field holds a flag, indicating if this URL should be notified via http
"^DD",560,560,.03,21,2,0)
when a patient is admitted.
"^DD",560,560,.03,"DT")
3110908
"^DD",560,560,.1,0)
URL^F^^.1;1^K:$L(X)>250!($L(X)<1) X
"^DD",560,560,.1,3)
Answer must be 1-250 characters in length.
"^DD",560,560,.1,21,0)
^^1^1^3110706^
"^DD",560,560,.1,21,1,0)
This is the fully specified URL to call when updates are available.
"^DD",560,560,.1,"DT")
3110706
"^DD",560,560,1,0)
PATIENT^560.01P^^1;0
"^DD",560,560,1,21,0)
^.001^2^2^3110706^^
"^DD",560,560,1,21,1,0)
This is a patient that will be monitored for new data and updates; a
"^DD",560,560,1,21,2,0)
background job will periodically call the URL when new data is available.
"^DD",560,560,3,0)
PROVIDERS^560.03P^^2;0
"^DD",560,560,4,0)
ROSTERS^560.04PA^^3;0
"^DD",560,560.01,0)
PATIENT SUB-FIELD^^2^2
"^DD",560,560.01,0,"DT")
3110706
"^DD",560,560.01,0,"NM","PATIENT")

"^DD",560,560.01,0,"UP")
560
"^DD",560,560.01,.01,0)
NAME^MP2'X^DPT(^0;1^S DINUM=X
"^DD",560,560.01,.01,1,0)
^.1^^0
"^DD",560,560.01,.01,3)
Enter the name of a patient to be tracked.
"^DD",560,560.01,.01,21,0)
^^1^1^3110706^
"^DD",560,560.01,.01,21,1,0)
This is the name of the patient being monitored for new data.
"^DD",560,560.01,.01,"DT")
3110907
"^DD",560,560.01,2,0)
ON^S^1:YES;0:NO;^0;2^Q
"^DD",560,560.01,2,3)
Enter YES to turn on data tracking for this patient.
"^DD",560,560.01,2,21,0)
^.001^3^3^3110706^^
"^DD",560,560.01,2,21,1,0)
This field turns on the Data Monitor for this patient and client system.
"^DD",560,560.01,2,21,2,0)
If ON=true, an alert will be sent to the URL when new data becomes
"^DD",560,560.01,2,21,3,0)
available for this patient.
"^DD",560,560.01,2,"DT")
3110907
"^DD",560,560.03,0)
PROVIDERS SUB-FIELD^^1^2
"^DD",560,560.03,0,"DT")
3110908
"^DD",560,560.03,0,"IX","B",560.03,.01)

"^DD",560,560.03,0,"NM","PROVIDERS")

"^DD",560,560.03,0,"UP")
560
"^DD",560,560.03,.01,0)
NAME^P200'^VA(200,^0;1^Q
"^DD",560,560.03,.01,1,0)
^.1
"^DD",560,560.03,.01,1,1,0)
560.03^B
"^DD",560,560.03,.01,1,1,1)
S ^VPR(560,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",560,560.03,.01,1,1,2)
K ^VPR(560,DA(1),2,"B",$E(X,1,30),DA)
"^DD",560,560.03,.01,"DT")
3110726
"^DD",560,560.03,1,0)
PATIENTS^560.031P^^1;0
"^DD",560,560.031,0)
PATIENTS SUB-FIELD^^.01^1
"^DD",560,560.031,0,"DT")
3110908
"^DD",560,560.031,0,"IX","B",560.031,.01)

"^DD",560,560.031,0,"NM","PATIENTS")

"^DD",560,560.031,0,"UP")
560.03
"^DD",560,560.031,.01,0)
PATIENTS^P2'^DPT(^0;1^Q
"^DD",560,560.031,.01,1,0)
^.1
"^DD",560,560.031,.01,1,1,0)
560.031^B
"^DD",560,560.031,.01,1,1,1)
S ^VPR(560,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",560,560.031,.01,1,1,2)
K ^VPR(560,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",560,560.031,.01,"DT")
3110908
"^DD",560,560.04,0)
ROSTERS SUB-FIELD^^1^2
"^DD",560,560.04,0,"DT")
3110908
"^DD",560,560.04,0,"IX","B",560.04,.01)

"^DD",560,560.04,0,"NM","ROSTERS")

"^DD",560,560.04,0,"UP")
560
"^DD",560,560.04,.01,0)
NAME^P561.2'^VPROSTER(^0;1^Q
"^DD",560,560.04,.01,1,0)
^.1
"^DD",560,560.04,.01,1,1,0)
560.04^B
"^DD",560,560.04,.01,1,1,1)
S ^VPR(560,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",560,560.04,.01,1,1,2)
K ^VPR(560,DA(1),3,"B",$E(X,1,30),DA)
"^DD",560,560.04,.01,1,2,0)
560^AR
"^DD",560,560.04,.01,1,2,1)
S ^VPR(560,"AR",$E(X,1,30),DA(1),DA)=""
"^DD",560,560.04,.01,1,2,2)
K ^VPR(560,"AR",$E(X,1,30),DA(1),DA)
"^DD",560,560.04,.01,1,2,"DT")
3110908
"^DD",560,560.04,.01,"DT")
3110908
"^DD",560,560.04,1,0)
PATIENTS^560.041P^^1;0
"^DD",560,560.041,0)
PATIENTS SUB-FIELD^^.01^1
"^DD",560,560.041,0,"DT")
3110908
"^DD",560,560.041,0,"IX","B",560.041,.01)

"^DD",560,560.041,0,"NM","PATIENTS")

"^DD",560,560.041,0,"UP")
560.04
"^DD",560,560.041,.01,0)
PATIENTS^P2'^DPT(^0;1^Q
"^DD",560,560.041,.01,1,0)
^.1
"^DD",560,560.041,.01,1,1,0)
560.041^B
"^DD",560,560.041,.01,1,1,1)
S ^VPR(560,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",560,560.041,.01,1,1,2)
K ^VPR(560,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",560,560.041,.01,"DT")
3110908
"^DD",560.1,560.1,0)
FIELD^^1^4
"^DD",560.1,560.1,0,"DT")
3121129
"^DD",560.1,560.1,0,"IX","B",560.1,.01)

"^DD",560.1,560.1,0,"NM","VPR PATIENT OBJECT")

"^DD",560.1,560.1,.01,0)
UID^RF^^0;1^K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",560.1,560.1,.01,1,0)
^.1
"^DD",560.1,560.1,.01,1,1,0)
560.1^B
"^DD",560.1,560.1,.01,1,1,1)
S ^VPR(560.1,"B",$E(X,1,63),DA)=""
"^DD",560.1,560.1,.01,1,1,2)
K ^VPR(560.1,"B",$E(X,1,63),DA)
"^DD",560.1,560.1,.01,3)
Answer must be 3-63 characters in length.
"^DD",560.1,560.1,.01,21,0)
^^1^1^3121129^
"^DD",560.1,560.1,.01,21,1,0)
The fully specified Universal ID string for this object.
"^DD",560.1,560.1,.01,23,0)
^^1^1^3121129^
"^DD",560.1,560.1,.01,23,1,0)
urn:va:{systemId}:{DFN}:{collection}:{ien}
"^DD",560.1,560.1,.01,"DT")
3121129
"^DD",560.1,560.1,.02,0)
PATIENT^RP2'^DPT(^0;2^Q
"^DD",560.1,560.1,.02,3)
Enter the patient that owns this object.
"^DD",560.1,560.1,.02,21,0)
^^1^1^3121129^
"^DD",560.1,560.1,.02,21,1,0)
Patient file #2 ien
"^DD",560.1,560.1,.02,"DT")
3121129
"^DD",560.1,560.1,.03,0)
COLLECTION^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",560.1,560.1,.03,3)
Answer must be 3-30 characters in length.
"^DD",560.1,560.1,.03,21,0)
^^1^1^3121129^
"^DD",560.1,560.1,.03,21,1,0)
The name of the type or kind of data this object belongs to.
"^DD",560.1,560.1,.03,"DT")
3121129
"^DD",560.1,560.1,1,0)
DATA^560.101^^1;0
"^DD",560.1,560.101,0)
DATA SUB-FIELD^^.01^1
"^DD",560.1,560.101,0,"DT")
3121129
"^DD",560.1,560.101,0,"NM","DATA")

"^DD",560.1,560.101,0,"UP")
560.1
"^DD",560.1,560.101,.01,0)
DATA^Wx^^0;1^Q
"^DD",560.1,560.101,.01,21,0)
^^1^1^3121129^
"^DD",560.1,560.101,.01,21,1,0)
JSON data object
"^DD",560.1,560.101,.01,"DT")
3121129
"^DD",560.11,560.11,0)
FIELD^^1^3
"^DD",560.11,560.11,0,"DT")
3121129
"^DD",560.11,560.11,0,"IX","B",560.11,.01)

"^DD",560.11,560.11,0,"IX","C",560.11,.03)

"^DD",560.11,560.11,0,"NM","VPR OBJECT")

"^DD",560.11,560.11,.01,0)
UID^RF^^0;1^K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",560.11,560.11,.01,1,0)
^.1
"^DD",560.11,560.11,.01,1,1,0)
560.11^B
"^DD",560.11,560.11,.01,1,1,1)
S ^VPR(560.11,"B",$E(X,1,63),DA)=""
"^DD",560.11,560.11,.01,1,1,2)
K ^VPR(560.11,"B",$E(X,1,63),DA)
"^DD",560.11,560.11,.01,3)
Answer must be 3-63 characters in length.
"^DD",560.11,560.11,.01,21,0)
^^1^1^3121129^
"^DD",560.11,560.11,.01,21,1,0)
The fully specified Universal ID string for this object.
"^DD",560.11,560.11,.01,23,0)
^^1^1^3121129^
"^DD",560.11,560.11,.01,23,1,0)
urn:va:{collection}:{systemId}:{ien}
"^DD",560.11,560.11,.01,"DT")
3121129
"^DD",560.11,560.11,.03,0)
COLLECTION^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",560.11,560.11,.03,1,0)
^.1
"^DD",560.11,560.11,.03,1,1,0)
560.11^C
"^DD",560.11,560.11,.03,1,1,1)
S ^VPR(560.11,"C",$E(X,1,30),DA)=""
"^DD",560.11,560.11,.03,1,1,2)
K ^VPR(560.11,"C",$E(X,1,30),DA)
"^DD",560.11,560.11,.03,1,1,"DT")
3121129
"^DD",560.11,560.11,.03,3)
Answer must be 3-30 characters in length.
"^DD",560.11,560.11,.03,21,0)
^^1^1^3121129^
"^DD",560.11,560.11,.03,21,1,0)
The name of the type or kind of data this object belongs to.
"^DD",560.11,560.11,.03,"DT")
3121129
"^DD",560.11,560.11,1,0)
DATA^560.111^^1;0
"^DD",560.11,560.111,0)
DATA SUB-FIELD^^.01^1
"^DD",560.11,560.111,0,"DT")
3121129
"^DD",560.11,560.111,0,"NM","DATA")

"^DD",560.11,560.111,0,"UP")
560.11
"^DD",560.11,560.111,.01,0)
DATA^Wx^^0;1^Q
"^DD",560.11,560.111,.01,21,0)
^^1^1^3121129^
"^DD",560.11,560.111,.01,21,1,0)
JSON data object
"^DD",560.11,560.111,.01,"DT")
3121129
"^DD",561,561,0)
FIELD^^.03^4
"^DD",561,561,0,"DDA")
N
"^DD",561,561,0,"DT")
3110729
"^DD",561,561,0,"IX","B",561,.01)

"^DD",561,561,0,"IX","C",561,.03)

"^DD",561,561,0,"NM","VPR PANEL")

"^DD",561,561,0,"PT",561.21,.02)

"^DD",561,561,0,"VRPK")
VPR
"^DD",561,561,.01,0)
NAME^R*P810.4'^PXRM(810.4,^0;1^S DIC("S")="I $P(^(0),U,3)=3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",561,561,.01,1,0)
^.1
"^DD",561,561,.01,1,1,0)
561^B
"^DD",561,561,.01,1,1,1)
S ^VPRPANEL("B",$E(X,1,30),DA)=""
"^DD",561,561,.01,1,1,2)
K ^VPRPANEL("B",$E(X,1,30),DA)
"^DD",561,561,.01,3)

"^DD",561,561,.01,12)
Only select RULE SET types
"^DD",561,561,.01,12.1)
S DIC("S")="I $P(^(0),U,3)=3"
"^DD",561,561,.01,"DT")
3110629
"^DD",561,561,.02,0)
DISPLAY NAME^RF^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",561,561,.02,3)
Answer must be 3-50 characters in length.
"^DD",561,561,.02,"DT")
3110630
"^DD",561,561,.03,0)
PATIENT LIST NAME^F^^0;3^K:$L(X)>40!($L(X)<3) X
"^DD",561,561,.03,1,0)
^.1
"^DD",561,561,.03,1,1,0)
561^C
"^DD",561,561,.03,1,1,1)
S ^VPRPANEL("C",$E(X,1,30),DA)=""
"^DD",561,561,.03,1,1,2)
K ^VPRPANEL("C",$E(X,1,30),DA)
"^DD",561,561,.03,1,1,"DT")
3111006
"^DD",561,561,.03,3)
Answer must be 3-40 characters in length.
"^DD",561,561,.03,"DT")
3111006
"^DD",561,561,5,0)
ORDER DIALOGS^561.05P^^ORDER DIALOGS;0
"^DD",561,561.05,0)
ORDER DIALOGS SUB-FIELD^^.01^1
"^DD",561,561.05,0,"DT")
3110629
"^DD",561,561.05,0,"IX","B",561.05,.01)

"^DD",561,561.05,0,"NM","ORDER DIALOGS")

"^DD",561,561.05,0,"UP")
561
"^DD",561,561.05,.01,0)
ORDER DIALOGS^MP101.41'^ORD(101.41,^0;1^Q
"^DD",561,561.05,.01,1,0)
^.1
"^DD",561,561.05,.01,1,1,0)
561.05^B
"^DD",561,561.05,.01,1,1,1)
S ^VPRPANEL(DA(1),"ORDER DIALOGS","B",$E(X,1,30),DA)=""
"^DD",561,561.05,.01,1,1,2)
K ^VPRPANEL(DA(1),"ORDER DIALOGS","B",$E(X,1,30),DA)
"^DD",561,561.05,.01,"DT")
3110629
"^DD",561.2,561.2,0)
FIELD^^.06^9
"^DD",561.2,561.2,0,"DT")
3120119
"^DD",561.2,561.2,0,"IX","AC",561.2,.04)

"^DD",561.2,561.2,0,"IX","ATS",561.2,99)

"^DD",561.2,561.2,0,"IX","B",561.2,.01)

"^DD",561.2,561.2,0,"NM","VPROSTER")

"^DD",561.2,561.2,0,"PT",560.04,.01)

"^DD",561.2,561.2,0,"PT",561.21,.02)

"^DD",561.2,561.2,0,"VRPK")
VPR
"^DD",561.2,561.2,.01,0)
NAME^RF^^0;1^K:$L(X)>45!($L(X)<3)!'(X'?1P.E) X
"^DD",561.2,561.2,.01,1,0)
^.1
"^DD",561.2,561.2,.01,1,1,0)
561.2^B
"^DD",561.2,561.2,.01,1,1,1)
S ^VPROSTER("B",$E(X,1,30),DA)=""
"^DD",561.2,561.2,.01,1,1,2)
K ^VPROSTER("B",$E(X,1,30),DA)
"^DD",561.2,561.2,.01,3)
Answer must be 3-45 characters in length.
"^DD",561.2,561.2,.01,"DT")
3111123
"^DD",561.2,561.2,.02,0)
DISPLAY NAME^F^^0;2^K:$L(X)>45!($L(X)<3) X
"^DD",561.2,561.2,.02,3)
Answer must be 3-45 characters in length.
"^DD",561.2,561.2,.02,"DT")
3110830
"^DD",561.2,561.2,.03,0)
DISABLE^S^1:YES;^0;3^Q
"^DD",561.2,561.2,.03,3)
ENTER A 1 OR YES TO DISABLE THIS ROSTER.
"^DD",561.2,561.2,.03,"DT")
3110830
"^DD",561.2,561.2,.04,0)
OWNER^P200'^VA(200,^0;4^Q
"^DD",561.2,561.2,.04,1,0)
^.1
"^DD",561.2,561.2,.04,1,1,0)
561.2^AC
"^DD",561.2,561.2,.04,1,1,1)
S ^VPROSTER("AC",$E(X,1,30),DA)=""
"^DD",561.2,561.2,.04,1,1,2)
K ^VPROSTER("AC",$E(X,1,30),DA)
"^DD",561.2,561.2,.04,1,1,"%D",0)
^^1^1^3120105^
"^DD",561.2,561.2,.04,1,1,"%D",1,0)
Index all rosters by owner.
"^DD",561.2,561.2,.04,1,1,"DT")
3120105
"^DD",561.2,561.2,.04,3)
ENTER THE OWNER OF THIS ROSTER
"^DD",561.2,561.2,.04,"DT")
3120105
"^DD",561.2,561.2,.05,0)
TYPE^RS^PU:PUBLIC;PR:PRIVATE;^0;5^Q
"^DD",561.2,561.2,.05,"DT")
3111115
"^DD",561.2,561.2,.06,0)
PATIENT LIST NAME^F^^0;6^K:$L(X)>40!($L(X)<3) X
"^DD",561.2,561.2,.06,3)
Answer must be 3-40 characters in length.
"^DD",561.2,561.2,.06,"DT")
3120120
"^DD",561.2,561.2,1,0)
SOURCES^561.21^^1;0
"^DD",561.2,561.2,2,0)
SPECIAL HANDLING^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",561.2,561.2,2,3)
This is Standard MUMPS code.
"^DD",561.2,561.2,2,9)
@
"^DD",561.2,561.2,2,"DT")
3120103
"^DD",561.2,561.2,99,0)
TIMESTAMP^D^^2;1^S %DT="ESTXR" D ^%DT S X=Y K:3110830.0839>X X
"^DD",561.2,561.2,99,1,0)
^.1
"^DD",561.2,561.2,99,1,1,0)
561.2^ATS
"^DD",561.2,561.2,99,1,1,1)
S ^VPROSTER("ATS",$E(X,1,30),DA)=""
"^DD",561.2,561.2,99,1,1,2)
K ^VPROSTER("ATS",$E(X,1,30),DA)
"^DD",561.2,561.2,99,1,1,"DT")
3110831
"^DD",561.2,561.2,99,3)
Type a date not earlier than AUG 30, 2011@08:39.
"^DD",561.2,561.2,99,"DT")
3110831
"^DD",561.2,561.21,0)
SOURCES SUB-FIELD^^.05^5
"^DD",561.2,561.21,0,"DT")
3120119
"^DD",561.2,561.21,0,"IX","AS",561.21,.01)

"^DD",561.2,561.21,0,"IX","B",561.21,.01)

"^DD",561.2,561.21,0,"NM","SOURCES")

"^DD",561.2,561.21,0,"UP")
561.2
"^DD",561.2,561.21,.01,0)
SEQUENCE^MNJ8,0^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1.N) X
"^DD",561.2,561.21,.01,1,0)
^.1
"^DD",561.2,561.21,.01,1,1,0)
561.21^B
"^DD",561.2,561.21,.01,1,1,1)
S ^VPROSTER(DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",561.2,561.21,.01,1,1,2)
K ^VPROSTER(DA(1),1,"B",$E(X,1,30),DA)
"^DD",561.2,561.21,.01,1,2,0)
561.21^AS
"^DD",561.2,561.21,.01,1,2,1)
S ^VPROSTER(DA(1),1,"AS",$E(X,1,30),DA)=""
"^DD",561.2,561.21,.01,1,2,2)
K ^VPROSTER(DA(1),1,"AS",$E(X,1,30),DA)
"^DD",561.2,561.21,.01,1,2,"DT")
3110901
"^DD",561.2,561.21,.01,3)
Type a number between 1 and 99999999, 0 decimal digits.
"^DD",561.2,561.21,.01,"DT")
3110901
"^DD",561.2,561.21,.02,0)
SOURCE^RV^^0;2^Q
"^DD",561.2,561.21,.02,3)
ENTER FILE WHICH WILL BE THE SOURCE FOR THIS ROSTER
"^DD",561.2,561.21,.02,"DT")
3110830
"^DD",561.2,561.21,.02,"V",0)
^.12P^12^10
"^DD",561.2,561.21,.02,"V",1,0)
2^PATIENT^1^PAT^n^n
"^DD",561.2,561.21,.02,"V",1,1)

"^DD",561.2,561.21,.02,"V",1,2)

"^DD",561.2,561.21,.02,"V",2,0)
42^WARD LOCATION^2^WARD^n^n
"^DD",561.2,561.21,.02,"V",2,1)

"^DD",561.2,561.21,.02,"V",2,2)

"^DD",561.2,561.21,.02,"V",3,0)
44^CLINIC^3^CL^n^n
"^DD",561.2,561.21,.02,"V",3,1)

"^DD",561.2,561.21,.02,"V",3,2)

"^DD",561.2,561.21,.02,"V",5,0)
200^PROVIDER^5^PROV^n^n
"^DD",561.2,561.21,.02,"V",5,1)

"^DD",561.2,561.21,.02,"V",5,2)

"^DD",561.2,561.21,.02,"V",6,0)
100.21^CPRS^6^CPRS^n^n
"^DD",561.2,561.21,.02,"V",6,1)

"^DD",561.2,561.21,.02,"V",6,2)

"^DD",561.2,561.21,.02,"V",7,0)
404.51^PCMM TEAM^7^PCMM^n^n
"^DD",561.2,561.21,.02,"V",7,1)

"^DD",561.2,561.21,.02,"V",7,2)

"^DD",561.2,561.21,.02,"V",8,0)
810.4^REMINDER'S LIST RULE FILE^22^PXRM^y^n
"^DD",561.2,561.21,.02,"V",8,1)
S DIC("S")="I $P(^(0),U,3)=3"
"^DD",561.2,561.21,.02,"V",8,2)
Only select Rule Set types
"^DD",561.2,561.21,.02,"V",9,0)
561.2^VPR ROSTER FILE^9^ROST^^n
"^DD",561.2,561.21,.02,"V",11,0)
45.7^SPECIALTY^70^SPEC^n^n
"^DD",561.2,561.21,.02,"V",12,0)
561^Select VPR Panel List Rule^80^VPRPAN^n^n
"^DD",561.2,561.21,.03,0)
OPERATION^S^0:UNION;1:INTERSECTION;2:DIFFERENCE;^0;3^Q
"^DD",561.2,561.21,.03,"DT")
3110830
"^DD",561.2,561.21,.04,0)
FILTER^S^T:TODAY;^0;4^Q
"^DD",561.2,561.21,.04,3)

"^DD",561.2,561.21,.04,"DT")
3110901
"^DD",561.2,561.21,.05,0)
REFRESH FREQUENCY^S^D:DAILY;H:HOURLY;^0;5^Q
"^DD",561.2,561.21,.05,3)

"^DD",561.2,561.21,.05,"DT")
3120119
"^DIC",560,560,0)
VPR SUBSCRIPTION^560
"^DIC",560,560,0,"GL")
^VPR(560,
"^DIC",560,"B","VPR SUBSCRIPTION",560)

"^DIC",560.1,560.1,0)
VPR PATIENT OBJECT^560.1
"^DIC",560.1,560.1,0,"GL")
^VPR(560.1,
"^DIC",560.1,"B","VPR PATIENT OBJECT",560.1)

"^DIC",560.11,560.11,0)
VPR OBJECT^560.11
"^DIC",560.11,560.11,0,"GL")
^VPR(560.11,
"^DIC",560.11,"B","VPR OBJECT",560.11)

"^DIC",561,561,0)
VPR PANEL^561
"^DIC",561,561,0,"GL")
^VPRPANEL(
"^DIC",561,561,"%",0)
^1.005^1^1
"^DIC",561,561,"%",1,0)
VPR
"^DIC",561,561,"%","B","VPR",1)

"^DIC",561,561,"%D",0)
^1.001^4^4^3110701^^^
"^DIC",561,561,"%D",1,0)
Contains the Rule Sets that contain the cohorts for creating patient panels.
"^DIC",561,561,"%D",2,0)
For example, panel which includes Diabetic patients will be created
"^DIC",561,561,"%D",3,0)
nightly to update the list of patients.  All panels in this file will be
"^DIC",561,561,"%D",4,0)
updated nightly.
"^DIC",561,"B","VPR PANEL",561)

"^DIC",561.2,561.2,0)
VPROSTER^561.2
"^DIC",561.2,561.2,0,"GL")
^VPROSTER(
"^DIC",561.2,"B","VPROSTER",561.2)

**END**
**END**
