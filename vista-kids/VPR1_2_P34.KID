KIDS Distribution saved on Dec 19, 2012@15:29:47
VPR*1*2 for P34 -- 12/19/2012
**KIDS**:VPR*1.0*2^

**INSTALL NAME**
VPR*1.0*2
"BLD",8071,0)
VPR*1.0*2^VIRTUAL PATIENT RECORD^0^3121219^y
"BLD",8071,1,0)
^9.61A^2^2^3120924^^^^
"BLD",8071,1,1,0)
The Virtual Patient Record (VPR) data extract RPC, which returns data
"BLD",8071,1,2,0)
from the local VistA system, is updated in this patch.
"BLD",8071,4,0)
^9.64PA^560.22^3
"BLD",8071,4,560.2,0)
560.2
"BLD",8071,4,560.2,222)
y^y^f^^y^^y^o^n
"BLD",8071,4,560.2,224)
I Y
"BLD",8071,4,560.21,0)
560.21
"BLD",8071,4,560.21,222)
y^y^f^^n^^y^o^n
"BLD",8071,4,560.21,224)
I Y
"BLD",8071,4,560.22,0)
560.22
"BLD",8071,4,560.22,222)
y^y^f^^n^^y^o^n
"BLD",8071,4,560.22,224)
I Y
"BLD",8071,4,"B",560.2,560.2)

"BLD",8071,4,"B",560.21,560.21)

"BLD",8071,4,"B",560.22,560.22)

"BLD",8071,6.3)
102
"BLD",8071,"ABPKG")
n
"BLD",8071,"INI")

"BLD",8071,"INIT")

"BLD",8071,"KRN",0)
^9.67PA^779.2^20
"BLD",8071,"KRN",.4,0)
.4
"BLD",8071,"KRN",.401,0)
.401
"BLD",8071,"KRN",.402,0)
.402
"BLD",8071,"KRN",.403,0)
.403
"BLD",8071,"KRN",.5,0)
.5
"BLD",8071,"KRN",.84,0)
.84
"BLD",8071,"KRN",3.6,0)
3.6
"BLD",8071,"KRN",3.8,0)
3.8
"BLD",8071,"KRN",9.2,0)
9.2
"BLD",8071,"KRN",9.8,0)
9.8
"BLD",8071,"KRN",9.8,"NM",0)
^9.68A^20^20
"BLD",8071,"KRN",9.8,"NM",1,0)
VPRDERRH^^0^B1916578
"BLD",8071,"KRN",9.8,"NM",2,0)
VPRDJ^^0^B32552740
"BLD",8071,"KRN",9.8,"NM",3,0)
VPRDJ0^^0^B111930631
"BLD",8071,"KRN",9.8,"NM",4,0)
VPRDJ01^^0^B49607688
"BLD",8071,"KRN",9.8,"NM",5,0)
VPRDJ02^^0^B33844039
"BLD",8071,"KRN",9.8,"NM",6,0)
VPRDJ03^^0^B70698747
"BLD",8071,"KRN",9.8,"NM",7,0)
VPRDJ04^^0^B87122800
"BLD",8071,"KRN",9.8,"NM",8,0)
VPRDJ05^^0^B75546671
"BLD",8071,"KRN",9.8,"NM",9,0)
VPRDJ06^^0^B44643473
"BLD",8071,"KRN",9.8,"NM",10,0)
VPRDJ07^^0^B18242997
"BLD",8071,"KRN",9.8,"NM",11,0)
VPRDJ08^^0^B107060315
"BLD",8071,"KRN",9.8,"NM",12,0)
VPRDJ09^^0^B32658400
"BLD",8071,"KRN",9.8,"NM",13,0)
VPRDTIUX^^0^B21288595
"BLD",8071,"KRN",9.8,"NM",14,0)
VPRJSON^^0^B11235996
"BLD",8071,"KRN",9.8,"NM",15,0)
VPRJSOND^^0^B59103320
"BLD",8071,"KRN",9.8,"NM",16,0)
VPRJSONE^^0^B16192054
"BLD",8071,"KRN",9.8,"NM",17,0)
VPRUTILS^^0^B6380658
"BLD",8071,"KRN",9.8,"NM",18,0)
VPRDJ05V^^0^B20733500
"BLD",8071,"KRN",9.8,"NM",19,0)
VPRLIST^^0^B60561312
"BLD",8071,"KRN",9.8,"NM",20,0)
VPRDJ04E^^0^B10513040
"BLD",8071,"KRN",9.8,"NM","B","VPRDERRH",1)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ",2)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ0",3)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ01",4)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ02",5)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ03",6)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ04",7)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ04E",20)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ05",8)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ05V",18)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ06",9)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ07",10)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ08",11)

"BLD",8071,"KRN",9.8,"NM","B","VPRDJ09",12)

"BLD",8071,"KRN",9.8,"NM","B","VPRDTIUX",13)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSON",14)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSOND",15)

"BLD",8071,"KRN",9.8,"NM","B","VPRJSONE",16)

"BLD",8071,"KRN",9.8,"NM","B","VPRLIST",19)

"BLD",8071,"KRN",9.8,"NM","B","VPRUTILS",17)

"BLD",8071,"KRN",19,0)
19
"BLD",8071,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",8071,"KRN",19,"NM",1,0)
VPR LIST BACKGROUND BUILDER^^0
"BLD",8071,"KRN",19,"NM",2,0)
VPR LIST DISPLAY^^0
"BLD",8071,"KRN",19,"NM",3,0)
VPR LIST EDITOR^^0
"BLD",8071,"KRN",19,"NM",4,0)
VPR LIST MANAGER^^0
"BLD",8071,"KRN",19,"NM",5,0)
VPR LIST REBUILD ONE^^0
"BLD",8071,"KRN",19,"NM","B","VPR LIST BACKGROUND BUILDER",1)

"BLD",8071,"KRN",19,"NM","B","VPR LIST DISPLAY",2)

"BLD",8071,"KRN",19,"NM","B","VPR LIST EDITOR",3)

"BLD",8071,"KRN",19,"NM","B","VPR LIST MANAGER",4)

"BLD",8071,"KRN",19,"NM","B","VPR LIST REBUILD ONE",5)

"BLD",8071,"KRN",19.1,0)
19.1
"BLD",8071,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",8071,"KRN",101,0)
101
"BLD",8071,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8071,"KRN",409.61,0)
409.61
"BLD",8071,"KRN",771,0)
771
"BLD",8071,"KRN",779.2,0)
779.2
"BLD",8071,"KRN",870,0)
870
"BLD",8071,"KRN",8989.51,0)
8989.51
"BLD",8071,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",8071,"KRN",8989.52,0)
8989.52
"BLD",8071,"KRN",8994,0)
8994
"BLD",8071,"KRN",8994,"NM",0)
^9.68A^16^1
"BLD",8071,"KRN",8994,"NM",16,0)
VPR GET PATIENT DATA JSON^^0
"BLD",8071,"KRN",8994,"NM","B","VPR GET PATIENT DATA JSON",16)

"BLD",8071,"KRN","B",.4,.4)

"BLD",8071,"KRN","B",.401,.401)

"BLD",8071,"KRN","B",.402,.402)

"BLD",8071,"KRN","B",.403,.403)

"BLD",8071,"KRN","B",.5,.5)

"BLD",8071,"KRN","B",.84,.84)

"BLD",8071,"KRN","B",3.6,3.6)

"BLD",8071,"KRN","B",3.8,3.8)

"BLD",8071,"KRN","B",9.2,9.2)

"BLD",8071,"KRN","B",9.8,9.8)

"BLD",8071,"KRN","B",19,19)

"BLD",8071,"KRN","B",19.1,19.1)

"BLD",8071,"KRN","B",101,101)

"BLD",8071,"KRN","B",409.61,409.61)

"BLD",8071,"KRN","B",771,771)

"BLD",8071,"KRN","B",779.2,779.2)

"BLD",8071,"KRN","B",870,870)

"BLD",8071,"KRN","B",8989.51,8989.51)

"BLD",8071,"KRN","B",8989.52,8989.52)

"BLD",8071,"KRN","B",8994,8994)

"BLD",8071,"PRE")
VPRPRODC
"BLD",8071,"QUES",0)
^9.62^^
"BLD",8071,"REQB",0)
^9.611^4^1
"BLD",8071,"REQB",4,0)
VPR*1.0*1^2
"BLD",8071,"REQB","B","VPR*1.0*1",4)

"DATA",560.2,1,0)
GENDER^0^^1^2
"DATA",560.2,1,2,0)
^560.202^1^1
"DATA",560.2,1,2,1,0)
displayName^3
"DATA",560.2,1,9,0)
^^3^3^3121119^
"DATA",560.2,1,9,1,0)
F^FEMALE^Female
"DATA",560.2,1,9,2,0)
M^MALE^Male
"DATA",560.2,1,9,3,0)
U^UNSPECIFIED^Unspecified
"DATA",560.2,2,0)
PROBLEM LIST ACUITY^0^^2^1
"DATA",560.2,2,2,0)
^560.202^1^1
"DATA",560.2,2,2,1,0)
displayName^3
"DATA",560.2,2,9,0)
^^2^2^3121116^
"DATA",560.2,2,9,1,0)
A^a^acute
"DATA",560.2,2,9,2,0)
C^c^chronic
"DATA",560.2,3,0)
PROBLEM LIST STATUS^0^^2^2
"DATA",560.2,3,2,0)
^560.202^1^1
"DATA",560.2,3,2,1,0)
displayName^3
"DATA",560.2,3,9,0)
^^2^2^3121116^
"DATA",560.2,3,9,1,0)
A^5561003^ACTIVE
"DATA",560.2,3,9,2,0)
I^73425007^INACTIVE
"DATA",560.2,4,0)
CLIO INTERPRETATION^0^^6^3
"DATA",560.2,4,2,0)
^560.202^1^1
"DATA",560.2,4,2,1,0)
displayName^3
"DATA",560.2,4,9,0)
^^5^5^3121119^
"DATA",560.2,4,9,1,0)
Normal^N^Normal
"DATA",560.2,4,9,2,0)
Out of Bounds Low^<^Low off scale
"DATA",560.2,4,9,3,0)
Out of Bounds High^>^High off scale
"DATA",560.2,4,9,4,0)
Low^L^Low
"DATA",560.2,4,9,5,0)
High^H^High
"DATA",560.2,5,0)
CLIO RESULT STATUS^0^^6^4
"DATA",560.2,5,2,0)
^560.202^1^1
"DATA",560.2,5,2,1,0)
displayName^3
"DATA",560.2,5,9,0)
^^1^1^3121119^
"DATA",560.2,5,9,1,0)
verified^complete^complete
"DATA",560.2,6,0)
LAB INTERPRETATION CODE^0^^7^5
"DATA",560.2,6,2,0)
^560.202^1^1
"DATA",560.2,6,2,1,0)
displayName^3
"DATA",560.2,6,9,0)
^^4^4^3121116^
"DATA",560.2,6,9,1,0)
L^L^Low
"DATA",560.2,6,9,2,0)
L*^LL^Low alert
"DATA",560.2,6,9,3,0)
H^H^High
"DATA",560.2,6,9,4,0)
H*^HH^High alert
"DATA",560.2,7,0)
APPOINTMENTS PATIENT CLASS^0^^3^6
"DATA",560.2,7,2,0)
^560.202^1^1
"DATA",560.2,7,2,1,0)
displayName^3
"DATA",560.2,7,9,0)
^^2^2^3121116^
"DATA",560.2,7,9,1,0)
I^IMP^Inpatient
"DATA",560.2,7,9,2,0)
O^AMB^Ambulatory
"DATA",560.2,8,0)
VISITS PATIENT CLASS CODE^0^^4^6
"DATA",560.2,8,2,0)
^560.202^1^1
"DATA",560.2,8,2,1,0)
displayName^3
"DATA",560.2,8,9,0)
^^3^3^3121119^
"DATA",560.2,8,9,1,0)
1^IMP^Inpatient
"DATA",560.2,8,9,2,0)
0^AMB^Ambulatory
"DATA",560.2,8,9,3,0)
EDIS^EMER^Emergency
"DATA",560.2,9,0)
VISITS CATEGORY CODE^0^^4^7
"DATA",560.2,9,2,0)
^560.202^1^1
"DATA",560.2,9,2,1,0)
displayName^3
"DATA",560.2,9,9,0)
^^12^12^3121119^
"DATA",560.2,9,9,1,0)
H^AD^Admission
"DATA",560.2,9,9,2,0)
C^CR^Chart Review
"DATA",560.2,9,9,3,0)
T^TC^Phone Contact
"DATA",560.2,9,9,4,0)
N^U^Unknown
"DATA",560.2,9,9,5,0)
R^NH^Nursing Home
"DATA",560.2,9,9,6,0)
D^O^Other
"DATA",560.2,9,9,7,0)
X^O^Other
"DATA",560.2,9,9,8,0)
A^OV^Outpatient Visit
"DATA",560.2,9,9,9,0)
I^OV^Outpatient Visit
"DATA",560.2,9,9,10,0)
O^OV^Outpatient Visit
"DATA",560.2,9,9,11,0)
S^OV^Outpatient Visit
"DATA",560.2,9,9,12,0)
E^OV^Outpatient Visit
"DATA",560.2,10,0)
MED STATUS^0^^5^8
"DATA",560.2,10,2,0)
^560.202^1^1
"DATA",560.2,10,2,1,0)
displayName^3
"DATA",560.2,10,9,0)
^^16^16^3121116^
"DATA",560.2,10,9,1,0)
1^73425007^not active
"DATA",560.2,10,9,2,0)
2^392521001^historical
"DATA",560.2,10,9,3,0)
3^421139008^hold
"DATA",560.2,10,9,4,0)
4^55561003^active
"DATA",560.2,10,9,5,0)
5^73425007^not active
"DATA",560.2,10,9,6,0)
6^55561003^active
"DATA",560.2,10,9,7,0)
7^392521001^historical
"DATA",560.2,10,9,8,0)
8^55561003^active
"DATA",560.2,10,9,9,0)
9^55561003^active
"DATA",560.2,10,9,10,0)
10^73425007^not active
"DATA",560.2,10,9,11,0)
11^73425007^not active
"DATA",560.2,10,9,12,0)
12^73425007^not active
"DATA",560.2,10,9,13,0)
13^73425007^not active
"DATA",560.2,10,9,14,0)
14^73425007^not active
"DATA",560.2,10,9,15,0)
15^392521001^historical
"DATA",560.2,10,9,16,0)
99^73425007^not active
"DATA",560.2,11,0)
MED TYPE^0^^5^9
"DATA",560.2,11,2,0)
^560.202^1^1
"DATA",560.2,11,2,1,0)
displayName^3
"DATA",560.2,11,9,0)
^^3^3^3121116^
"DATA",560.2,11,9,1,0)
N^329505003^OTC
"DATA",560.2,11,9,2,0)
O^73639000^Prescription
"DATA",560.2,11,9,3,0)
I^105903003^
"DATA",560.2,12,0)
MED INGREDIENT ROLE^0^^5^10
"DATA",560.2,12,2,0)
^560.202^1^1
"DATA",560.2,12,2,1,0)
displayName^3
"DATA",560.2,12,9,0)
^^2^2^3121119^
"DATA",560.2,12,9,1,0)
A^418804003^additive
"DATA",560.2,12,9,2,0)
B^418297009^solution
"DATA",560.2,13,0)
INPATIENT LIST^0^^1^4^^^30^3121119.1141
"DATA",560.2,13,.11)
D INPT^VPRLIST
"DATA",560.2,13,2,0)
^560.202^5^5
"DATA",560.2,13,2,1,0)
gender^3
"DATA",560.2,13,2,2,0)
dateOfBirth^4
"DATA",560.2,13,2,3,0)
ssn^5
"DATA",560.2,13,2,4,0)
wardLocation^6
"DATA",560.2,13,2,5,0)
roomBed^7
"DATA",560.2,13,3,0)
^^3^3^3121119^
"DATA",560.2,13,3,1,0)
This static list contains all inpatients on the current system. It can 
"DATA",560.2,13,3,2,0)
and should be triggered off the DGPM PATIENT MOVEMENT protocol to be 
"DATA",560.2,13,3,3,0)
rebuilt everytime there is a patient movement.
"DATA",560.2,13,9,0)
^^274^274^3121119
"DATA",560.2,13,9,1,0)
73^ZZZRETFONINETYFIVE,PATIENT^^04/07/1935^666921111^3 NORTH GU^F-2
"DATA",560.2,13,9,2,0)
254^ZZZRETFOURFORTYTHREE,PATIENT^MALE^04/07/1935^666032666^3 NORTH GU^2-1
"DATA",560.2,13,9,3,0)
368^ZZZRETFIVENINETYSEVEN,PATIENT^MALE^04/07/1935^666926666^3 NORTH GU^1-1
"DATA",560.2,13,9,4,0)
701^ZZZRETFOURTWENTY,PATIENT^MALE^04/07/1935^666040321^3 NORTH GU^3-2
"DATA",560.2,13,9,5,0)
714^ZZZRETTHREENINETYONE,PATIENT^MALE^04/07/1935^666990121^3 NORTH GU^2-2
"DATA",560.2,13,9,6,0)
66^ZZZRETFOURSEVENTYTWO,PATIENT^MALE^04/07/1935^666229999^3E NORTH^3E-100-5
"DATA",560.2,13,9,7,0)
126^ZZZRETIREDSIXTEEN,PATIENT^MALE^04/07/1935^666545454^3E NORTH^3E-100-2
"DATA",560.2,13,9,8,0)
144^ZZZRETIREDONEEIGHT,PATIENT^MALE^04/07/1935^666535333^3E NORTH^3E-100-3
"DATA",560.2,13,9,9,0)
202^ZZZRETIREDSIXTYTWO,PATIENT^MALE^04/07/1935^666030379^3E NORTH^
"DATA",560.2,13,9,10,0)
253^AVIVAPATIENT,TWENTYSEVEN^MALE^04/07/1935^666000007^3E NORTH^
"DATA",560.2,13,9,11,0)
296^ZZZRETIREDFIFTY,PATIENT^MALE^04/07/1935^666032319^3E NORTH^3E-100-6
"DATA",560.2,13,9,12,0)
171^ZZZRETIREDTHIRTYEIGHT,PATIENT^MALE^04/07/1935^666451234^3ES^
"DATA",560.2,13,9,13,0)
309^ZZZRETONEFORTY,PATIENT^^04/07/1935^666050654^3ES^
"DATA",560.2,13,9,14,0)
405^ZZZRETFIVESIX,PATIENT^MALE^04/07/1935^666612222^3ES^
"DATA",560.2,13,9,15,0)
730^ZZZRETIREDFOURTEEN,PATIENT^MALE^04/07/1935^666874747^3ES^
"DATA",560.2,13,9,16,0)
97^ZZZRETIREDONEFOUR,PATIENT^MALE^04/07/1935^666747744^5 WEST PSYCH^502-1
"DATA",560.2,13,9,17,0)
255^ZZZRETSIXFIFTY,PATIENT^MALE^04/07/1935^666421708^5 WEST PSYCH^503-1
"DATA",560.2,13,9,18,0)
352^ZZZRETFOURFIVE,PATIENT^MALE^04/07/1935^666338888^5 WEST PSYCH^503-2
"DATA",560.2,13,9,19,0)
712^ZZZRETTHREENINETYTHREE,PATIENT^MALE^04/07/1935^666547632^5 WEST PSYCH^
"DATA",560.2,13,9,20,0)
727^ZZZRETSIXFORTYONE,PATIENT^MALE^04/07/1935^666222302^5 WEST PSYCH^
"DATA",560.2,13,9,21,0)
8^AVIVAPATIENT,THIRTY^MALE^04/07/1935^666000010^7A GEN MED^722-C
"DATA",560.2,13,9,22,0)
25^AVIVAPATIENT,TWENTYTHREE^MALE^04/07/1935^666000003^7A GEN MED^737-B
"DATA",560.2,13,9,23,0)
205^AVIVAPATIENT,TWENTYTWO^MALE^04/07/1935^666000002^7A GEN MED^722-D
"DATA",560.2,13,9,24,0)
100708^ONE,INPATIENT^MALE^03/09/1945^666000801^7A GEN MED^722-A
"DATA",560.2,13,9,25,0)
100710^TWO,INPATIENT^MALE^03/09/1945^666000802^7A GEN MED^722-B
"DATA",560.2,13,9,26,0)
100711^THREE,INPATIENT^MALE^03/09/1945^666000803^7A GEN MED^724-A
"DATA",560.2,13,9,27,0)
100712^FOUR,INPATIENT^MALE^03/09/1945^666000804^7A GEN MED^724-B
"DATA",560.2,13,9,28,0)
100713^FIVE,INPATIENT^MALE^03/09/1945^666000805^7A GEN MED^724-C
"DATA",560.2,13,9,29,0)
100714^SIX,INPATIENT^MALE^03/09/1945^666000806^7A GEN MED^724-D
"DATA",560.2,13,9,30,0)
100715^SEVEN,INPATIENT^MALE^03/09/1945^666000807^7A GEN MED^726-A
"DATA",560.2,13,9,31,0)
100716^EIGHT,INPATIENT^MALE^03/09/1945^666000808^7A GEN MED^726-B
"DATA",560.2,13,9,32,0)
100717^NINE,INPATIENT^MALE^03/09/1945^666000809^7A GEN MED^726-C
"DATA",560.2,13,9,33,0)
100718^TEN,INPATIENT^MALE^03/09/1945^666000810^7A GEN MED^726-D
"DATA",560.2,13,9,34,0)
100719^ELEVEN,INPATIENT^MALE^03/09/1945^666000811^7A GEN MED^727-A
"DATA",560.2,13,9,35,0)
100720^TWELVE,INPATIENT^MALE^03/09/1945^666000812^7A GEN MED^727-B
"DATA",560.2,13,9,36,0)
100721^THIRTEEN,INPATIENT^MALE^03/09/1945^666000813^7A GEN MED^728-A
"DATA",560.2,13,9,37,0)
100722^FOURTEEN,INPATIENT^MALE^03/09/1945^666000814^7A GEN MED^728-B
"DATA",560.2,13,9,38,0)
100723^FIFTEEN,INPATIENT^MALE^03/09/1945^666000815^7A GEN MED^729-A
"DATA",560.2,13,9,39,0)
100724^SIXTEEN,INPATIENT^MALE^03/09/1945^666000816^7A GEN MED^729-B
"DATA",560.2,13,9,40,0)
100725^SEVENTEEN,INPATIENT^MALE^03/09/1945^666000817^7A GEN MED^730-A
"DATA",560.2,13,9,41,0)
100726^EIGHTEEN,INPATIENT^MALE^03/09/1945^666000818^7A GEN MED^730-B
"DATA",560.2,13,9,42,0)
100727^NINETEEN,INPATIENT^MALE^03/09/1945^666000819^7A GEN MED^731-A
"DATA",560.2,13,9,43,0)
100728^TWENTY,INPATIENT^MALE^03/09/1945^666000820^7A GEN MED^731-B
"DATA",560.2,13,9,44,0)
100729^TWENTYONE,INPATIENT^MALE^03/09/1945^666000821^7A GEN MED^732-B
"DATA",560.2,13,9,45,0)
100730^TWENTYTWO,INPATIENT^MALE^03/09/1945^666000822^7A GEN MED^733-A
"DATA",560.2,13,9,46,0)
100731^TWENTYTHREE,INPATIENT^MALE^03/09/1945^666000823^7A GEN MED^733-B
"DATA",560.2,13,9,47,0)
100732^TWENTYFOUR,INPATIENT^MALE^03/09/1945^666000824^7A GEN MED^734-A
"DATA",560.2,13,9,48,0)
100733^TWENTYFIVE,INPATIENT^MALE^03/09/1945^666000825^7A GEN MED^734-B
"DATA",560.2,13,9,49,0)
100847^AVIVAPATIENT,SIX^FEMALE^02/02/1957^666000926^7A GEN MED^735-A
"DATA",560.2,13,9,50,0)
229^AVIVAPATIENT,TWENTYFOUR^MALE^04/07/1935^666000004^7A SURG^
"DATA",560.2,13,9,51,0)
100734^TWENTYSIX,INPATIENT^MALE^03/09/1945^666000826^7A SURG^760-A
"DATA",560.2,13,9,52,0)
100735^TWENTYSEVEN,INPATIENT^MALE^03/09/1945^666000827^7A SURG^760-B
"DATA",560.2,13,9,53,0)
100736^TWENTYEIGHT,INPATIENT^MALE^03/09/1945^666000828^7A SURG^761-A
"DATA",560.2,13,9,54,0)
100737^TWENTYNINE,INPATIENT^MALE^03/09/1945^666000829^7A SURG^761-B
"DATA",560.2,13,9,55,0)
100738^THIRTY,INPATIENT^MALE^03/09/1945^666000830^7A SURG^762-A
"DATA",560.2,13,9,56,0)
100739^THIRTYONE,INPATIENT^MALE^03/09/1945^666000831^7A SURG^762-B
"DATA",560.2,13,9,57,0)
100740^THIRTYTWO,INPATIENT^MALE^03/09/1945^666000832^7A SURG^763-A
"DATA",560.2,13,9,58,0)
100741^THIRTYTHREE,INPATIENT^MALE^03/09/1945^666000833^7A SURG^763-B
"DATA",560.2,13,9,59,0)
100742^THIRTYFOUR,INPATIENT^MALE^03/09/1945^666000834^7A SURG^764-A
"DATA",560.2,13,9,60,0)
100743^THIRTYFIVE,INPATIENT^MALE^03/09/1945^666000835^7A SURG^764-B
"DATA",560.2,13,9,61,0)
100744^THIRTYSIX,INPATIENT^MALE^03/09/1945^666000836^7A SURG^765-A
"DATA",560.2,13,9,62,0)
100745^THIRTYSEVEN,INPATIENT^MALE^03/09/1945^666000837^7A SURG^765-B
"DATA",560.2,13,9,63,0)
100746^THIRTYEIGHT,INPATIENT^MALE^03/09/1945^666000838^7A SURG^766-A
"DATA",560.2,13,9,64,0)
100747^THIRTYNINE,INPATIENT^MALE^03/09/1945^666000839^7A SURG^766-B
"DATA",560.2,13,9,65,0)
100748^FORTY,INPATIENT^MALE^03/09/1945^666000840^7A SURG^767-A
"DATA",560.2,13,9,66,0)
100749^FORTYONE,INPATIENT^MALE^03/09/1945^666000841^7A SURG^767-B
"DATA",560.2,13,9,67,0)
100750^FORTYTWO,INPATIENT^MALE^03/09/1945^666000842^7A SURG^768-A
"DATA",560.2,13,9,68,0)
100751^FORTYTHREE,INPATIENT^MALE^03/09/1945^666000843^7A SURG^768-B
"DATA",560.2,13,9,69,0)
100752^FORTYFOUR,INPATIENT^MALE^03/09/1945^666000844^7A SURG^769-A
"DATA",560.2,13,9,70,0)
100753^FORTYFIVE,INPATIENT^MALE^03/09/1945^666000845^7A SURG^769-B
"DATA",560.2,13,9,71,0)
100754^FORTYSIX,INPATIENT^MALE^03/09/1945^666000846^7A SURG^770-A
"DATA",560.2,13,9,72,0)
100755^FORTYSEVEN,INPATIENT^MALE^03/09/1945^666000847^7A SURG^770-B
"DATA",560.2,13,9,73,0)
100756^FORTYEIGHT,INPATIENT^MALE^03/09/1945^666000848^7A SURG^771-A
"DATA",560.2,13,9,74,0)
100757^FORTYNINE,INPATIENT^MALE^03/09/1945^666000849^7A SURG^771-B
"DATA",560.2,13,9,75,0)
100758^FIFTY,INPATIENT^MALE^03/09/1945^666000850^7A SURG^772-A
"DATA",560.2,13,9,76,0)
110^ZZZRETFOUREIGHTYTWO,PATIENT^MALE^04/07/1935^666884884^7B^
"DATA",560.2,13,9,77,0)
148^ZZZRETFIVEEIGHTYFIVE,PATIENT^MALE^04/07/1935^666886886^7B^
"DATA",560.2,13,9,78,0)
211^ZZZRETTWOFIFTYTHREE,PATIENT^MALE^04/07/1935^666434444^7B^
"DATA",560.2,13,9,79,0)
739^ZZZRETIREDEIGHTYFOUR,PATIENT^MALE^04/07/1935^666999911^7B^032-A
"DATA",560.2,13,9,80,0)
742^ZZZRETIREDONESIX,PATIENT^MALE^04/07/1935^666899111^7B^
"DATA",560.2,13,9,81,0)
743^ZZZRETFOURONE,PATIENT^MALE^04/07/1935^666138383^7B^
"DATA",560.2,13,9,82,0)
100195^TWOHUNDREDFORTYNINE,PATIENT^MALE^04/07/1935^666000249^7B^
"DATA",560.2,13,9,83,0)
173^ZZZRETFIVEEIGHTYSIX,PATIENT^^04/07/1935^666341234^ALB-PRRTP^
"DATA",560.2,13,9,84,0)
199^ZZZRETSIXSEVENTYFOUR,PATIENT^^04/07/1935^666546789^ALB-PRRTP^
"DATA",560.2,13,9,85,0)
319^ZZZRETIREDFIFTYFIVE,PATIENT^MALE^04/07/1935^666042242^ALB-PRRTP^
"DATA",560.2,13,9,86,0)
127^ZZZRETFIVEFIFTYTWO,PATIENT^MALE^04/07/1935^666122354^ALCOHOL^
"DATA",560.2,13,9,87,0)
174^ZZZRETIREDFIVE,PATIENT^MALE^04/07/1935^666151111^ALCOHOL^
"DATA",560.2,13,9,88,0)
100015^BCMA,ONE-PATIENT^MALE^04/07/1935^666330001^BCMA^1-A
"DATA",560.2,13,9,89,0)
100016^BCMA,TWO-PATIENT^MALE^04/07/1935^666330002^BCMA^1-B
"DATA",560.2,13,9,90,0)
100017^BCMA,THREE-PATIENT^MALE^04/07/1935^666330003^BCMA^1-C
"DATA",560.2,13,9,91,0)
100018^BCMA,FOUR-PATIENT^MALE^04/07/1935^666330004^BCMA^1-D
"DATA",560.2,13,9,92,0)
100019^BCMA,FIVE-PATIENT^MALE^04/07/1935^666330005^BCMA^1-E
"DATA",560.2,13,9,93,0)
100020^BCMA,SIX-PATIENT^MALE^04/07/1935^666330006^BCMA^2-A
"DATA",560.2,13,9,94,0)
100021^BCMA,SEVEN-PATIENT^MALE^04/07/1935^666330007^BCMA^2-B
"DATA",560.2,13,9,95,0)
100023^BCMA,NINE-PATIENT^MALE^04/07/1935^666330009^BCMA^2-D
"DATA",560.2,13,9,96,0)
100024^BCMA,TEN-PATIENT^MALE^04/07/1935^666330010^BCMA^2-E
"DATA",560.2,13,9,97,0)
100025^BCMA,ELEVEN-PATIENT^MALE^12/04/1967^666330011^BCMA^3-A
"DATA",560.2,13,9,98,0)
100026^BCMA,TWELVE-PATIENT^MALE^04/07/1935^666330012^BCMA^3-B
"DATA",560.2,13,9,99,0)
100027^BCMA,THIRTEEN-PATIENT^MALE^04/07/1935^666330013^BCMA^3-C
"DATA",560.2,13,9,100,0)
100028^BCMA,FOURTEEN-PATIENT^MALE^04/07/1935^666330014^BCMA^3-D
"DATA",560.2,13,9,101,0)
100030^BCMA,FIFTEEN-PATIENT^MALE^04/07/1935^666330015^BCMA^3-E
"DATA",560.2,13,9,102,0)
100031^BCMA,SIXTEEN-PATIENT^MALE^04/07/1935^666330016^BCMA^4-A
"DATA",560.2,13,9,103,0)
100032^BCMA,SEVENTEEN-PATIENT^MALE^04/07/1935^666330017^BCMA^14-D
"DATA",560.2,13,9,104,0)
100033^BCMA,EIGHTEEN-PATIENT^FEMALE^05/26/1980^666330018^BCMA^4-B
"DATA",560.2,13,9,105,0)
100034^BCMA,NINETEEN-PATIENT^MALE^04/07/1935^666330019^BCMA^4-C
"DATA",560.2,13,9,106,0)
100035^BCMA,TWENTY-PATIENT^MALE^04/07/1935^666330020^BCMA^4-D
"DATA",560.2,13,9,107,0)
100036^BCMA,TWENTYTWO-PATIENT^MALE^04/07/1935^666330022^BCMA^4-E
"DATA",560.2,13,9,108,0)
100037^BCMA,TWENTYONE-PATIENT^MALE^04/07/1935^666330021^BCMA^5-A
"DATA",560.2,13,9,109,0)
100038^BCMA,TWENTYTHREE-PATIENT^MALE^04/07/1935^666330023^BCMA^5-B
"DATA",560.2,13,9,110,0)
100039^BCMA,TWENTYFOUR-PATIENT^MALE^04/07/1935^666330024^BCMA^5-C
"DATA",560.2,13,9,111,0)
100040^BCMA,TWENTYFIVE-PATIENT^MALE^04/07/1935^666330025^BCMA^5-D
"DATA",560.2,13,9,112,0)
100041^BCMA,TWENTYSIX-PATIENT^MALE^04/07/1935^666330026^BCMA^5-E
"DATA",560.2,13,9,113,0)
100042^BCMA,TWENTYSEVEN-PATIENT^MALE^04/07/1935^666330027^BCMA^6-A
"DATA",560.2,13,9,114,0)
100043^BCMA,TWENTYEIGHT-PATIENT^MALE^04/07/1935^666330028^BCMA^6-B
"DATA",560.2,13,9,115,0)
100044^BCMA,TWENTYNINE-PATIENT^MALE^04/07/1935^666330029^BCMA^14-E
"DATA",560.2,13,9,116,0)
100045^BCMA,THIRTY-PATIENT^MALE^04/07/1935^666330030^BCMA^6-C
"DATA",560.2,13,9,117,0)
100046^BCMA,THIRTYONE-PATIENT^MALE^04/07/1935^666330031^BCMA^6-D
"DATA",560.2,13,9,118,0)
100047^BCMA,THIRTYTWO-PATIENT^MALE^04/07/1935^666330032^BCMA^6-E
"DATA",560.2,13,9,119,0)
100048^BCMA,THIRTYTHREE-PATIENT^MALE^04/07/1935^666330033^BCMA^6-F
"DATA",560.2,13,9,120,0)
100049^BCMA,THIRTYFOUR-PATIENT^MALE^04/07/1935^666330034^BCMA^6-G
"DATA",560.2,13,9,121,0)
100050^BCMA,THIRTYFIVE-PATIENT^MALE^04/07/1935^666330035^BCMA^7-A
"DATA",560.2,13,9,122,0)
100051^BCMA,THIRTYSIX-PATIENT^MALE^04/07/1935^666330036^BCMA^7-B
"DATA",560.2,13,9,123,0)
100052^BCMA,THIRTYSEVEN-PATIENT^MALE^04/07/1935^666330037^BCMA^7-C
"DATA",560.2,13,9,124,0)
100053^BCMA,THIRTYEIGHT-PATIENT^MALE^04/07/1935^666330038^BCMA^7-D
"DATA",560.2,13,9,125,0)
100054^BCMA,THIRTYNINE-PATIENT^MALE^04/07/1935^666330039^BCMA^7-E
"DATA",560.2,13,9,126,0)
100055^BCMA,FORTY-PATIENT^MALE^04/07/1935^666330040^BCMA^7-F
"DATA",560.2,13,9,127,0)
100056^BCMA,FORTYONE-PATIENT^MALE^04/07/1935^666330041^BCMA^7-G
"DATA",560.2,13,9,128,0)
100057^BCMA,FORTYTWO-PATIENT^MALE^04/07/1935^666330042^BCMA^8-A
"DATA",560.2,13,9,129,0)
100058^BCMA,FORTYTHREE-PATIENT^MALE^04/07/1935^666330043^BCMA^8-B
"DATA",560.2,13,9,130,0)
100059^BCMA,FORTYFOUR-PATIENT^MALE^04/07/1935^666330044^BCMA^8-C
"DATA",560.2,13,9,131,0)
100060^BCMA,FORTYFIVE-PATIENT^MALE^04/07/1935^666330045^BCMA^8-D
"DATA",560.2,13,9,132,0)
100061^BCMA,FORTYSIX-PATIENT^MALE^04/07/1935^666330046^BCMA^8-E
"DATA",560.2,13,9,133,0)
100062^BCMA,FORTYSEVEN-PATIENT^MALE^04/07/1935^666330047^BCMA^8-F
"DATA",560.2,13,9,134,0)
100063^BCMA,FORTYEIGHT-PATIENT^MALE^04/07/1935^666330048^BCMA^8-G
"DATA",560.2,13,9,135,0)
100064^BCMA,FORTYNINE-PATIENT^MALE^04/07/1935^666330049^BCMA^8-H
"DATA",560.2,13,9,136,0)
100065^BCMA,FIFTY-PATIENT^MALE^04/07/1935^666330050^BCMA^8-I
"DATA",560.2,13,9,137,0)
100066^BCMA,FIFTYONE-PATIENT^MALE^04/07/1935^666330051^BCMA^8-J
"DATA",560.2,13,9,138,0)
100067^BCMA,FIFTYTWO-PATIENT^MALE^04/07/1935^666330052^BCMA^9-A
"DATA",560.2,13,9,139,0)
100068^BCMA,FIFTYTHREE-PATIENT^MALE^04/07/1935^666330053^BCMA^9-B
"DATA",560.2,13,9,140,0)
100069^BCMA,FIFTYFOUR-PATIENT^MALE^04/07/1935^666330054^BCMA^9-C
"DATA",560.2,13,9,141,0)
100070^BCMA,FIFTYFIVE-PATIENT^MALE^04/07/1935^666330055^BCMA^9-D
"DATA",560.2,13,9,142,0)
100071^BCMA,FIFTYSIX-PATIENT^MALE^04/07/1935^666330056^BCMA^9-E
"DATA",560.2,13,9,143,0)
100072^BCMA,FIFTYSEVEN-PATIENT^MALE^04/07/1935^666330057^BCMA^9-F
"DATA",560.2,13,9,144,0)
100073^BCMA,FIFTYEIGHT-PATIENT^MALE^04/07/1935^666330058^BCMA^9-G
"DATA",560.2,13,9,145,0)
100074^BCMA,FIFTYNINE-PATIENT^MALE^04/07/1935^666330059^BCMA^9-H
"DATA",560.2,13,9,146,0)
100075^BCMA,SIXTY-PATIENT^MALE^04/07/1935^666330060^BCMA^10-A
"DATA",560.2,13,9,147,0)
100076^BCMA,SIXTYONE-PATIENT^MALE^04/07/1935^666330061^BCMA^10-B
"DATA",560.2,13,9,148,0)
100077^BCMA,SIXTYTWO-PATIENT^MALE^04/07/1935^666330062^BCMA^10-C
"DATA",560.2,13,9,149,0)
100078^BCMA,SIXTYTHREE-PATIENT^MALE^04/07/1935^666330063^BCMA^10-D
"DATA",560.2,13,9,150,0)
100079^BCMA,SIXTYFOUR-PATIENT^MALE^04/07/1935^666330064^BCMA^10-E
"DATA",560.2,13,9,151,0)
100080^BCMA,SIXTYFIVE-PATIENT^MALE^04/07/1935^666330065^BCMA^10-F
"DATA",560.2,13,9,152,0)
100081^BCMA,SIXTYSIX-PATIENT^MALE^04/07/1935^666330066^BCMA^10-G
"DATA",560.2,13,9,153,0)
100082^BCMA,SIXTYSEVEN-PATIENT^MALE^04/07/1935^666330067^BCMA^10-H
"DATA",560.2,13,9,154,0)
100083^BCMA,SIXTYEIGHT-PATIENT^MALE^04/07/1935^666330068^BCMA^10-I
"DATA",560.2,13,9,155,0)
100084^BCMA,SIXTYNINE-PATIENT^MALE^04/07/1935^666330069^BCMA^10-J
"DATA",560.2,13,9,156,0)
100085^BCMA,SEVENTY-PATIENT^MALE^04/07/1935^666330070^BCMA^11-A
"DATA",560.2,13,9,157,0)
100086^BCMA,SEVENTYONE-PATIENT^MALE^04/07/1935^666330071^BCMA^11-B
"DATA",560.2,13,9,158,0)
100087^BCMA,SEVENTYTWO-PATIENT^MALE^04/07/1935^666330072^BCMA^11-C
"DATA",560.2,13,9,159,0)
100088^BCMA,SEVENTYTHREE-PATIENT^MALE^04/07/1935^666330073^BCMA^11-D
"DATA",560.2,13,9,160,0)
100089^BCMA,SEVENTYFOUR-PATIENT^MALE^04/07/1935^666330074^BCMA^11-E
"DATA",560.2,13,9,161,0)
100090^BCMA,SEVENTYFIVE-PATIENT^MALE^04/07/1935^666330075^BCMA^11-F
"DATA",560.2,13,9,162,0)
100091^BCMA,SEVENTYSIX-PATIENT^MALE^04/07/1935^666330076^BCMA^11-G
"DATA",560.2,13,9,163,0)
100092^BCMA,SEVENTYSEVEN-PATIENT^MALE^04/07/1935^666330077^BCMA^11-H
"DATA",560.2,13,9,164,0)
100093^BCMA,SEVENTYEIGHT-PATIENT^MALE^04/07/1935^666330078^BCMA^11-I
"DATA",560.2,13,9,165,0)
100094^BCMA,SEVENTYNINE-PATIENT^MALE^04/07/1935^666330079^BCMA^12-A
"DATA",560.2,13,9,166,0)
100095^BCMA,EIGHTY-PATIENT^MALE^04/07/1935^666330080^BCMA^12-B
"DATA",560.2,13,9,167,0)
100096^BCMA,EIGHTYONE-PATIENT^MALE^04/07/1935^666330081^BCMA^12-C
"DATA",560.2,13,9,168,0)
100097^BCMA,EIGHTYTWO-PATIENT^MALE^04/07/1935^666330082^BCMA^12-D
"DATA",560.2,13,9,169,0)
100098^BCMA,EIGHTYTHREE-PATIENT^MALE^04/07/1935^666330083^BCMA^12-E
"DATA",560.2,13,9,170,0)
100099^BCMA,EIGHTYFOUR-PATIENT^MALE^04/07/1935^666330084^BCMA^12-F
"DATA",560.2,13,9,171,0)
100100^BCMA,EIGHTYFIVE-PATIENT^MALE^04/07/1935^666330085^BCMA^12-G
"DATA",560.2,13,9,172,0)
100101^BCMA,EIGHTYSIX-PATIENT^MALE^04/07/1935^666330086^BCMA^12-H
"DATA",560.2,13,9,173,0)
100102^BCMA,EIGHTYSEVEN-PATIENT^MALE^04/07/1935^666330087^BCMA^12-I
"DATA",560.2,13,9,174,0)
100103^BCMA,EIGHTYNINE-PATIENT^MALE^04/07/1935^666330089^BCMA^13-A
"DATA",560.2,13,9,175,0)
100104^BCMA,EIGHTYEIGHT-PATIENT^MALE^04/07/1935^666330088^BCMA^13-B
"DATA",560.2,13,9,176,0)
100105^BCMA,NINETY-PATIENT^MALE^04/07/1935^666330090^BCMA^13-C
"DATA",560.2,13,9,177,0)
100106^BCMA,NINETYONE-PATIENT^MALE^04/07/1935^666330091^BCMA^13-D
"DATA",560.2,13,9,178,0)
100107^BCMA,NINETYTWO-PATIENT^MALE^04/07/1935^666330092^BCMA^13-E
"DATA",560.2,13,9,179,0)
100108^BCMA,NINETYTHREE-PATIENT^MALE^04/07/1935^666330093^BCMA^13-F
"DATA",560.2,13,9,180,0)
100109^BCMA,NINETYFOUR-PATIENT^MALE^04/07/1935^666330094^BCMA^13-G
"DATA",560.2,13,9,181,0)
100110^BCMA,NINETYFIVE-PATIENT^MALE^04/07/1935^666330095^BCMA^13-H
"DATA",560.2,13,9,182,0)
100111^BCMA,NINETYSIX-PATIENT^MALE^04/07/1935^666330096^BCMA^13-I
"DATA",560.2,13,9,183,0)
100112^BCMA,NINETYSEVEN-PATIENT^MALE^04/07/1935^666330097^BCMA^13-J
"DATA",560.2,13,9,184,0)
100113^BCMA,NINETYEIGHT-PATIENT^MALE^04/07/1935^666330098^BCMA^14-A
"DATA",560.2,13,9,185,0)
100114^BCMA,NINETYNINE-PATIENT^MALE^04/07/1935^666330099^BCMA^14-B
"DATA",560.2,13,9,186,0)
100115^BCMA,ONE HUNDRED-PATIENT^MALE^04/07/1935^666330100^BCMA^14-C
"DATA",560.2,13,9,187,0)
285^ZZZRETFOURFIFTEEN,PATIENT^MALE^04/07/1935^666040445^DOMICILLARY^4-A
"DATA",560.2,13,9,188,0)
411^ZZZRETFIVEFIVE,PATIENT^MALE^04/07/1935^666411111^DOMICILLARY^2-C
"DATA",560.2,13,9,189,0)
77^ZZZRETSIXSEVENTYEIGHT,PATIENT^MALE^04/07/1935^666030453^DRUG^
"DATA",560.2,13,9,190,0)
112^ZZZRETIREDSIXTYSEVEN,PATIENT^MALE^04/07/1935^666553443^DRUG^
"DATA",560.2,13,9,191,0)
119^ZZZRETIREDSEVENTEEN,PATIENT^MALE^04/07/1935^666327857^DRUG^
"DATA",560.2,13,9,192,0)
158^ZZZRETFOURFIFTYONE,PATIENT^MALE^04/07/1935^666281965^DRUG^
"DATA",560.2,13,9,193,0)
616^ZZZRETONETHIRTYTHREE,PATIENT^MALE^04/07/1935^666288887^DRUG^
"DATA",560.2,13,9,194,0)
116^ZZZRETSIXSIXTYFIVE,PATIENT^MALE^04/07/1935^666222222^ELVAN^
"DATA",560.2,13,9,195,0)
122^ZZZRETFOURFORTYSIX,PATIENT^MALE^04/07/1935^666554444^ELVAN^
"DATA",560.2,13,9,196,0)
201^ZZZRETIREDSIXTYFOUR,PATIENT^MALE^04/07/1935^666891127^ELVAN^
"DATA",560.2,13,9,197,0)
329^ZZZRETIREDONETEN,PATIENT^MALE^04/07/1935^666261111^ELVAN^
"DATA",560.2,13,9,198,0)
123^ZZZRETIREDONE,PATIENT^MALE^04/07/1935^666138888^GEN MED^A-1
"DATA",560.2,13,9,199,0)
164^ZZZRETIREDONENINETEEN,PATIENT^MALE^04/07/1935^666101024^GEN MED^A-3
"DATA",560.2,13,9,200,0)
196^ZZZRETFIVETHIRTYFOUR,PATIENT^MALE^04/07/1935^666101058^GEN MED^
"DATA",560.2,13,9,201,0)
206^ZZZRETSIXFIFTYNINE,PATIENT^MALE^04/07/1935^666003333^GEN MED^
"DATA",560.2,13,9,202,0)
242^ZZZRETFOURFORTYTWO,PATIENT^MALE^04/07/1935^666664412^GEN MED^
"DATA",560.2,13,9,203,0)
297^ZZZRETIREDEIGHTYTWO,PATIENT^MALE^04/07/1935^666610322^GEN MED^
"DATA",560.2,13,9,204,0)
314^ZZZRETSIXFIFTYTHREE,PATIENT^MALE^04/07/1935^666518352^GEN MED^
"DATA",560.2,13,9,205,0)
334^ZZZRETSIXFORTYEIGHT,PATIENT^MALE^04/07/1935^666443213^GEN MED^
"DATA",560.2,13,9,206,0)
340^ZZZRETFOURFORTYFOUR,PATIENT^MALE^04/07/1935^666020150^GEN MED^
"DATA",560.2,13,9,207,0)
421^ZZZRETIREDTWELVE,PATIENT^MALE^04/07/1935^666040549^GEN MED^
"DATA",560.2,13,9,208,0)
735^ZZZRETIREDONEHUNDRED,PATIENT^MALE^04/07/1935^666551148^GEN MED^A-5
"DATA",560.2,13,9,209,0)
100022^BCMA,EIGHT BC^MALE^04/07/1935^666330008^GEN MED^
"DATA",560.2,13,9,210,0)
100784^SEVENTYSIX,INPATIENT^MALE^03/09/1945^666000876^ICU/CCU^ICU-1
"DATA",560.2,13,9,211,0)
100785^SEVENTYSEVEN,INPATIENT^MALE^03/09/1945^666000877^ICU/CCU^ICU-2
"DATA",560.2,13,9,212,0)
100786^SEVENTYEIGHT,INPATIENT^MALE^03/09/1945^666000878^ICU/CCU^ICU-3
"DATA",560.2,13,9,213,0)
100787^SEVENTYNINE,INPATIENT^MALE^03/09/1945^666000879^ICU/CCU^ICU-4
"DATA",560.2,13,9,214,0)
100788^EIGHTY,INPATIENT^MALE^03/09/1945^666000880^ICU/CCU^ICU-5
"DATA",560.2,13,9,215,0)
100789^EIGHTYONE,INPATIENT^MALE^03/09/1945^666000881^ICU/CCU^ICU-6
"DATA",560.2,13,9,216,0)
100790^EIGHTYTWO,INPATIENT^MALE^03/09/1945^666000882^ICU/CCU^ICU-7
"DATA",560.2,13,9,217,0)
100791^EIGHTYTHREE,INPATIENT^MALE^03/09/1945^666000883^ICU/CCU^ICU-8
"DATA",560.2,13,9,218,0)
100792^EIGHTYFOUR,INPATIENT^MALE^03/09/1945^666000884^ICU/CCU^ICU-9
"DATA",560.2,13,9,219,0)
100793^EIGHTYFIVE,INPATIENT^MALE^03/09/1945^666000885^ICU/CCU^ICU-10
"DATA",560.2,13,9,220,0)
100794^EIGHTYSIX,INPATIENT^MALE^03/09/1945^666000886^ICU/CCU^ICU-11
"DATA",560.2,13,9,221,0)
100795^EIGHTYSEVEN,INPATIENT^MALE^03/09/1945^666000887^ICU/CCU^ICU-12
"DATA",560.2,13,9,222,0)
100796^EIGHTYEIGHT,INPATIENT^MALE^03/09/1945^666000888^ICU/CCU^ICU-13
"DATA",560.2,13,9,223,0)
100797^EIGHTYNINE,INPATIENT^MALE^03/09/1945^666000889^ICU/CCU^ICU-14
"DATA",560.2,13,9,224,0)
100798^NINETY,INPATIENT^MALE^03/09/1945^666000890^ICU/CCU^ICU-15
"DATA",560.2,13,9,225,0)
100799^NINETYONE,INPATIENT^MALE^03/09/1945^666000891^ICU/CCU^ICU-16
"DATA",560.2,13,9,226,0)
100800^NINETYTWO,INPATIENT^MALE^03/09/1945^666000892^ICU/CCU^ICU-17
"DATA",560.2,13,9,227,0)
100801^NINETYTHREE,INPATIENT^MALE^03/09/1945^666000893^ICU/CCU^ICU-18
"DATA",560.2,13,9,228,0)
100802^NINETYFOUR,INPATIENT^MALE^03/09/1945^666000894^ICU/CCU^ICU-19
"DATA",560.2,13,9,229,0)
100803^NINETYFIVE,INPATIENT^MALE^03/09/1945^666000895^ICU/CCU^ICU-20
"DATA",560.2,13,9,230,0)
100804^NINETYSIX,INPATIENT^MALE^03/09/1945^666000896^ICU/CCU^ICU-21
"DATA",560.2,13,9,231,0)
100805^NINETYSEVEN,INPATIENT^MALE^03/09/1945^666000897^ICU/CCU^ICU-22
"DATA",560.2,13,9,232,0)
100806^NINETYEIGHT,INPATIENT^MALE^03/09/1945^666000898^ICU/CCU^ICU-23
"DATA",560.2,13,9,233,0)
100807^NINETYNINE,INPATIENT^MALE^03/09/1945^666000899^ICU/CCU^ICU-24
"DATA",560.2,13,9,234,0)
100808^ONEHUNDRED,INPATIENT^MALE^03/09/1945^666000900^ICU/CCU^ICU-25
"DATA",560.2,13,9,235,0)
45^ZZZRETIREDSEVENTYTWO,PATIENT^MALE^04/07/1935^666518888^INTERMED-2^
"DATA",560.2,13,9,236,0)
89^ZZZRETFOUREIGHTYEIGHT,PATIENT^MALE^04/07/1935^666198730^INTERMED-2^
"DATA",560.2,13,9,237,0)
6^ZZZRETIREDFIFTYTHREE,PATIENT^MALE^04/07/1935^666459871^MIKE IP SUBSPECIALTY^403-1
"DATA",560.2,13,9,238,0)
91^ZZZRETIREDFIFTYSIX,PATIENT^MALE^04/07/1935^666388967^MIKE IP SUBSPECIALTY^401-1
"DATA",560.2,13,9,239,0)
156^ZZZRETSIXSIX,PATIENT^MALE^04/07/1935^666577111^MIKE IP SUBSPECIALTY^402-1
"DATA",560.2,13,9,240,0)
248^ZZZRETFIVESIXTYEIGHT,PATIENT^MALE^04/07/1935^666347347^MIKE IP SUBSPECIALTY^403-2
"DATA",560.2,13,9,241,0)
12^ZZZRETFOURTHIRTEEN,PATIENT^MALE^04/07/1935^666121550^MIKE'S IP WARD^MJB-4
"DATA",560.2,13,9,242,0)
169^ZZZRETIREDFIFTYFOUR,PATIENT^MALE^04/07/1935^666675432^MIKE'S IP WARD^MJB-3
"DATA",560.2,13,9,243,0)
711^ZZZRETFOURFIFTYEIGHT,PATIENT^MALE^04/07/1935^666909955^MIKE'S IP WARD^MJB-7
"DATA",560.2,13,9,244,0)
736^ZZZRETIREDTWENTYFOUR,PATIENT^MALE^04/07/1935^666732222^MIKE'S IP WARD^MJB-5
"DATA",560.2,13,9,245,0)
737^ZZZRETIREDNINETYFOUR,PATIENT^MALE^04/07/1935^666441233^MIKE'S IP WARD^MJB-1
"DATA",560.2,13,9,246,0)
100759^FIFTYONE,INPATIENT^MALE^03/09/1945^666000851^NHCU^NH1-A
"DATA",560.2,13,9,247,0)
100760^FIFTYTWO,INPATIENT^MALE^03/09/1945^666000852^NHCU^NH1-B
"DATA",560.2,13,9,248,0)
100761^FIFTYTHREE,INPATIENT^MALE^03/09/1945^666000853^NHCU^NH2-A
"DATA",560.2,13,9,249,0)
100762^FIFTYFOUR,INPATIENT^MALE^03/09/1945^666000854^NHCU^NH2-B
"DATA",560.2,13,9,250,0)
100763^FIFTYFIVE,INPATIENT^MALE^03/09/1945^666000855^NHCU^NH3-A
"DATA",560.2,13,9,251,0)
100764^FIFTYSIX,INPATIENT^MALE^03/09/1945^666000856^NHCU^NH3-B
"DATA",560.2,13,9,252,0)
100765^FIFTYSEVEN,INPATIENT^MALE^03/09/1945^666000857^NHCU^NH4-A
"DATA",560.2,13,9,253,0)
100766^FIFTYEIGHT,INPATIENT^MALE^03/09/1945^666000858^NHCU^NH4-B
"DATA",560.2,13,9,254,0)
100767^FIFTYNINE,INPATIENT^MALE^03/09/1945^666000859^NHCU^NH5-A
"DATA",560.2,13,9,255,0)
100768^SIXTY,INPATIENT^MALE^03/09/1945^666000860^NHCU^NH5-B
"DATA",560.2,13,9,256,0)
100769^SIXTYONE,INPATIENT^MALE^03/09/1945^666000861^NHCU^NH6-A
"DATA",560.2,13,9,257,0)
100770^SIXTYTWO,INPATIENT^MALE^03/09/1945^666000862^NHCU^NH6-B
"DATA",560.2,13,9,258,0)
100771^SIXTYTHREE,INPATIENT^MALE^03/09/1945^666000863^NHCU^NH7-A
"DATA",560.2,13,9,259,0)
100772^SIXTYFOUR,INPATIENT^MALE^03/09/1945^666000864^NHCU^NH7-B
"DATA",560.2,13,9,260,0)
100773^SIXTYFIVE,INPATIENT^MALE^03/09/1945^666000865^NHCU^NH8-A
"DATA",560.2,13,9,261,0)
100774^SIXTYSIX,INPATIENT^MALE^03/09/1945^666000866^NHCU^NH8-B
"DATA",560.2,13,9,262,0)
100775^SIXTYSEVEN,INPATIENT^MALE^03/09/1945^666000867^NHCU^NH9-A
"DATA",560.2,13,9,263,0)
100776^SIXTYEIGHT,INPATIENT^MALE^03/09/1945^666000868^NHCU^NH9-B
"DATA",560.2,13,9,264,0)
100777^SIXTYNINE,INPATIENT^MALE^03/09/1945^666000869^NHCU^NH10-A
"DATA",560.2,13,9,265,0)
100778^SEVENTY,INPATIENT^MALE^03/09/1945^666000870^NHCU^NH10-B
"DATA",560.2,13,9,266,0)
100779^SEVENTYONE,INPATIENT^MALE^03/09/1945^666000871^NHCU^NH11-A
"DATA",560.2,13,9,267,0)
100780^SEVENTYTWO,INPATIENT^MALE^03/09/1945^666000872^NHCU^NH11-B
"DATA",560.2,13,9,268,0)
100781^SEVENTYTHREE,INPATIENT^MALE^03/09/1945^666000873^NHCU^NH12-A
"DATA",560.2,13,9,269,0)
100782^SEVENTYFOUR,INPATIENT^MALE^03/09/1945^666000874^NHCU^NH12-B
"DATA",560.2,13,9,270,0)
100783^SEVENTYFIVE,INPATIENT^MALE^03/09/1945^666000875^NHCU^NH13-A
"DATA",560.2,13,9,271,0)
292^ZZZRETTHREENINETYFOUR,PATIENT^^04/07/1935^666050534^SARRTP^100-D
"DATA",560.2,13,9,272,0)
56^ZZZRETSIXNINE,PATIENT^^04/07/1935^666821111^STROKE^
"DATA",560.2,13,9,273,0)
197^ZZZRETFOURSIXTYFOUR,PATIENT^MALE^04/07/1935^666998888^STROKE^
"DATA",560.2,13,9,274,0)
249^ZZZRETSIXNINETYONE,PATIENT^MALE^04/07/1935^666551425^SURGERY^
"DATA",560.21,1,0)
VISTA^V^VistA
"DATA",560.21,2,0)
PROBLEM LIST^PL^Problem List
"DATA",560.21,3,0)
APPOINTMENTS^APPT^Appointments
"DATA",560.21,4,0)
VISITS^VST^Visits
"DATA",560.21,5,0)
MEDICATIONS^MED^Meds
"DATA",560.21,6,0)
CLIO^CLIO^CliO
"DATA",560.21,7,0)
LAB^LAB^Lab
"DATA",560.22,1,0)
ACUITY CODE^ac^acuityCode
"DATA",560.22,2,0)
STATUS CODE^sc^statusCode
"DATA",560.22,3,0)
INTERPRETATION^int^interpretation
"DATA",560.22,4,0)
RESULT STATUS^rs^resultStatus
"DATA",560.22,5,0)
INTERPRETATION CODE^ic^interpretationCode
"DATA",560.22,6,0)
PATIENT CLASS CODE^pcc^patientClassCode
"DATA",560.22,7,0)
CATEGORY CODE^cc^categoryCode
"DATA",560.22,8,0)
MEDICATION STATUS^ms^medStatus
"DATA",560.22,9,0)
MEDICATION TYPE^mt^medType
"DATA",560.22,10,0)
INGREDIENT ROLE^ir^ingredientRole
"FIA",560.2)
VPR LIST
"FIA",560.2,0)
^VPRD(560.2,
"FIA",560.2,0,0)
560.2
"FIA",560.2,0,1)
y^y^f^^y^^y^o^n
"FIA",560.2,0,10)

"FIA",560.2,0,11)
I Y
"FIA",560.2,0,"RLRO")

"FIA",560.2,0,"VR")
1.0^VPR
"FIA",560.2,560.2)
0
"FIA",560.2,560.202)
0
"FIA",560.2,560.203)
0
"FIA",560.2,560.209)
0
"FIA",560.21)
VPR LIST DOMAIN
"FIA",560.21,0)
^VPRD(560.21,
"FIA",560.21,0,0)
560.21
"FIA",560.21,0,1)
y^y^f^^n^^y^o^n
"FIA",560.21,0,10)

"FIA",560.21,0,11)
I Y
"FIA",560.21,0,"RLRO")

"FIA",560.21,0,"VR")
1.0^VPR
"FIA",560.21,560.21)
0
"FIA",560.22)
VPR LIST ATTRIBUTE
"FIA",560.22,0)
^VPRD(560.22,
"FIA",560.22,0,0)
560.22
"FIA",560.22,0,1)
y^y^f^^n^^y^o^n
"FIA",560.22,0,10)

"FIA",560.22,0,11)
I Y
"FIA",560.22,0,"RLRO")

"FIA",560.22,0,"VR")
1.0^VPR
"FIA",560.22,560.22)
0
"FRV1",560.2,"1,0",4)
VISTA
"FRV1",560.2,"1,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"1,0",5)
STATUS CODE
"FRV1",560.2,"1,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"10,0",4)
MEDICATIONS
"FRV1",560.2,"10,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"10,0",5)
MEDICATION STATUS
"FRV1",560.2,"10,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"11,0",4)
MEDICATIONS
"FRV1",560.2,"11,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"11,0",5)
MEDICATION TYPE
"FRV1",560.2,"11,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"12,0",4)
MEDICATIONS
"FRV1",560.2,"12,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"12,0",5)
INGREDIENT ROLE
"FRV1",560.2,"12,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"13,0",4)
VISTA
"FRV1",560.2,"13,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"13,0",5)
RESULT STATUS
"FRV1",560.2,"13,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"2,0",4)
PROBLEM LIST
"FRV1",560.2,"2,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"2,0",5)
ACUITY CODE
"FRV1",560.2,"2,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"3,0",4)
PROBLEM LIST
"FRV1",560.2,"3,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"3,0",5)
STATUS CODE
"FRV1",560.2,"3,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"4,0",4)
CLIO
"FRV1",560.2,"4,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"4,0",5)
INTERPRETATION
"FRV1",560.2,"4,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"5,0",4)
CLIO
"FRV1",560.2,"5,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"5,0",5)
RESULT STATUS
"FRV1",560.2,"5,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"6,0",4)
LAB
"FRV1",560.2,"6,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"6,0",5)
INTERPRETATION CODE
"FRV1",560.2,"6,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"7,0",4)
APPOINTMENTS
"FRV1",560.2,"7,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"7,0",5)
PATIENT CLASS CODE
"FRV1",560.2,"7,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"8,0",4)
VISITS
"FRV1",560.2,"8,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"8,0",5)
PATIENT CLASS CODE
"FRV1",560.2,"8,0",5,"F")
;VPRD(560.22,
"FRV1",560.2,"9,0",4)
VISITS
"FRV1",560.2,"9,0",4,"F")
;VPRD(560.21,
"FRV1",560.2,"9,0",5)
CATEGORY CODE
"FRV1",560.2,"9,0",5,"F")
;VPRD(560.22,
"KRN",19,14023,-1)
0^1
"KRN",19,14023,0)
VPR LIST BACKGROUND BUILDER^VPR List Background Builder^^R^^^^^^^^
"KRN",19,14023,25)
DQ^VPRLIST
"KRN",19,14023,"U")
VPR LIST BACKGROUND BUILDER
"KRN",19,14024,-1)
0^3
"KRN",19,14024,0)
VPR LIST EDITOR^Edit VPR List Definition^^R^^^^^^^^
"KRN",19,14024,25)
EDIT^VPRLIST
"KRN",19,14024,"U")
EDIT VPR LIST DEFINITION
"KRN",19,14025,-1)
0^5
"KRN",19,14025,0)
VPR LIST REBUILD ONE^Rebuild a single list^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14025,25)
REBUILD^VPRLIST("?")
"KRN",19,14025,"U")
REBUILD A SINGLE LIST
"KRN",19,14026,-1)
0^2
"KRN",19,14026,0)
VPR LIST DISPLAY^Display List Definition^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14026,25)
DISPLAY^VPRLIST
"KRN",19,14026,"U")
DISPLAY LIST DEFINITION
"KRN",19,14027,-1)
0^4
"KRN",19,14027,0)
VPR LIST MANAGER^VPR List Manager^^M^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14027,10,0)
^19.01IP^3^3
"KRN",19,14027,10,1,0)
14026
"KRN",19,14027,10,1,"^")
VPR LIST DISPLAY
"KRN",19,14027,10,2,0)
14024
"KRN",19,14027,10,2,"^")
VPR LIST EDITOR
"KRN",19,14027,10,3,0)
14025
"KRN",19,14027,10,3,"^")
VPR LIST REBUILD ONE
"KRN",19,14027,99)
62782,45615
"KRN",19,14027,"U")
VPR LIST MANAGER
"KRN",8994,1683,-1)
0^16
"KRN",8994,1683,0)
VPR GET PATIENT DATA JSON^GET^VPRDJ^4^S^^^0^1^^1
"KRN",8994,1683,1,0)
^8994.01^2^2^3121003^^^^
"KRN",8994,1683,1,1,0)
This RPC retrieves the requested data from VistA, and returns it in
"KRN",8994,1683,1,2,0)
^TMP("VPR",$J,n) as JSON.
"KRN",8994,1683,2,0)
^8994.02A^1^1
"KRN",8994,1683,2,1,0)
FILTER^2^^0^1
"KRN",8994,1683,2,1,1,0)
^8994.021^1^1^3120629^^^^
"KRN",8994,1683,2,1,1,1,0)
List of name-value pairs defining the search.
"KRN",8994,1683,2,"B","FILTER",1)

"KRN",8994,1683,2,"PARAMSEQ",1,1)

"KRN",8994,1683,3,0)
^8994.03^1^1^3120629^^^^
"KRN",8994,1683,3,1,0)
Text array formatted as JSON
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",560.2,0,4,.04)
DOMAIN^RP560.21'^VPRD(560.21,^0;4^Q
"PGL",560.2,0,5,.05)
ATTRIBUTE^RP560.22'^VPRD(560.22,^0;5^Q
"PKG",571,-1)
1^1
"PKG",571,0)
VIRTUAL PATIENT RECORD^VPR^Utilities to manage a virtual copy of the patient record
"PKG",571,20,0)
^9.402P^^
"PKG",571,22,0)
^9.49I^1^1
"PKG",571,22,1,0)
1.0^3110804^3110525^1085
"PKG",571,22,1,"PAH",1,0)
2^3121219^1086
"PKG",571,22,1,"PAH",1,1,0)
^^2^2^3121219
"PKG",571,22,1,"PAH",1,1,1,0)
The Virtual Patient Record (VPR) data extract RPC, which returns data
"PKG",571,22,1,"PAH",1,1,2,0)
from the local VistA system, is updated in this patch.
"PRE")
VPRPRODC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","VPRDERRH")
0^1^B1916578
"RTN","VPRDERRH",1,0)
VPRDERRH ;SLC/AGP - Generic TEST for JSON extract for all patients in the account ; 3/21/12 5:44pm
"RTN","VPRDERRH",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDERRH",3,0)
 ;
"RTN","VPRDERRH",4,0)
 ;
"RTN","VPRDERRH",5,0)
ERRHDLR ;
"RTN","VPRDERRH",6,0)
 N CNT,DOMCNT,ERROR,MGIEN,MGROUP,MSGCNT,NL,XMDUZ,XMSUB,XMY,XMZ
"RTN","VPRDERRH",7,0)
 S ERROR=$$EC^%ZOSV
"RTN","VPRDERRH",8,0)
 ;Ignore the "errors" the unwinder creates.
"RTN","VPRDERRH",9,0)
 I ERROR["ZTER" D UNWIND^%ZTER
"RTN","VPRDERRH",10,0)
 ;Make sure we don't loop if there is an error during procesing of
"RTN","VPRDERRH",11,0)
 ;the error handler.
"RTN","VPRDERRH",12,0)
 N $ET S $ET="D ^%ZTER,UNWIND^%ZTER"
"RTN","VPRDERRH",13,0)
 ;
"RTN","VPRDERRH",14,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","VPRDERRH",15,0)
 ;last global reference.
"RTN","VPRDERRH",16,0)
 D ^%ZTER
"RTN","VPRDERRH",17,0)
 ;
"RTN","VPRDERRH",18,0)
 ;K ^TMP($J,"VPR ERROR")
"RTN","VPRDERRH",19,0)
 S CNT=+$G(^TMP($J,"VPR ERROR","# of Errors"))
"RTN","VPRDERRH",20,0)
 S CNT=CNT+1,^TMP($J,"VPR ERROR","# of Errors")=CNT
"RTN","VPRDERRH",21,0)
 S ^TMP($J,"VPR ERROR",1,0)="An error occurred on patient: "_$G(ERRPAT)
"RTN","VPRDERRH",22,0)
 I $L(ERRMSG)>0 D
"RTN","VPRDERRH",23,0)
 .S MSGCNT=$O(^TMP($J,"VPR ERROR","ERROR MESSAGE",""))+1
"RTN","VPRDERRH",24,0)
 .S ^TMP($J,"VPR ERROR","ERROR MESSAGE",MSGCNT)=ERRMSG
"RTN","VPRDERRH",25,0)
 I '$D(ERRARRY) Q
"RTN","VPRDERRH",26,0)
 S DOMCNT=$O(^TMP($J,"VPR ERROR",ERRPAT,ERRDOM,"DATA",""))+1
"RTN","VPRDERRH",27,0)
 I $D(ERRARRY)>0 M ^TMP($J,"VPR ERROR",ERRPAT,ERRDOM,"DATA",DOMCNT)=ERRARRY
"RTN","VPRDERRH",28,0)
 ;if unwind I lose the entire process, which returns incomplete data to the extract return value.
"RTN","VPRDERRH",29,0)
 ;D UNWIND^%ZTER
"RTN","VPRDERRH",30,0)
 Q
"RTN","VPRDJ")
0^2^B32552740
"RTN","VPRDJ",1,0)
VPRDJ ;SLC/MKB -- Serve VistA data as JSON via RPC ; 10/18/12 6:26pm
"RTN","VPRDJ",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ",4,0)
 ;
"RTN","VPRDJ",5,0)
GET(VPR,FILTER) ; -- Return search results as JSON in @VPR@(n)
"RTN","VPRDJ",6,0)
 ; RPC = VPR GET PATIENT DATA JSON
"RTN","VPRDJ",7,0)
 N ICN,DFN,TYPE,VPRSTART,VPRSTOP,VPRMAX,VPRI,VPRID,VPRTEXT,VPRERR
"RTN","VPRDJ",8,0)
 S VPR=$NA(^TMP("VPR",$J)),VPRI=0 K @VPR
"RTN","VPRDJ",9,0)
 ;
"RTN","VPRDJ",10,0)
 ; parse & validate input parameters
"RTN","VPRDJ",11,0)
 S DFN=$G(FILTER("patientId"))
"RTN","VPRDJ",12,0)
 S ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","VPRDJ",13,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","VPRDJ",14,0)
 ;
"RTN","VPRDJ",15,0)
 S TYPE=$G(FILTER("domain")),TYPE=$$LOW^XLFSTR(TYPE)
"RTN","VPRDJ",16,0)
 S:TYPE="" TYPE=$$ALL
"RTN","VPRDJ",17,0)
 I TYPE'="new",DFN<1!'$D(^DPT(DFN)) S VPRERR=$$ERR(1,DFN) G GTQ
"RTN","VPRDJ",18,0)
 ;
"RTN","VPRDJ",19,0)
 S VPRSTART=+$G(FILTER("start"),1410102)
"RTN","VPRDJ",20,0)
 S VPRSTOP=+$G(FILTER("stop"),4141015)
"RTN","VPRDJ",21,0)
 S VPRMAX=+$G(FILTER("max"),9999)
"RTN","VPRDJ",22,0)
 I VPRSTART,VPRSTOP,VPRSTOP<VPRSTART D  ;switch
"RTN","VPRDJ",23,0)
 . N X S X=VPRSTART,VPRSTART=VPRSTOP,VPRSTOP=X
"RTN","VPRDJ",24,0)
 I VPRSTOP,$L(VPRSTOP,".")<2 S VPRSTOP=VPRSTOP_".24"
"RTN","VPRDJ",25,0)
 ;
"RTN","VPRDJ",26,0)
 S VPRID=$G(FILTER("id"))
"RTN","VPRDJ",27,0)
 S VPRTEXT=+$G(FILTER("text")) ;include report/document text?
"RTN","VPRDJ",28,0)
 ;
"RTN","VPRDJ",29,0)
 ;set error trap
"RTN","VPRDJ",30,0)
 N $ES,$ET,ERRARRY,ERRDOM,ERRPAT,ERRMSG
"RTN","VPRDJ",31,0)
 ;S $ET="D ERRHDLR^VPRDERRH G ERRQ^VPRDJ0"
"RTN","VPRDJ",32,0)
 K ^TMP($J,"VPR ERROR")
"RTN","VPRDJ",33,0)
 ;
"RTN","VPRDJ",34,0)
 ; extract data
"RTN","VPRDJ",35,0)
 I TYPE="new",$L($T(EN^VPRDJX)) D EN^VPRDJX(VPRID,VPRMAX) Q  ;G GTQ ;data updates
"RTN","VPRDJ",36,0)
 N VPRTYPE,VPRP,VPRTN
"RTN","VPRDJ",37,0)
 S VPRTYPE=TYPE,ERRPAT=DFN
"RTN","VPRDJ",38,0)
 F VPRP=1:1:$L(VPRTYPE,";") S TYPE=$P(VPRTYPE,";",VPRP) I $L(TYPE) D
"RTN","VPRDJ",39,0)
 . S VPRTN=$$RTN(TYPE)_"^VPRDJ0" Q:'$L($T(@VPRTN))  ;D ERR(2) Q
"RTN","VPRDJ",40,0)
 . D @VPRTN
"RTN","VPRDJ",41,0)
 ;
"RTN","VPRDJ",42,0)
GTQ ; add item count and terminating characters
"RTN","VPRDJ",43,0)
 N ERROR,CNT
"RTN","VPRDJ",44,0)
 I '$D(@VPR)!'$G(VPRI)!$D(VPRERR) D
"RTN","VPRDJ",45,0)
 . S @VPR@(.5)="{""apiVersion"":""1.01"","
"RTN","VPRDJ",46,0)
 . I $D(VPRERR) S @VPR@(1)="""error:{""message:"_VPRERR_"""}}"
"RTN","VPRDJ",47,0)
 . E  S @VPR@(1)="""data"":{""totalItems"":0,""items"":[]}}"
"RTN","VPRDJ",48,0)
 I $D(@VPR),$G(VPRI) D
"RTN","VPRDJ",49,0)
 . S @VPR@(.5)="{""apiVersion"":""1.01"",""data"":{""updated"":"_""""_$$HL7NOW_""""_",""totalItems"":"_VPRI_",""items"":["
"RTN","VPRDJ",50,0)
 . I $D(^TMP($J,"VPR ERROR"))>0 D
"RTN","VPRDJ",51,0)
 . . D BUILDERR(.ERROR,DFN)
"RTN","VPRDJ",52,0)
 . . S VPRI=VPRI+1,@VPR@(VPRI)=","
"RTN","VPRDJ",53,0)
 . . S CNT=0 F  S CNT=$O(ERROR(CNT)) Q:CNT'>0  D
"RTN","VPRDJ",54,0)
 . . . S VPRI=VPRI+1,@VPR@(VPRI)=ERROR(CNT)
"RTN","VPRDJ",55,0)
 . S VPRI=VPRI+1,@VPR@(VPRI)="]}}"
"RTN","VPRDJ",56,0)
 K ^TMP($J,"VPR ERROR"),^TMP("VPRTEXT",$J)
"RTN","VPRDJ",57,0)
 Q
"RTN","VPRDJ",58,0)
 ;
"RTN","VPRDJ",59,0)
BUILDERR(RESULT,DFN) ;
"RTN","VPRDJ",60,0)
 N CNT,COUNT,DOM,DOMCNT,ERRMSG,ERROR,FIELD,MSG,MSGCNT
"RTN","VPRDJ",61,0)
 S COUNT=$G(^TMP($J,"VPR ERROR","# of Errors"))
"RTN","VPRDJ",62,0)
 S CNT=1,ERROR("error","message","\",CNT)="A mumps error occurred when extracting the patient data. A total of "_COUNT_" occurred."_$C(10,13)
"RTN","VPRDJ",63,0)
 S MSGCNT=0 F  S MSGCNT=$O(^TMP($J,"VPR ERROR","ERROR MESSAGE",MSGCNT)) Q:MSGCNT'>0  D
"RTN","VPRDJ",64,0)
 .S CNT=CNT+1,ERROR("error","message","\",CNT)=$G(^TMP($J,"VPR ERROR","ERROR MESSAGE",MSGCNT))_$C(10,13)
"RTN","VPRDJ",65,0)
 S DOM="" F  S DOM=$O(^TMP($J,"VPR ERROR",DFN,DOM)) Q:DOM=""  D
"RTN","VPRDJ",66,0)
 .S DOMCNT=0,CNT=0 F  S DOMCNT=$O(^TMP($J,"VPR ERROR",DFN,DOM,"DATA",DOMCNT)) Q:DOMCNT'>0  D
"RTN","VPRDJ",67,0)
 ..S CNT=CNT+1 M ERROR("error","errors",CNT,"data")=^TMP($J,"VPR ERROR",DFN,DOM,"DATA",DOMCNT)
"RTN","VPRDJ",68,0)
 D ENCODE^VPRJSON("ERROR","RESULT","ERRMSG")
"RTN","VPRDJ",69,0)
 Q
"RTN","VPRDJ",70,0)
 ;
"RTN","VPRDJ",71,0)
RTN(X) ; -- Return linetag in VPRDJ0 routine for clinical domain X
"RTN","VPRDJ",72,0)
 S X=$G(X) I X="" Q "Z"
"RTN","VPRDJ",73,0)
 N Y S Y="VPR"      ;default to VPR, for various object collections
"RTN","VPRDJ",74,0)
 I X["accession"    S Y="LR"
"RTN","VPRDJ",75,0)
 I X["allerg"       S Y="GMRA"
"RTN","VPRDJ",76,0)
 I X["appointment"  S Y="SDAM"
"RTN","VPRDJ",77,0)
 I X["clinicalproc" S Y="MC"
"RTN","VPRDJ",78,0)
 I X["consult"      S Y="GMRC"
"RTN","VPRDJ",79,0)
 I X["cpt"          S Y="PXCP"
"RTN","VPRDJ",80,0)
 I X["demograph"    S Y="DPT"
"RTN","VPRDJ",81,0)
 I X["document"     S Y="TIU"
"RTN","VPRDJ",82,0)
 I X["factor"       S Y="PXHF"
"RTN","VPRDJ",83,0)
 ; X["flag"         S Y="GPF"
"RTN","VPRDJ",84,0)
 I X["immunization" S Y="PXIM"
"RTN","VPRDJ",85,0)
 I X["skin"         S Y="PXSK"
"RTN","VPRDJ",86,0)
 I X?1"exam".E      S Y="PXAM"
"RTN","VPRDJ",87,0)
 I X["educat"       S Y="PXED"
"RTN","VPRDJ",88,0)
 ; X["insur"        S Y="IB"
"RTN","VPRDJ",89,0)
 ; X["polic"        S Y="IB"
"RTN","VPRDJ",90,0)
 I X["lab"          S Y="LR"
"RTN","VPRDJ",91,0)
 I X["mental"       S Y="YT"
"RTN","VPRDJ",92,0)
 I X["med"          S Y="PS"
"RTN","VPRDJ",93,0)
 I X["pharm"        S Y="PS"
"RTN","VPRDJ",94,0)
 I X["pov"          S Y="PXPV"
"RTN","VPRDJ",95,0)
 I X["observ"       S Y="MDC"
"RTN","VPRDJ",96,0)
 I X["order"        S Y="OR"
"RTN","VPRDJ",97,0)
 I X["patient"      S Y="DPT"
"RTN","VPRDJ",98,0)
 I X["problem"      S Y="GMPL"
"RTN","VPRDJ",99,0)
 ; X["procedure"    S Y="PROC"
"RTN","VPRDJ",100,0)
 I X["ptf"          S Y="PTF"
"RTN","VPRDJ",101,0)
 I X["reaction"     S Y="GMRA"
"RTN","VPRDJ",102,0)
 I X["surg"         S Y="SR"
"RTN","VPRDJ",103,0)
 I X["visit"        S Y="VSIT"
"RTN","VPRDJ",104,0)
 I X["vital"        S Y="GMV"
"RTN","VPRDJ",105,0)
 I X["rad"          S Y="RA"
"RTN","VPRDJ",106,0)
 I X["xray"         S Y="RA"
"RTN","VPRDJ",107,0)
 Q Y
"RTN","VPRDJ",108,0)
 ;
"RTN","VPRDJ",109,0)
ALL() ; -- return string for all types of data
"RTN","VPRDJ",110,0)
 Q "demographics;reactions;problems;vitals;accessions;pharmacy;immunizations;observation;visits;appointments;documents;procedures;consults;flags;factors;skinTests;exams;education;insurance"
"RTN","VPRDJ",111,0)
 ;
"RTN","VPRDJ",112,0)
ERR(X,VAL) ; -- return error message
"RTN","VPRDJ",113,0)
 N MSG  S MSG="Error"
"RTN","VPRDJ",114,0)
 I X=1  S MSG="Patient with dfn '"_$G(VAL)_"' not found"
"RTN","VPRDJ",115,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","VPRDJ",116,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","VPRDJ",117,0)
 I X=4  S MSG="Unable to create new object"
"RTN","VPRDJ",118,0)
 I X=99 S MSG="Unknown request"
"RTN","VPRDJ",119,0)
 Q MSG
"RTN","VPRDJ",120,0)
 ;
"RTN","VPRDJ",121,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","VPRDJ",122,0)
 Q $P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")
"RTN","VPRDJ",123,0)
 ;
"RTN","VPRDJ",124,0)
ADD(ITEM) ; -- add ITEM to @VPR@(VPRI)
"RTN","VPRDJ",125,0)
 N VPRY,ERR
"RTN","VPRDJ",126,0)
 D ENCODE^VPRJSON(ITEM,"VPRY","ERR")
"RTN","VPRDJ",127,0)
 I $D(VPRY) D
"RTN","VPRDJ",128,0)
 . D:VPRI COMMA(VPRI)
"RTN","VPRDJ",129,0)
 . S VPRI=VPRI+1 M @VPR@(VPRI)=VPRY
"RTN","VPRDJ",130,0)
 Q
"RTN","VPRDJ",131,0)
 ;
"RTN","VPRDJ",132,0)
COMMA(I) ; -- add comma between items
"RTN","VPRDJ",133,0)
 N J S J=+$O(@VPR@(I,"A"),-1) ;last sub-node for item I
"RTN","VPRDJ",134,0)
 S J=J+1,@VPR@(I,J)=","
"RTN","VPRDJ",135,0)
 Q
"RTN","VPRDJ",136,0)
 ;
"RTN","VPRDJ",137,0)
TEST(DFN,TYPE,ID,TEXT,IN) ; -- test GET, write results to screen
"RTN","VPRDJ",138,0)
 N OUT,IDX
"RTN","VPRDJ",139,0)
 S U="^"
"RTN","VPRDJ",140,0)
 S:'$D(IN("systemID")) IN("systemID")=$$SYS^VPRUTILS
"RTN","VPRDJ",141,0)
 S IN("patientId")=+$G(DFN)
"RTN","VPRDJ",142,0)
 S IN("domain")=$G(TYPE)
"RTN","VPRDJ",143,0)
 S:$D(ID) IN("id")=ID
"RTN","VPRDJ",144,0)
 S:$G(TEXT) IN("text")=1
"RTN","VPRDJ",145,0)
 D GET(.OUT,.IN)
"RTN","VPRDJ",146,0)
 ;
"RTN","VPRDJ",147,0)
 S IDX=OUT
"RTN","VPRDJ",148,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""VPR"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","VPRDJ",149,0)
 Q
"RTN","VPRDJ",150,0)
TESTGRR ;
"RTN","VPRDJ",151,0)
 S FILTER("documents")="lab"
"RTN","VPRDJ",152,0)
 S FILTER("patientId")=100846
"RTN","VPRDJ",153,0)
 S FILTER("category")="LR"
"RTN","VPRDJ",154,0)
 D GET(.ZZROY,.FILTER)
"RTN","VPRDJ",155,0)
 Q
"RTN","VPRDJ",156,0)
 
"RTN","VPRDJ",157,0)
 
"RTN","VPRDJ0")
0^3^B111930631
"RTN","VPRDJ0",1,0)
VPRDJ0 ;SLC/MKB -- Serve VistA data as JSON cont ;6/25/12  16:11
"RTN","VPRDJ0",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ0",4,0)
 ;
"RTN","VPRDJ0",5,0)
 ; All tags expect DFN, VPRSTART, VPRSTOP, VPRMAX, VPRID, VPRTEXT
"RTN","VPRDJ0",6,0)
 ;
"RTN","VPRDJ0",7,0)
DPT ; -- Patient Registration
"RTN","VPRDJ0",8,0)
 S ERRDOM="patient",ERRMSG=$$ERRMSG("patient demographic")
"RTN","VPRDJ0",9,0)
 D DPT1^VPRDJ01
"RTN","VPRDJ0",10,0)
 Q
"RTN","VPRDJ0",11,0)
 ;
"RTN","VPRDJ0",12,0)
GMPL ; -- Problem List
"RTN","VPRDJ0",13,0)
 S ERRDOM="problem",ERRMSG=$$ERRMSG("problem")
"RTN","VPRDJ0",14,0)
 I $G(VPRID) D GMPL1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",15,0)
 N ID,VPRSTS,VPRPROB,VPRN,X
"RTN","VPRDJ0",16,0)
 S VPRSTS=$G(FILTER("status")) ;default = all problems
"RTN","VPRDJ0",17,0)
 D LIST^GMPLUTL2(.VPRPROB,DFN,VPRSTS)
"RTN","VPRDJ0",18,0)
 S VPRN=0 F  S VPRN=$O(VPRPROB(VPRN)) Q:(VPRN<1)!(VPRI'<VPRMAX)  D
"RTN","VPRDJ0",19,0)
 . S X=$P(VPRPROB(VPRN),U,5) I X,(X<VPRSTART)!(X>VPRSTOP) Q  ;onset date
"RTN","VPRDJ0",20,0)
 . S ID=+VPRPROB(VPRN) D GMPL1^VPRDJ02(ID)
"RTN","VPRDJ0",21,0)
 Q
"RTN","VPRDJ0",22,0)
 ;
"RTN","VPRDJ0",23,0)
GMRA ; -- Allergies/Adverse Reactions
"RTN","VPRDJ0",24,0)
 S ERRDOM="allergies",ERRMSG=$$ERRMSG("allergy")
"RTN","VPRDJ0",25,0)
 N GMRAL,ID D EN1^GMRADPT
"RTN","VPRDJ0",26,0)
 I 'GMRAL Q  ;D NKA^VPRDJ02 Q
"RTN","VPRDJ0",27,0)
 I $G(VPRID) D GMRA1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",28,0)
 S ID=0 F  S ID=+$O(GMRAL(ID)) Q:ID<1  D GMRA1^VPRDJ02(ID) Q:VPRI'<VPRMAX
"RTN","VPRDJ0",29,0)
 Q
"RTN","VPRDJ0",30,0)
 ;
"RTN","VPRDJ0",31,0)
GMRC ; -- Consult/Request Tracking
"RTN","VPRDJ0",32,0)
 N VPRN,VPRX,ID
"RTN","VPRDJ0",33,0)
 S ERRDOM="consults",ERRMSG=$$ERRMSG("consult")
"RTN","VPRDJ0",34,0)
 D OER^GMRCSLM1(DFN,"",VPRSTART,VPRSTOP,"")
"RTN","VPRDJ0",35,0)
 S VPRN=0 F  S VPRN=$O(^TMP("GMRCR",$J,"CS",VPRN)) Q:VPRN<1!(VPRN>VPRMAX)  S VPRX=$G(^(VPRN,0)) Q:$E(VPRX)="<"  D
"RTN","VPRDJ0",36,0)
 . I $G(VPRID),VPRID'=+VPRX Q
"RTN","VPRDJ0",37,0)
 . D GMRC1^VPRDJ03(+VPRX)
"RTN","VPRDJ0",38,0)
 K ^TMP("GMRCR",$J,"CS")
"RTN","VPRDJ0",39,0)
 Q
"RTN","VPRDJ0",40,0)
 ;
"RTN","VPRDJ0",41,0)
GMV ; -- GMR Vital Measurements
"RTN","VPRDJ0",42,0)
 S ERRDOM="vitals",ERRMSG=$$ERRMSG("vitals")
"RTN","VPRDJ0",43,0)
 I $L($G(VPRID)) D GMV1^VPRDJ02(VPRID) Q
"RTN","VPRDJ0",44,0)
 N GMRVSTR,VPRIDT,VPRTYP,ID
"RTN","VPRDJ0",45,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN"
"RTN","VPRDJ0",46,0)
 S GMRVSTR(0)=VPRSTART_U_VPRSTOP_U_VPRMAX_"^1"
"RTN","VPRDJ0",47,0)
 K ^UTILITY($J,"GMRVD") D EN1^GMRVUT0
"RTN","VPRDJ0",48,0)
 S VPRIDT=0 F  S VPRIDT=$O(^UTILITY($J,"GMRVD",VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",49,0)
 . S VPRTYP="" F  S VPRTYP=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP)) Q:VPRTYP=""  D
"RTN","VPRDJ0",50,0)
 .. S ID=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,0)) D GMV1^VPRDJ02(ID)
"RTN","VPRDJ0",51,0)
 Q
"RTN","VPRDJ0",52,0)
 ;
"RTN","VPRDJ0",53,0)
LR ; -- Lab Results
"RTN","VPRDJ0",54,0)
 S ERRDOM="lab",ERRMSG=$$ERRMSG("lab")
"RTN","VPRDJ0",55,0)
 N LRDFN,VPRSUB,VPRIDT,VPRN,BEG,END,SUB,ORD,ID,VPRITM
"RTN","VPRDJ0",56,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRDJ0",57,0)
 S LRDFN=$G(^DPT(DFN,"LR")),VPRSUB=$G(FILTER("category"))
"RTN","VPRDJ0",58,0)
 S BEG=VPRSTART,END=VPRSTOP,ID=$G(VPRID),ORD=""
"RTN","VPRDJ0",59,0)
 I $L(ID) D  I VPRSUB'="CH",$L(ID,";")>2 Q   ;single non-CH result
"RTN","VPRDJ0",60,0)
 . I ID S ORD=ID,ID=$P(ID,";",4,99) Q:ID=""  ;ORPK (order update)
"RTN","VPRDJ0",61,0)
 . S VPRSUB=$P(ID,";"),VPRIDT=+$P(ID,";",2)
"RTN","VPRDJ0",62,0)
 . I VPRSUB="MI",$L(ID,";")>2 D MI1^VPRDJ06 Q
"RTN","VPRDJ0",63,0)
 . I VPRSUB'="CH",$L(ID,";")>2 D AP^VPRDJ06 Q
"RTN","VPRDJ0",64,0)
 . S:VPRIDT (BEG,END)=9999999-VPRIDT         ;reset for LR7OR1
"RTN","VPRDJ0",65,0)
 S SUB=VPRSUB I $L(SUB),"CH^MI"'[SUB S SUB="AP"
"RTN","VPRDJ0",66,0)
 D RR^LR7OR1(DFN,ORD,BEG,END,SUB,,,VPRMAX)
"RTN","VPRDJ0",67,0)
 I $L(ID,";")>2 S VPRN=+$P(ID,";",3) D CH1^VPRDJ06 Q  ;return result
"RTN","VPRDJ0",68,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDJ0",69,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",70,0)
 .. I VPRSUB="MI" D MI^VPRDJ06 Q
"RTN","VPRDJ0",71,0)
 .. I VPRSUB'="CH" S ID=VPRSUB_";"_VPRIDT D AP^VPRDJ06 Q
"RTN","VPRDJ0",72,0)
 .. S VPRN=0 F  S VPRN=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRN)) Q:VPRN<1  D
"RTN","VPRDJ0",73,0)
 ... S ID=VPRSUB_";"_VPRIDT_";"_VPRN D CH1^VPRDJ06
"RTN","VPRDJ0",74,0)
 Q
"RTN","VPRDJ0",75,0)
 ;
"RTN","VPRDJ0",76,0)
MC ; -- Clinical Procedures
"RTN","VPRDJ0",77,0)
 S ERRDOM="clinical procedures",ERRMSG=$$ERRMSG("clinical procedures")
"RTN","VPRDJ0",78,0)
 N VPRN,VPRX,BEG,END,ID K ^TMP("MDHSP",$J)
"RTN","VPRDJ0",79,0)
 S BEG=VPRSTART,END=VPRSTOP
"RTN","VPRDJ0",80,0)
 I $G(VPRID) D                         ;reset dates to get just VPRID
"RTN","VPRDJ0",81,0)
 . N VPRMC,IEN,FILE,X
"RTN","VPRDJ0",82,0)
 . S IEN=+VPRID,FILE=+$P(VPRID,"(",2) Q:FILE=702
"RTN","VPRDJ0",83,0)
 . D MEDLKUP^MCARUTL3(.VPRMC,FILE,IEN)
"RTN","VPRDJ0",84,0)
 . S X=$P(VPRMC,U,6) S:X (BEG,END)=X
"RTN","VPRDJ0",85,0)
 S RES="" D EN1^MDPS1(RES,DFN,BEG,END,VPRMAX,"",0)
"RTN","VPRDJ0",86,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDJ0",87,0)
 . I $G(VPRID),VPRID'=+$P(VPRX,U,2) Q  ;update one procedure
"RTN","VPRDJ0",88,0)
 . D MC1^VPRDJ03(VPRID)
"RTN","VPRDJ0",89,0)
 K ^TMP("MDHSP",$J)
"RTN","VPRDJ0",90,0)
 Q
"RTN","VPRDJ0",91,0)
 ;
"RTN","VPRDJ0",92,0)
MDC ; -- Clinical Observations (CLiO)
"RTN","VPRDJ0",93,0)
 N VPRCLIO,VPRN,ID,X
"RTN","VPRDJ0",94,0)
 S ERRDOM="clinical observations",ERRMSG=$$ERRMSG("CLiO")
"RTN","VPRDJ0",95,0)
 I $L($G(VPRID)) D MDC1^VPRDJ03(VPRID) Q
"RTN","VPRDJ0",96,0)
 D QRYPT^VPRDMDC("VPRCLIO",DFN,VPRSTART,VPRSTOP) ;all [verified] observations
"RTN","VPRDJ0",97,0)
 S VPRN=0 F  S VPRN=$O(VPRCLIO(VPRN)) Q:(VPRN<1)!(VPRI'<VPRMAX)  D
"RTN","VPRDJ0",98,0)
 . S ID=$G(VPRCLIO(VPRN)) ;GUID
"RTN","VPRDJ0",99,0)
 . D MDC1^VPRDJ03(ID)
"RTN","VPRDJ0",100,0)
 Q
"RTN","VPRDJ0",101,0)
 ;
"RTN","VPRDJ0",102,0)
OR ; -- Order Entry
"RTN","VPRDJ0",103,0)
 N ORLIST,VPRN,DAD,ID
"RTN","VPRDJ0",104,0)
 S ERRDOM="orders",ERRMSG=$$ERRMSG("orders")
"RTN","VPRDJ0",105,0)
 I $G(VPRID) S ORLIST=$H D OR1^VPRDJ03(VPRID) G ORQ
"RTN","VPRDJ0",106,0)
 D EN^ORQ1(DFN_";DPT(",,6,,VPRSTART,VPRSTOP,,,,1)
"RTN","VPRDJ0",107,0)
 S VPRN=0 F  S VPRN=$O(^TMP("ORR",$J,ORLIST,VPRN)) Q:VPRN<1  S ID=$G(^(VPRN)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",108,0)
 . Q:$D(^TMP("ORGOTIT",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID    ;actions
"RTN","VPRDJ0",109,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","VPRDJ0",110,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRDJ0",111,0)
 . S DAD=+$P(X3,U,9) I DAD D:'$D(^TMP("ORGOTIT",$J,DAD)) OR1^VPRDJ03(DAD) Q
"RTN","VPRDJ0",112,0)
 . D OR1^VPRDJ03(ID)
"RTN","VPRDJ0",113,0)
ORQ ; end
"RTN","VPRDJ0",114,0)
 K ^TMP("ORR",$J),^TMP("ORGOTIT",$J)
"RTN","VPRDJ0",115,0)
 Q
"RTN","VPRDJ0",116,0)
 ;
"RTN","VPRDJ0",117,0)
PS ; -- Pharmacy
"RTN","VPRDJ0",118,0)
 S ERRDOM="pharmacy",ERRMSG=$$ERRMSG("pharmacy")
"RTN","VPRDJ0",119,0)
 N ORDIALOG I $G(VPRID),$D(^OR(100,+VPRID)) D PS1^VPRDJ05(VPRID) Q       ;get 1 order
"RTN","VPRDJ0",120,0)
 N TYPE,ORDG,ORVP,ORLIST,VPRN,ORLIST,X3,X4,DAD,ID
"RTN","VPRDJ0",121,0)
 S TYPE=$G(FILTER("vaType")) S:$L(TYPE) TYPE=$S(TYPE="N":"NV",TYPE="V":"IV",1:TYPE)_" "
"RTN","VPRDJ0",122,0)
 S ORDG=+$O(^ORD(100.98,"B",TYPE_"RX",0)),ORVP=DFN_";DPT("
"RTN","VPRDJ0",123,0)
 D EN^ORQ1(ORVP,ORDG,6,,VPRSTART,VPRSTOP)
"RTN","VPRDJ0",124,0)
 K ^TMP("VPROR",$J) S VPRN=0
"RTN","VPRDJ0",125,0)
 F  S VPRN=$O(^TMP("ORR",$J,ORLIST,VPRN)) Q:VPRN<1  S ID=$G(^(VPRN)) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",126,0)
 . Q:$D(^TMP("VPROR",$J,+ID))  Q:$P(ID,";",2)>1  S ID=+ID
"RTN","VPRDJ0",127,0)
 . S X3=$G(^OR(100,ID,3)),X4=$G(^(4))
"RTN","VPRDJ0",128,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRDJ0",129,0)
 . S DAD=$P(X3,U,9) I DAD Q:$D(^TMP("VPROR",$J,DAD))  S ID=DAD
"RTN","VPRDJ0",130,0)
 . D PS1^VPRDJ05(ID) S ^TMP("VPROR",$J,ID)=""
"RTN","VPRDJ0",131,0)
 K ^TMP("VPROR",$J),^TMP("ORR",$J),^TMP($J,"PSOI")
"RTN","VPRDJ0",132,0)
 Q
"RTN","VPRDJ0",133,0)
 ;
"RTN","VPRDJ0",134,0)
PTF ; -- Patient Treatment File
"RTN","VPRDJ0",135,0)
 S ERRDOM="ptf",ERRMSG=$$ERRMSG("PTF")
"RTN","VPRDJ0",136,0)
 N VPRIDT,ID,P,TYPE
"RTN","VPRDJ0",137,0)
 I $G(VPRID),VPRID'=+VPRID D PTFA^VPRDJ04(VPRID) Q
"RTN","VPRDJ0",138,0)
 I $G(VPRID) D  Q:'$D(^TMP("VPRPX",$J))  ;update via DGPM = ien only
"RTN","VPRDJ0",139,0)
 . N X,Y,I S VPRIDT=9999999-DT
"RTN","VPRDJ0",140,0)
 . D RPC^DGPTFAPI(.Y,VPRID)
"RTN","VPRDJ0",141,0)
 . S X=$P($G(Y(1)),U,3) I $L(X) S ^TMP("VPRPX",$J,VPRIDT,VPRID_";70;DXLS")=X_U_DT
"RTN","VPRDJ0",142,0)
 . F I=1:1:9 S X=$P($G(Y(2)),U,I) I $L(X) S ^TMP("VPRPX",$J,VPRIDT,VPRID_";70;D SD"_I)=X_U_DT
"RTN","VPRDJ0",143,0)
 D:'$G(VPRID) PTF^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRDJ0",144,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",145,0)
 . S ID="" F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID=""  D PTF1^VPRDJ04 Q:VPRI'<VPRMAX
"RTN","VPRDJ0",146,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRDJ0",147,0)
 Q
"RTN","VPRDJ0",148,0)
 ;
"RTN","VPRDJ0",149,0)
PXAM D PX(9000010.13) Q   ; -- PCE Exams
"RTN","VPRDJ0",150,0)
PXCP D PX(9000010.18) Q   ; -- PCE CPT
"RTN","VPRDJ0",151,0)
PXED D PX(9000010.16) Q   ; -- PCE Patient Education
"RTN","VPRDJ0",152,0)
PXHF D PX(9000010.23) Q   ; -- PCE Health Factors
"RTN","VPRDJ0",153,0)
PXIM D PX(9000010.11) Q   ; -- PCE Immunizations
"RTN","VPRDJ0",154,0)
PXPV D PX(9000010.07) Q   ; -- PCE Purpose of Visit (POV)
"RTN","VPRDJ0",155,0)
PXSK D PX(9000010.12) Q   ; -- PCE Skin Tests
"RTN","VPRDJ0",156,0)
PX(FNUM) ; -- PCE item(s)
"RTN","VPRDJ0",157,0)
 S ERRDOM="pce",ERRMSG=$$ERRMSG("PCE")
"RTN","VPRDJ0",158,0)
 I $G(VPRID) D PXA^VPRDJ09(VPRID) Q
"RTN","VPRDJ0",159,0)
 N VPRIDT,ID D SORT^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRDJ0",160,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",161,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  D PX1^VPRDJ09 Q:VPRI'<VPRMAX
"RTN","VPRDJ0",162,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRDJ0",163,0)
 Q
"RTN","VPRDJ0",164,0)
 ;
"RTN","VPRDJ0",165,0)
RA ; -- Radiology/Nuclear Medicine
"RTN","VPRDJ0",166,0)
 K ^TMP($J,"RAE1")
"RTN","VPRDJ0",167,0)
 S ERRDOM="radiology",ERRMSG=$$ERRMSG("radiology")
"RTN","VPRDJ0",168,0)
 D EN1^RAO7PC1(DFN,VPRSTART,VPRSTOP,VPRMAX_"P")
"RTN","VPRDJ0",169,0)
 I $G(VPRID) D RA1^VPRDJ07(VPRID) G RAQ
"RTN","VPRDJ0",170,0)
 N ID S ID=""
"RTN","VPRDJ0",171,0)
 F  S ID=$O(^TMP($J,"RAE1",DFN,ID)) Q:ID=""  D RA1^VPRDJ07(ID)  Q:VPRI'<+VPRMAX
"RTN","VPRDJ0",172,0)
RAQ ; end
"RTN","VPRDJ0",173,0)
 K ^TMP($J,"RAE1")
"RTN","VPRDJ0",174,0)
 Q
"RTN","VPRDJ0",175,0)
 ;
"RTN","VPRDJ0",176,0)
SDAM ; -- Scheduling/Appointment Mgt
"RTN","VPRDJ0",177,0)
 N VPRX,VPRNUM,VPRDT,X,VPRA,ID
"RTN","VPRDJ0",178,0)
 S ERRDOM="appointment",ERRMSG=$$ERRMSG("appointment")
"RTN","VPRDJ0",179,0)
 S VPRX(1)=VPRSTART_";"_VPRSTOP,VPRX(4)=DFN,ID=$G(VPRID)
"RTN","VPRDJ0",180,0)
 S VPRX("FLDS")="1;2;3;6;9;10;11;13",VPRX("SORT")="P"
"RTN","VPRDJ0",181,0)
 I $L(ID) G:$E(ID)="H" DGS D  Q
"RTN","VPRDJ0",182,0)
 . S VPRDT=$P(ID,";",2),VPRX(1)=$P(ID,";",2)_";"_$P(ID,";",2)
"RTN","VPRDJ0",183,0)
 . S VPRX(2)=$P(ID,";",3)
"RTN","VPRDJ0",184,0)
 . S VPRNUM=$$SDAPI^SDAMA301(.VPRX)
"RTN","VPRDJ0",185,0)
 . D:VPRNUM>0 SDAM1^VPRDJ04
"RTN","VPRDJ0",186,0)
 . K ^TMP($J,"SDAMA301",DFN)
"RTN","VPRDJ0",187,0)
 ; appointments
"RTN","VPRDJ0",188,0)
 S VPRX(3)="R;I;NS;NSR;NT" ;no cancelled appt's
"RTN","VPRDJ0",189,0)
 S VPRNUM=$$SDAPI^SDAMA301(.VPRX),VPRDT=0
"RTN","VPRDJ0",190,0)
 F  S VPRDT=$O(^TMP($J,"SDAMA301",DFN,VPRDT)) Q:VPRDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",191,0)
 . S X=$P($G(^TMP($J,"SDAMA301",DFN,VPRDT)),U,3)
"RTN","VPRDJ0",192,0)
 . ;I VPRDT<DT,$P(X,";")'["NS" Q   ;no prior kept appt's
"RTN","VPRDJ0",193,0)
 . D SDAM1^VPRDJ04
"RTN","VPRDJ0",194,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","VPRDJ0",195,0)
 ;
"RTN","VPRDJ0",196,0)
DGS ; scheduled admissions
"RTN","VPRDJ0",197,0)
 S ERRDOM="appointment",ERRMSG=$$ERRMSG("scheduled admission")
"RTN","VPRDJ0",198,0)
 S VPRA=0 F  S VPRA=$O(^DGS(41.1,"B",DFN,VPRA)) Q:VPRA<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",199,0)
 . S VPRX=$G(^DGS(41.1,VPRA,0))
"RTN","VPRDJ0",200,0)
 . I $L($G(ID)),+$P(ID,";",2)=+$P(VPRX,U,2) D DGS1^VPRDJ04(VPRA) Q
"RTN","VPRDJ0",201,0)
 . Q:$P(VPRX,U,13)  Q:$P(VPRX,U,17)  ;cancelled or admitted
"RTN","VPRDJ0",202,0)
 . S X=$P(VPRX,U,2) Q:X<VPRSTART!(X>VPRSTOP)  ;out of date range
"RTN","VPRDJ0",203,0)
 . D DGS1^VPRDJ04(VPRA)
"RTN","VPRDJ0",204,0)
 Q
"RTN","VPRDJ0",205,0)
 ;
"RTN","VPRDJ0",206,0)
SR ; -- Surgery
"RTN","VPRDJ0",207,0)
 S ERRDOM="surgery",ERRMSG=$$ERRMSG("surgery")
"RTN","VPRDJ0",208,0)
 I $G(VPRID) D SR1^VPRDJ07(VPRID) Q
"RTN","VPRDJ0",209,0)
 Q:'$L($T(LIST^SROESTV))
"RTN","VPRDJ0",210,0)
 N SHOWADD S SHOWADD=1 ;to omit leading '+' with note titles
"RTN","VPRDJ0",211,0)
 N VPRN,VPRY,ID D LIST^SROESTV(.VPRY,DFN,VPRSTART,VPRSTOP,VPRMAX,1)
"RTN","VPRDJ0",212,0)
 S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  D
"RTN","VPRDJ0",213,0)
 . S ID=+$G(@VPRY@(VPRN)) D:ID SR1^VPRDJ07(ID)
"RTN","VPRDJ0",214,0)
 K @VPRY
"RTN","VPRDJ0",215,0)
 Q
"RTN","VPRDJ0",216,0)
 ;
"RTN","VPRDJ0",217,0)
TIU ; -- Text Integration Utilities
"RTN","VPRDJ0",218,0)
 N VPRC,CLS,VPRS,CTXT,VPRY,VPRN,VPRX,ID
"RTN","VPRDJ0",219,0)
 S ERRDOM="document",ERRMSG=$$ERRMSG("document")
"RTN","VPRDJ0",220,0)
 I $L($G(VPRID)) D TIU1^VPRDJ08(VPRID) Q
"RTN","VPRDJ0",221,0)
 N CLASS,SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS
"RTN","VPRDJ0",222,0)
 D SETUP^VPRDTIUX ;define search criteria
"RTN","VPRDJ0",223,0)
 F VPRC=1:1:$L(CLASS,U) S CLS=$P(CLASS,U,VPRC) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",224,0)
 . I CLS="CP" D CP^VPRDJ08(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",225,0)
 . I CLS="RA" D RA^VPRDJ08(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",226,0)
 . I CLS="LR" D LR^VPRDJ08(DFN,VPRSTART,VPRSTOP,VPRMAX) Q
"RTN","VPRDJ0",227,0)
 . ; TIU document classes, by sig status
"RTN","VPRDJ0",228,0)
 . F VPRS=1:1:$L(STATUS,U) S CTXT=$P(STATUS,U,VPRS) D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",229,0)
 .. D CONTEXT^TIUSRVLO(.VPRY,CLS,CTXT,DFN,VPRSTART,VPRSTOP,,VPRMAX,,1)
"RTN","VPRDJ0",230,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",231,0)
 ... S VPRX=$G(@VPRY@(VPRN)) Q:'$$MATCH^VPRDTIUX(VPRX,CTXT)
"RTN","VPRDJ0",232,0)
 ... Q:$D(^TMP("VPRD",$J,+VPRX))  ;already included
"RTN","VPRDJ0",233,0)
 ... D EN1^VPRDJ08(VPRX,CLS)
"RTN","VPRDJ0",234,0)
 .. K @VPRY
"RTN","VPRDJ0",235,0)
 Q
"RTN","VPRDJ0",236,0)
 ;
"RTN","VPRDJ0",237,0)
VSIT ; -- Visits
"RTN","VPRDJ0",238,0)
 S ERRDOM="visit",ERRMSG=$$ERRMSG("visit")
"RTN","VPRDJ0",239,0)
 I $G(VPRID) D VSIT1^VPRDJ04(VPRID) Q
"RTN","VPRDJ0",240,0)
 N VPRDT,VPRLOC,END,ID
"RTN","VPRDJ0",241,0)
 S END=VPRSTOP I VPRSTOP,VPRSTOP'["." S END=VPRSTOP_".24" ;assume end of day
"RTN","VPRDJ0",242,0)
 S VPRDT=END F  S VPRDT=$O(^AUPNVSIT("AET",DFN,VPRDT),-1)  Q:VPRDT<VPRSTART  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",243,0)
 . S VPRLOC=0 F  S VPRLOC=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC)) Q:VPRLOC<1  D
"RTN","VPRDJ0",244,0)
 .. S ID=0 F  S ID=$O(^AUPNVSIT("AET",DFN,VPRDT,VPRLOC,"P",ID)) Q:ID<1  D VSIT1^VPRDJ04(ID)
"RTN","VPRDJ0",245,0)
 Q
"RTN","VPRDJ0",246,0)
 ;
"RTN","VPRDJ0",247,0)
VPR ; -- VPR [Patient] Objects
"RTN","VPRDJ0",248,0)
 S ERRDOM="vpr",ERRMSG=$G(TYPE) ;from VPRDJ
"RTN","VPRDJ0",249,0)
 N ID I $L($G(VPRID)) D  Q
"RTN","VPRDJ0",250,0)
 . N FNUM
"RTN","VPRDJ0",251,0)
 . F FNUM=560.1,560.11 S ID=+$O(^VPR(FNUM,"B",VPRID,0)) I ID D VPR1^VPRDJ02(FNUM,ID) Q
"RTN","VPRDJ0",252,0)
 S ID=0 F  S ID=$O(^VPR(560.1,"C",DFN,TYPE,ID)) Q:ID<1  D VPR1^VPRDJ02(560.1,ID)
"RTN","VPRDJ0",253,0)
 S ID=0 F  S ID=$O(^VPR(560.11,"C",TYPE,ID)) Q:ID<1  D VPR1^VPRDJ02(560.11,ID)
"RTN","VPRDJ0",254,0)
 Q
"RTN","VPRDJ0",255,0)
 ;
"RTN","VPRDJ0",256,0)
YT ; -- Mental Health Administrations
"RTN","VPRDJ0",257,0)
 S ERRDOM="mental health",ERRMSG=$$ERRMSG("mental health")
"RTN","VPRDJ0",258,0)
 I $G(VPRID) D YT1^VPRDJ09(VPRID) Q
"RTN","VPRDJ0",259,0)
 N VPRIDT,ID,FNUM
"RTN","VPRDJ0",260,0)
 S FNUM=601.84 D SORT^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRDJ0",261,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRI'<VPRMAX
"RTN","VPRDJ0",262,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  D YT1^VPRDJ09(ID) Q:VPRI'<VPRMAX
"RTN","VPRDJ0",263,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRDJ0",264,0)
 Q
"RTN","VPRDJ0",265,0)
 ;
"RTN","VPRDJ0",266,0)
ERRMSG(X) ; -- return error message, if needed
"RTN","VPRDJ0",267,0)
 Q "A MUMPS error occurred while extracting "_X_" data."
"RTN","VPRDJ0",268,0)
 ;
"RTN","VPRDJ0",269,0)
ERRQ ; -- Quit for error handling
"RTN","VPRDJ0",270,0)
 Q
"RTN","VPRDJ01")
0^4^B49607688
"RTN","VPRDJ01",1,0)
VPRDJ01 ;SLC/MKB -- Patient demographics ;8/11/11  15:29
"RTN","VPRDJ01",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ01",4,0)
 ;
"RTN","VPRDJ01",5,0)
 ; All tags expect DFN, VPRID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ01",6,0)
 ;
"RTN","VPRDJ01",7,0)
 ;
"RTN","VPRDJ01",8,0)
DPT1 ; -- Demographics [VPRSTART,VPRSTOP,VPRMAX,VPRID not currently used here]
"RTN","VPRDJ01",9,0)
 S ERRARRY(0)=DFN
"RTN","VPRDJ01",10,0)
 N PAT,SYS S SYS=$$SITE^VASITE
"RTN","VPRDJ01",11,0)
 D DEM,SVC,PRF,ATC,SUPP,ALIAS,FAC
"RTN","VPRDJ01",12,0)
 I $D(PAT)>9 D ADD^VPRDJ("PAT")
"RTN","VPRDJ01",13,0)
 Q
"RTN","VPRDJ01",14,0)
 ;
"RTN","VPRDJ01",15,0)
DEM ;-demographic data
"RTN","VPRDJ01",16,0)
 N VADM,VA,VAERR,X
"RTN","VPRDJ01",17,0)
 S X=+$$GETICN^MPIF001(DFN) S:X>1 PAT("icn")=X
"RTN","VPRDJ01",18,0)
 D DEM^VADPT S X=VADM(1),PAT("fullName")=X
"RTN","VPRDJ01",19,0)
 S PAT("familyName")=$P(X,","),PAT("givenNames")=$P(X,",",2,99)
"RTN","VPRDJ01",20,0)
 S PAT("ssn")=$P(VADM(2),U),PAT("localId")=DFN
"RTN","VPRDJ01",21,0)
 S PAT("uid")=$$SETUID^VPRUTILS("pat",DFN,DFN,"")
"RTN","VPRDJ01",22,0)
 S:$D(VA("BID")) PAT("briefId")=$E(X)_VA("BID")
"RTN","VPRDJ01",23,0)
 S X=+$P($P(VADM(3),U),"."),PAT("dateOfBirth")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ01",24,0)
 S X=$P(VADM(5),U),PAT("genderCode")="urn:va:pat-gender:"_X,PAT("genderName")=$$NAME(X,"gender")
"RTN","VPRDJ01",25,0)
 S X=+$P($P(VADM(6),U),".") S:X PAT("died")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ01",26,0)
 S X=$$GET1^DIQ(38.1,DFN_",",2,"I") S:$L(X) PAT("sensitive")=$$BOOL(X)
"RTN","VPRDJ01",27,0)
 S X=+VADM(9) S:X PAT("religionCode")="urn:va:pat-religion:"_X,PAT("religionName")=$$NAME(X,"religion")
"RTN","VPRDJ01",28,0)
 S X=$P(VADM(10),U,2) I $L(X) D  ;PAT("maritalStatus")=$E(X)
"RTN","VPRDJ01",29,0)
 . S X=$E(X),X=$S(X="S":"L",X="N":"S",1:X)
"RTN","VPRDJ01",30,0)
 . S PAT("maritalStatuses",1,"code")="urn:va:pat-maritalStatus:"_X
"RTN","VPRDJ01",31,0)
 . S PAT("maritalStatuses",1,"name")=$$NAME(X,"maritalStatus")
"RTN","VPRDJ01",32,0)
 I VADM(11) D
"RTN","VPRDJ01",33,0)
 . N I S I=0
"RTN","VPRDJ01",34,0)
 . F  S I=$O(VADM(11,I)) Q:I<1  S X=+VADM(11,I),PAT("ethnicities",X,"ethnicity")=$$GET1^DIQ(2.06,X_","_DFN_",",".01:3")
"RTN","VPRDJ01",35,0)
 I VADM(12) D
"RTN","VPRDJ01",36,0)
 . N I S I=0
"RTN","VPRDJ01",37,0)
 . F  S I=$O(VADM(12,I)) Q:I<1  S X=+VADM(12,I),PAT("races",X,"race")=$$GET1^DIQ(2.02,X_","_DFN_",",".01:3")
"RTN","VPRDJ01",38,0)
 Q
"RTN","VPRDJ01",39,0)
SVC ;-service data
"RTN","VPRDJ01",40,0)
 N VAEL,VASV,VAERR,X,Y,I,AO,IR,PGF,HNC,MST,CV
"RTN","VPRDJ01",41,0)
 D 7^VADPT
"RTN","VPRDJ01",42,0)
 ; PAT("veteran")=VAEL(4)
"RTN","VPRDJ01",43,0)
 S PAT("veteran","serviceConnected")=$$BOOL(+VAEL(3))
"RTN","VPRDJ01",44,0)
 S:VAEL(3) PAT("veteran","serviceConnectionPercent")=+$P(VAEL(3),U,2)
"RTN","VPRDJ01",45,0)
 S X=+$G(^DPT(DFN,"LR")) S:X PAT("veteran","lrdfn")=X
"RTN","VPRDJ01",46,0)
 ;
"RTN","VPRDJ01",47,0)
 ; exposures
"RTN","VPRDJ01",48,0)
 S AO=VASV(2),IR=VASV(3)
"RTN","VPRDJ01",49,0)
 S PGF=VASV(11)!VASV(12)!VASV(13) ;OIF/OEF
"RTN","VPRDJ01",50,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT")))
"RTN","VPRDJ01",51,0)
 S HNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","VPRDJ01",52,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),MST=$S(X="Y":1,X="N":0,1:"")
"RTN","VPRDJ01",53,0)
 S X=$$CVEDT^DGCV(DFN),CV=$S(+X<0:"",+X=0:0,$P(X,U,3):1,1:0)
"RTN","VPRDJ01",54,0)
 S X=AO_U_IR_U_PGF_U_HNC_U_MST_U_CV
"RTN","VPRDJ01",55,0)
 F P=1:1:6 S I=$P(X,U,P),$P(X,U,P)=$S(I:"Yes",I=0:"No",1:"Unknown")
"RTN","VPRDJ01",56,0)
 S NM="agent-orange^ionizing-radiation^sw-asia^head-neck-cancer^mst^combat-vet"
"RTN","VPRDJ01",57,0)
 F P=1:1:6 S PAT("exposures",P,"uid")="urn:va:"_$P(NM,U,P)_":"_$E($P(X,U,P)),PAT("exposures",P,"name")=$P(X,U,P)
"RTN","VPRDJ01",58,0)
 ;
"RTN","VPRDJ01",59,0)
 ; rated disabilities [DGRPDB]
"RTN","VPRDJ01",60,0)
 N VPRDIS,DIS,NM,DX
"RTN","VPRDJ01",61,0)
 D RDIS^DGRPDB(DFN,.VPRDIS)
"RTN","VPRDJ01",62,0)
 S I=0 F  S I=$O(VPRDIS(I)) Q:I<1  D
"RTN","VPRDJ01",63,0)
 . S DIS=VPRDIS(I)
"RTN","VPRDJ01",64,0)
 . S NM=$$GET1^DIQ(31,+DIS_",",.01),DX=$$GET1^DIQ(31,+DIS_",",2)
"RTN","VPRDJ01",65,0)
 . S PAT("disability",+DX)=NM_U_$P(DIS,U,2,3) ;name^%^sc
"RTN","VPRDJ01",66,0)
 Q
"RTN","VPRDJ01",67,0)
PRF ;-patient record flags
"RTN","VPRDJ01",68,0)
 N VPRPF,I,NAME,TEXT
"RTN","VPRDJ01",69,0)
 Q:'$$GETACT^DGPFAPI(DFN,"VPRPF")
"RTN","VPRDJ01",70,0)
 S I=0 F  S I=$O(VPRPF(I)) Q:I<1  D
"RTN","VPRDJ01",71,0)
 . S NAME=$P(VPRPF(I,"FLAG"),U,2)
"RTN","VPRDJ01",72,0)
 . M TEXT=VPRPF(I,"NARR")
"RTN","VPRDJ01",73,0)
 . S PAT("flags",I,"name")=NAME
"RTN","VPRDJ01",74,0)
 . S PAT("flags",I,"text")=$$STRING^VPRD(.TEXT)
"RTN","VPRDJ01",75,0)
 Q
"RTN","VPRDJ01",76,0)
ATC ;-address & telecom
"RTN","VPRDJ01",77,0)
 N VAPA,I,X,P,NM
"RTN","VPRDJ01",78,0)
 S VAPA("P")="" D ADD^VADPT ;permanent address
"RTN","VPRDJ01",79,0)
 S:$L(VAPA(1)) PAT("addresses",1,"streetLine1")=VAPA(1)
"RTN","VPRDJ01",80,0)
 S X=VAPA(2) I $L(X),$L(VAPA(3)) S X=X_" "_VAPA(3)
"RTN","VPRDJ01",81,0)
 S:$L(X) PAT("addresses",1,"streetLine2")=X
"RTN","VPRDJ01",82,0)
 S:$L(VAPA(4)) PAT("addresses",1,"city")=VAPA(4)
"RTN","VPRDJ01",83,0)
 S X=$P(VAPA(5),U,2) S:$L(X) PAT("addresses",1,"stateProvince")=X
"RTN","VPRDJ01",84,0)
 S X=$P(VAPA(11),U,2) S:$L(X) PAT("addresses",1,"postalCode")=X
"RTN","VPRDJ01",85,0)
 ; 
"RTN","VPRDJ01",86,0)
 ; X=home^cell^work phones
"RTN","VPRDJ01",87,0)
 S X=$$FORMAT(VAPA(8))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.134))_U_$$FORMAT($$GET1^DIQ(2,DFN_",",.132))
"RTN","VPRDJ01",88,0)
 S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","VPRDJ01",89,0)
 . S I=$P(NM,U,P),PAT("telecoms",P,"usageCode")=I
"RTN","VPRDJ01",90,0)
 . S PAT("telecoms",P,"usageName")=$S(I="WP":"work place",I="MC":"mobile contact",1:"home address")
"RTN","VPRDJ01",91,0)
 . S PAT("telecoms",P,"telecom")=$P(X,U,P)
"RTN","VPRDJ01",92,0)
 Q
"RTN","VPRDJ01",93,0)
SUPP ;-support contacts
"RTN","VPRDJ01",94,0)
 N VAOA,A,I,X,TYPE,S
"RTN","VPRDJ01",95,0)
 S S=0 F A="",1 K VAOA D
"RTN","VPRDJ01",96,0)
 . S:A VAOA("A")=A D OAD^VADPT Q:'$L($G(VAOA(9)))
"RTN","VPRDJ01",97,0)
 . S S=S+1,TYPE=$S(A=1:"ECON^Emergency Contact",1:"NOK^Next of Kin")
"RTN","VPRDJ01",98,0)
 . S PAT("supports",S,"contactTypeCode")="urn:va:pat-contact:"_$P(TYPE,U)
"RTN","VPRDJ01",99,0)
 . S PAT("supports",S,"contactTypeName")=$P(TYPE,U,2)
"RTN","VPRDJ01",100,0)
 . S:$L(VAOA(9)) PAT("supports",S,"name")=VAOA(9)
"RTN","VPRDJ01",101,0)
 . S:$L(VAOA(10)) PAT("supports",S,"relationship")=VAOA(10)
"RTN","VPRDJ01",102,0)
 . S:$L(VAOA(1)) PAT("supports",S,"addresses",1,"streetLine1")=VAOA(1)
"RTN","VPRDJ01",103,0)
 . S X=VAOA(2) I $L(X),$L(VAOA(3)) S X=X_" "_VAOA(3)
"RTN","VPRDJ01",104,0)
 . S:$L(X) PAT("supports",S,"addresses",1,"streetLine2")=X
"RTN","VPRDJ01",105,0)
 . S:$L(VAOA(4)) PAT("supports",S,"addresses",1,"city")=VAOA(4)
"RTN","VPRDJ01",106,0)
 . S X=$P(VAOA(5),U,2) S:$L(X) PAT("supports",S,"addresses",1,"stateProvince")=X
"RTN","VPRDJ01",107,0)
 . S X=$P(VAOA(11),U,2) S:$L(X) PAT("supports",S,"addresses",1,"postalCode")=X
"RTN","VPRDJ01",108,0)
 . S I=$S(A=1:.33011,1:.21011),X=$$FORMAT(VAOA(8))_U_U_$$FORMAT($$GET1^DIQ(2,DFN_",",I))
"RTN","VPRDJ01",109,0)
 . ; X=home^cell^work phones
"RTN","VPRDJ01",110,0)
 . S NM="H^MC^WP" F P=1:1:3 I $L($P(X,U,P)) D
"RTN","VPRDJ01",111,0)
 .. S I=$P(NM,U,P),PAT("supports",S,"telecomList",P,"usageCode")=I
"RTN","VPRDJ01",112,0)
 .. S PAT("supports",S,"telecomList",P,"usageName")=$S(I="WP":"work place",I="MC":"mobile contact",1:"home address")
"RTN","VPRDJ01",113,0)
 .. S PAT("supports",S,"telecomList",P,"telecom")=$P(X,U,P)
"RTN","VPRDJ01",114,0)
 Q
"RTN","VPRDJ01",115,0)
ALIAS ;-other names used
"RTN","VPRDJ01",116,0)
 N I,X
"RTN","VPRDJ01",117,0)
 S I=0 F  S I=$O(^DPT(DFN,.01,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","VPRDJ01",118,0)
 . S PAT("aliases",I,"fullName")=$P(X,U)
"RTN","VPRDJ01",119,0)
 Q
"RTN","VPRDJ01",120,0)
FAC ;-treating facilities [see FACLIST^ORWCIRN]
"RTN","VPRDJ01",121,0)
 N IFN S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDJ01",122,0)
 N VPRY,HOME,LAST,I,X,IEN,VASITE
"RTN","VPRDJ01",123,0)
 S X=$$ALL^VASITE ;VASITE(stn#)=stn# for all local
"RTN","VPRDJ01",124,0)
 I $L($T(TFL^VAFCTFU1)) D TFL^VAFCTFU1(.VPRY,DFN)
"RTN","VPRDJ01",125,0)
 S HOME=+$P($G(^DPT(DFN,"MPI")),U,3) ;home facility
"RTN","VPRDJ01",126,0)
 I $P($G(VPRY(1)),U)<0 D  ;not setup
"RTN","VPRDJ01",127,0)
 . S X=$O(^AUPNVSIT("AA",DFN,0)),LAST=$S(X:9999999-$P(X,"."),1:"")
"RTN","VPRDJ01",128,0)
 . S X=$$SITE^VASITE
"RTN","VPRDJ01",129,0)
 . S VPRY(1)=$P(X,U,3)_U_$P(X,U,2)_U_LAST_U_$$GET1^DIQ(4,+X_",",60)
"RTN","VPRDJ01",130,0)
 S I=0 F  S I=$O(VPRY(I)) Q:I<1  D
"RTN","VPRDJ01",131,0)
 . S X=VPRY(I) Q:$P(X,U)=""  ;unknown
"RTN","VPRDJ01",132,0)
 . S IEN=+$$IEN^XUAF4($P(X,U))
"RTN","VPRDJ01",133,0)
 . I +X=776!(+X=200) S $P(X,U,2)="DEPT. OF DEFENSE"
"RTN","VPRDJ01",134,0)
 . S PAT("facilities",I,"code")=$P(X,U)    ;stn#
"RTN","VPRDJ01",135,0)
 . S PAT("facilities",I,"name")=$P(X,U,2)  ;name
"RTN","VPRDJ01",136,0)
 . S:IEN=HOME PAT("facilities",I,"homeSite")="true"
"RTN","VPRDJ01",137,0)
 . S:$L($P(X,U,3)) PAT("facilities",I,"latestDate")=$$JSONDT^VPRUTILS($P($P(X,U,3),"."))
"RTN","VPRDJ01",138,0)
 . I $D(VASITE(+X)) D
"RTN","VPRDJ01",139,0)
 .. S PAT("facilities",I,"localPatientId")=DFN
"RTN","VPRDJ01",140,0)
 .. S PAT("facilities",I,"systemId")=$$SYS
"RTN","VPRDJ01",141,0)
 Q
"RTN","VPRDJ01",142,0)
 ;
"RTN","VPRDJ01",143,0)
SYS() ; -- return hashed system name
"RTN","VPRDJ01",144,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","VPRDJ01",145,0)
 ;
"RTN","VPRDJ01",146,0)
FORMAT(X) ; -- enforce (xxx)xxx-xxxx phone format
"RTN","VPRDJ01",147,0)
 S X=$G(X) I X?1"("3N1")"3N1"-"4N.E Q X
"RTN","VPRDJ01",148,0)
 N P,N,I,Y S P=""
"RTN","VPRDJ01",149,0)
 F I=1:1:$L(X) S N=$E(X,I) I N=+N S P=P_N
"RTN","VPRDJ01",150,0)
 S:$L(P)<10 P=$E("0000000000",1,10-$L(P))_P
"RTN","VPRDJ01",151,0)
 S Y=$S(P:"("_$E(P,1,3)_")"_$E(P,4,6)_"-"_$E(P,7,10),1:"")
"RTN","VPRDJ01",152,0)
 Q Y
"RTN","VPRDJ01",153,0)
 ;
"RTN","VPRDJ01",154,0)
NAME(CODE,SET) ; -- Return expanded name for code set
"RTN","VPRDJ01",155,0)
 N Y S Y="",CODE=$G(CODE)
"RTN","VPRDJ01",156,0)
 I $G(SET)="gender" S Y=$S(CODE="F":"Female",CODE="M":"Male",1:"Unknown")
"RTN","VPRDJ01",157,0)
 I $G(SET)="maritalStatus" S Y=$S(CODE="D":"Divorced",CODE="M":"Married",CODE="W":"Widowed",CODE="L":"Legally Separated",CODE="S":"Never Married",1:"Unknown")
"RTN","VPRDJ01",158,0)
 I $G(SET)="religion" S Y=$$GET1^DIQ(13,CODE_",",.01)
"RTN","VPRDJ01",159,0)
 Q Y
"RTN","VPRDJ01",160,0)
 ;
"RTN","VPRDJ01",161,0)
BOOL(X) ;
"RTN","VPRDJ01",162,0)
 Q $S(X>0:"true",1:"false")
"RTN","VPRDJ01",163,0)
 ;
"RTN","VPRDJ01",164,0)
ERRQ ; -- Quit for error handling
"RTN","VPRDJ01",165,0)
 Q
"RTN","VPRDJ02")
0^5^B33844039
"RTN","VPRDJ02",1,0)
VPRDJ02 ;SLC/MKB -- Problems,Allergies,Vitals ;6/25/12  16:11
"RTN","VPRDJ02",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ02",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ02",4,0)
 ;
"RTN","VPRDJ02",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ02",6,0)
 ;
"RTN","VPRDJ02",7,0)
 ;
"RTN","VPRDJ02",8,0)
GMPL1(ID) ; -- problem
"RTN","VPRDJ02",9,0)
 N VPRL,PROB,X,I,DATE,USER,FAC
"RTN","VPRDJ02",10,0)
 D DETAIL^GMPLUTL2(ID,.VPRL) Q:'$D(VPRL)  ;doesn't exist
"RTN","VPRDJ02",11,0)
 K ERRARRY M ERRARRY=VPRL
"RTN","VPRDJ02",12,0)
 ;
"RTN","VPRDJ02",13,0)
 S PROB("uid")=$$SETUID^VPRUTILS("prob",DFN,ID,""),PROB("localId")=ID
"RTN","VPRDJ02",14,0)
 S PROB("problemText")=$G(VPRL("NARRATIVE"))
"RTN","VPRDJ02",15,0)
 S DATE=$P($G(VPRL("ENTERED")),U)
"RTN","VPRDJ02",16,0)
 S:$L(DATE) DATE=$$DATE^VPRDGMPL(DATE),PROB("entered")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ02",17,0)
 S X=$G(VPRL("DIAGNOSIS")) I $L(X) D
"RTN","VPRDJ02",18,0)
 . N ICD9ZN,DIAG
"RTN","VPRDJ02",19,0)
 . I DATE'>0 S DATE=DT
"RTN","VPRDJ02",20,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(X,DATE),DIAG=$S($P($G(ICD9ZN),U,4)'="":$P(ICD9ZN,U,4),1:X)
"RTN","VPRDJ02",21,0)
 . S PROB("icdCode")=$$SETNCS^VPRUTILS("icd",X),PROB("icdName")=DIAG
"RTN","VPRDJ02",22,0)
 S X=$G(VPRL("ONSET")) S:$L(X) X=$$DATE^VPRDGMPL(X),PROB("onset")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",23,0)
 S X=$G(VPRL("MODIFIED")) S:$L(X) X=$$DATE^VPRDGMPL(X),PROB("updated")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",24,0)
 S X=$G(VPRL("STATUS")) I $L(X) D
"RTN","VPRDJ02",25,0)
 . ; PROB("statusName")=X,X=$E(X)
"RTN","VPRDJ02",26,0)
 . ; X=$S(X="A":55561003,X="I":73425007,1:"")
"RTN","VPRDJ02",27,0)
 . S X=$E(X),X=$$VALUE^VPRLIST("PROBLEM LIST STATUS",X) Q:$E(X)=U
"RTN","VPRDJ02",28,0)
 . S PROB("statusCode")=$$SETVURN^VPRUTILS("sct",$P(X,U,2)),PROB("statusName")=$P(X,U,3)
"RTN","VPRDJ02",29,0)
 S X=$G(VPRL("PRIORITY")) I X]"" D
"RTN","VPRDJ02",30,0)
 . ; PROB("acuityName")=X,X=$$LOW^XLFSTR($E(X))
"RTN","VPRDJ02",31,0)
 . S X=$E(X),X=$$VALUE^VPRLIST("PROBLEM LIST ACUITY",X) Q:$E(X)=U
"RTN","VPRDJ02",32,0)
 . S PROB("acuityCode")=$$SETVURN^VPRUTILS("prob-acuity",$P(X,U,2)),PROB("acuityName")=$P(X,U,3)
"RTN","VPRDJ02",33,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",34,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","VPRDJ02",35,0)
 S:X="P" PROB("unverified")="false",PROB("removed")="false"
"RTN","VPRDJ02",36,0)
 S:X="T" PROB("unverified")="true",PROB("removed")="false"
"RTN","VPRDJ02",37,0)
 S:X="H" PROB("unverified")="false",PROB("removed")="true"
"RTN","VPRDJ02",38,0)
 S X=$G(VPRL("SC")),X=$S(X="YES":"",X="NO":"false",1:"")
"RTN","VPRDJ02",39,0)
 S:$L(X) PROB("serviceConnected")=X
"RTN","VPRDJ02",40,0)
 S X=$G(VPRL("PROVIDER")) I $L(X) D
"RTN","VPRDJ02",41,0)
 . S PROB("providerName")=X,X=$$GET1^DIQ(9000011,ID_",",1.05,"I")
"RTN","VPRDJ02",42,0)
 . S PROB("providerCode")=$$SETUID^VPRUTILS("user","",+X,"")
"RTN","VPRDJ02",43,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","VPRDJ02",44,0)
 S X=$G(VPRL("CLINIC")) I $L(X) D
"RTN","VPRDJ02",45,0)
 . S PROB("locationName")=X
"RTN","VPRDJ02",46,0)
 . S PROB("locationCode")=$$FIND1^DIC(44,,"QX",X)
"RTN","VPRDJ02",47,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","VPRDJ02",48,0)
 S:X FAC=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDJ02",49,0)
 I 'X S FAC=$$FAC^VPRD ;local stn#^name
"RTN","VPRDJ02",50,0)
 D FACILITY^VPRUTILS(FAC,"PROB")
"RTN","VPRDJ02",51,0)
 S I=0 F  S I=$O(VPRL("COMMENT",I)) Q:I<1  D
"RTN","VPRDJ02",52,0)
 . S X=$G(VPRL("COMMENT",I))
"RTN","VPRDJ02",53,0)
 . S USER=$$VA200^VPRDGMPL($P(X,U,2)),DATE=$$DATE^VPRDGMPL($P(X,U))
"RTN","VPRDJ02",54,0)
 . S PROB("comments",I,"enteredByCode")=$$SETUID^VPRUTILS("user","",+USER,"")
"RTN","VPRDJ02",55,0)
 . S PROB("comments",I,"enteredByName")=$P(X,U,2)
"RTN","VPRDJ02",56,0)
 . S PROB("comments",I,"entered")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ02",57,0)
 . S PROB("comments",I,"comment")=$P(X,U,3)
"RTN","VPRDJ02",58,0)
 D ADD^VPRDJ("PROB")
"RTN","VPRDJ02",59,0)
 Q
"RTN","VPRDJ02",60,0)
 ;
"RTN","VPRDJ02",61,0)
GMRA1(ID) ; -- allergy/reaction GMRAL(ID)
"RTN","VPRDJ02",62,0)
 N GMRA,VPRY,REAC,X,Y,I
"RTN","VPRDJ02",63,0)
 S GMRA=$G(GMRAL(ID)) D EN1^GMRAOR2(ID,"VPRY")
"RTN","VPRDJ02",64,0)
 K ERRARRY M ERRARRY=VPRY
"RTN","VPRDJ02",65,0)
 ;
"RTN","VPRDJ02",66,0)
 S X=$P(VPRY,U,10) I $L(X) S X=$$DATE^VPRDGMRA(X) Q:X<VPRSTART  Q:X>VPRSTOP  S REAC("entered")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ02",67,0)
 S X=$$FAC^VPRD D FACILITY^VPRUTILS(X,"REAC")
"RTN","VPRDJ02",68,0)
 S REAC("kind")="Allergy / Adverse Reaction"
"RTN","VPRDJ02",69,0)
 S REAC("localId")=ID,REAC("uid")=$$SETUID^VPRUTILS("art",DFN,ID,"")
"RTN","VPRDJ02",70,0)
 S (REAC("summary"),REAC("products",1,"name"))=$P(VPRY,U) I $P(GMRA,U,9) D
"RTN","VPRDJ02",71,0)
 . S X=$P(GMRA,U,9),REAC("reference")=X
"RTN","VPRDJ02",72,0)
 . S Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","VPRDJ02",73,0)
 . S I=$$VUID^VPRD(+X,Y),REAC("products",1,"vuid")=$$SETVURN^VPRUTILS("vuid",I)
"RTN","VPRDJ02",74,0)
 S REAC("historical")=$S($E($P(VPRY,U,5))="H":"true",1:"false")
"RTN","VPRDJ02",75,0)
 ; REAC("adverseEventTypeName")=$P(VPRY,U,7)_" "_$P(VPRY,U,6) ;TYPE_MECH
"RTN","VPRDJ02",76,0)
 I $P(VPRY,U,4)="VERIFIED",$P(VPRY,U,9) S REAC("verified")=$$JSONDT^VPRUTILS($P(VPRY,U,9))
"RTN","VPRDJ02",77,0)
 ; reactions
"RTN","VPRDJ02",78,0)
 S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","VPRDJ02",79,0)
 . S X=$G(GMRAL(ID,"S",I))
"RTN","VPRDJ02",80,0)
 . S REAC("reactions",I,"name")=$P(X,";")
"RTN","VPRDJ02",81,0)
 . S Y=$$VUID^VPRD(+$P(X,";",2),120.83)
"RTN","VPRDJ02",82,0)
 . S REAC("reactions",I,"vuid")=$$SETVURN^VPRUTILS("vuid",Y)
"RTN","VPRDJ02",83,0)
 D ADD^VPRDJ("REAC")
"RTN","VPRDJ02",84,0)
 Q
"RTN","VPRDJ02",85,0)
 ;
"RTN","VPRDJ02",86,0)
NKA ; -- no assessment or NKA [GMRAL=0 or ""]
"RTN","VPRDJ02",87,0)
 N REAC,X
"RTN","VPRDJ02",88,0)
 K ERRARRY M ERRARRY=GMRAL
"RTN","VPRDJ02",89,0)
 ;
"RTN","VPRDJ02",90,0)
 S REAC("assessment")=$S(GMRAL=0:"nka",1:"not done")
"RTN","VPRDJ02",91,0)
 S X=$$FAC^VPRD D FACILITY^VPRUTILS(X,"REAC")
"RTN","VPRDJ02",92,0)
 D ADD^VPRDJ("REAC")
"RTN","VPRDJ02",93,0)
 Q
"RTN","VPRDJ02",94,0)
 ;
"RTN","VPRDJ02",95,0)
GMV1(ID) ; -- vital/measurement ^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,ID)
"RTN","VPRDJ02",96,0)
 N VIT,VPRY,X0,TYPE,LOC,FAC,X,Y,MRES,MUNT,HIGH,LOW,I
"RTN","VPRDJ02",97,0)
 D GETREC^GMVUTL(.VPRY,ID,1) S X0=$G(VPRY(0))
"RTN","VPRDJ02",98,0)
 ; GMRVUT0 returns CLiO data with a pseudo-ID >> get real ID
"RTN","VPRDJ02",99,0)
 I X0="",$G(VPRIDT),$D(VPRTYP) D  Q:X0=""
"RTN","VPRDJ02",100,0)
 . N GMRVD S GMRVD=$G(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,ID))
"RTN","VPRDJ02",101,0)
 . S ID=$O(^PXRMINDX(120.5,"PI",DFN,$P(GMRVD,U,3),+GMRVD,""))
"RTN","VPRDJ02",102,0)
 . I $L(ID) D GETREC^GMVUTL(.VPRY,ID,1) S X0=$G(VPRY(0))
"RTN","VPRDJ02",103,0)
 K ERRARRY M ERRARRY=VPRY
"RTN","VPRDJ02",104,0)
 ;
"RTN","VPRDJ02",105,0)
 S VIT("localId")=ID,VIT("kind")="Vital Sign"
"RTN","VPRDJ02",106,0)
 S VIT("uid")=$$SETUID^VPRUTILS("vs",DFN,ID,"")
"RTN","VPRDJ02",107,0)
 S VIT("observed")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ02",108,0)
 S VIT("resulted")=$$JSONDT^VPRUTILS(+$P(X0,U,4))
"RTN","VPRDJ02",109,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","VPRDJ02",110,0)
 S VIT("typeName")=$$FIELD^GMVGETVT($P(X0,U,3),1)
"RTN","VPRDJ02",111,0)
 S VIT("typeCode")="urn:va:vuid:"_$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","VPRDJ02",112,0)
 S X=$P(X0,U,8),VIT("result")=X
"RTN","VPRDJ02",113,0)
 S VIT("units")=$$UNIT^VPRDGMV(TYPE),(MRES,MUNT)=""
"RTN","VPRDJ02",114,0)
 I TYPE="T"  S MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","VPRDJ02",115,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","VPRDJ02",116,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","VPRDJ02",117,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","VPRDJ02",118,0)
 S:MRES VIT("metricResult")=MRES,VIT("metricUnits")=MUNT
"RTN","VPRDJ02",119,0)
 S X=$$RANGE^VPRDGMV(TYPE) I $L(X) S VIT("high")=$P(X,U),VIT("low")=$P(X,U,2)
"RTN","VPRDJ02",120,0)
 S VIT("summary")=VIT("typeName")_" "_VIT("result")_" "_VIT("units")
"RTN","VPRDJ02",121,0)
 S LOC=+$P(X0,U,5),FAC=$$FAC^VPRD(LOC)
"RTN","VPRDJ02",122,0)
 S VIT("locationCode")=$$SETVURN^VPRUTILS("location",LOC)
"RTN","VPRDJ02",123,0)
 S VIT("locationName")=$S(LOC:$P($G(^SC(LOC,0)),U),1:"unknown")
"RTN","VPRDJ02",124,0)
 D FACILITY^VPRUTILS(FAC,"VIT")
"RTN","VPRDJ02",125,0)
 D ADD^VPRDJ("VIT")
"RTN","VPRDJ02",126,0)
 Q
"RTN","VPRDJ02",127,0)
 ;
"RTN","VPRDJ02",128,0)
VPR1(FNUM,ID) ; -- [patient] object
"RTN","VPRDJ02",129,0)
 N I,X,VPRY
"RTN","VPRDJ02",130,0)
 S I=0 F  S I=$O(^VPR(FNUM,ID,1,I)) Q:I<1  S X=$G(^(I,0)),VPRY(I)=X
"RTN","VPRDJ02",131,0)
 I $D(VPRY) D
"RTN","VPRDJ02",132,0)
 . D:VPRI COMMA^VPRDJ(VPRI)
"RTN","VPRDJ02",133,0)
 . S VPRI=VPRI+1 M @VPR@(VPRI)=VPRY
"RTN","VPRDJ02",134,0)
 Q
"RTN","VPRDJ03")
0^6^B70698747
"RTN","VPRDJ03",1,0)
VPRDJ03 ;SLC/MKB -- Consults,ClinProcedures,CLiO,Orders ;6/25/12  16:11
"RTN","VPRDJ03",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ03",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ03",4,0)
 ;
"RTN","VPRDJ03",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ03",6,0)
 ;
"RTN","VPRDJ03",7,0)
 ;
"RTN","VPRDJ03",8,0)
GMRC1(ID) ; -- consult/request VPRX=^TMP("GMRCR",$J,"CS",VPRN,0)
"RTN","VPRDJ03",9,0)
 N VPRD,X0,VPRJ,X,ORDER,VPRTIU,TEXT,ERR
"RTN","VPRDJ03",10,0)
 K ERRARRY M ERRARRY=VPRX
"RTN","VPRDJ03",11,0)
 ;
"RTN","VPRDJ03",12,0)
 K CONS,^TMP("VPRTEXT",$J)
"RTN","VPRDJ03",13,0)
 S CONS("localId")=+VPRX,CONS("uid")=$$SETUID^VPRUTILS("cons",DFN,+VPRX,"")
"RTN","VPRDJ03",14,0)
 S CONS("dateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,2))
"RTN","VPRDJ03",15,0)
 S CONS("status")=$P(VPRX,U,3),CONS("service")=$P(VPRX,U,4)
"RTN","VPRDJ03",16,0)
 S CONS("consultProcedure")=$P(VPRX,U,5)
"RTN","VPRDJ03",17,0)
 I $P(VPRX,U,6)="*" S CONS("interpretation")="SIGNIFICANT FINDINGS"
"RTN","VPRDJ03",18,0)
 S CONS("typeName")=$P(VPRX,U,7),CONS("category")=$P(VPRX,U,9)
"RTN","VPRDJ03",19,0)
 S ORDER=+$P(VPRX,U,8)
"RTN","VPRDJ03",20,0)
 S CONS("orderUid")=$$SETUID^VPRUTILS("order",DFN,ORDER,"")
"RTN","VPRDJ03",21,0)
 S CONS("orderName")=$P($$OI^ORX8(ORDER),U,2)
"RTN","VPRDJ03",22,0)
 D DOCLIST^GMRCGUIB(.VPRD,+VPRX) S X0=$G(VPRD(0)) ;=^GMR(123,ID,0)
"RTN","VPRDJ03",23,0)
 S X=+$P(X0,U,14) I X D  ;ordering provider
"RTN","VPRDJ03",24,0)
 . S CONS("providerUid")=$$SETUID^VPRUTILS("user","",X,"")
"RTN","VPRDJ03",25,0)
 . S CONS("providerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ03",26,0)
 S VPRJ=0 F  S VPRJ=$O(VPRD(50,VPRJ)) Q:VPRJ<1  S X=$G(VPRD(50,VPRJ)) D
"RTN","VPRDJ03",27,0)
 . Q:'$D(@(U_$P(X,";",2)_+X_")"))  ;text deleted
"RTN","VPRDJ03",28,0)
 . S CONS("results",VPRJ,"uid")=$$SETUID^VPRUTILS("tiu",DFN,+X,"")
"RTN","VPRDJ03",29,0)
 . D EXTRACT^TIULQ(+X,"VPRTIU",,.01)
"RTN","VPRDJ03",30,0)
 . S CONS("results",VPRJ,"localTitle")=$G(VPRTIU(+X,.01,"E"))
"RTN","VPRDJ03",31,0)
 S X=$P(X0,U,21),X=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ03",32,0)
 D FACILITY^VPRUTILS(X,"CONS")
"RTN","VPRDJ03",33,0)
 D ADD^VPRDJ("CONS")
"RTN","VPRDJ03",34,0)
 Q
"RTN","VPRDJ03",35,0)
 ;
"RTN","VPRDJ03",36,0)
MC1(ID) ; -- clinical procedure VPRX=^TMP("MDHSP",$J,VPRN)
"RTN","VPRDJ03",37,0)
 N X,Y,%DT,DATE,RTN,GBL,CONS,TIUN,VPRD,X0,PROC,VPRT,LOC,FAC
"RTN","VPRDJ03",38,0)
 K ERRARRY M ERRARRY=VPRX
"RTN","VPRDJ03",39,0)
 ;
"RTN","VPRDJ03",40,0)
 S RTN=$P(VPRX,U,3,4) Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDJ03",41,0)
 S X=$P(VPRX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","VPRDJ03",42,0)
 S GBL=+$P(VPRX,U,2)_";"_$S(RTN="PR702^MDPS1":"MDD(702,",1:$$ROOT^VPRDMC(DFN,$P(VPRX,U,11),DATE))
"RTN","VPRDJ03",43,0)
 Q:'GBL  I $G(ID),ID'=GBL Q                ;unknown, or not requested
"RTN","VPRDJ03",44,0)
 ;
"RTN","VPRDJ03",45,0)
 S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS) S X0=$G(VPRD(0)) ;=^GMR(123,ID,0)
"RTN","VPRDJ03",46,0)
 S TIUN=+$P(VPRX,U,14) S:TIUN TIUN=TIUN_U_$$RESOLVE^TIUSRVLO(TIUN)
"RTN","VPRDJ03",47,0)
 S PROC("localId")=GBL,PROC("category")="CP"
"RTN","VPRDJ03",48,0)
 S PROC("uid")=$$SETUID^VPRUTILS("proc",DFN,GBL,"")
"RTN","VPRDJ03",49,0)
 S PROC("name")=$P(VPRX,U),PROC("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ03",50,0)
 S X=$P(VPRX,U,7) S:$L(X) PROC("interpretation")=X
"RTN","VPRDJ03",51,0)
 S PROC("kind")="Procedure"
"RTN","VPRDJ03",52,0)
 I CONS,X0 D
"RTN","VPRDJ03",53,0)
 . N VPRJ S PROC("requested")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ03",54,0)
 . S PROC("consultUid")=CONS,PROC("orderUid")=+$P(X0,U,3)
"RTN","VPRDJ03",55,0)
 . S PROC("statusName")=$$EXTERNAL^DILFD(123,8,,$P(X0,U,12))
"RTN","VPRDJ03",56,0)
 . S VPRJ=0 F  S VPRJ=$O(VPRD(50,VPRJ)) Q:VPRJ<1  S X=+$G(VPRD(50,VPRJ)) D
"RTN","VPRDJ03",57,0)
 .. D NOTE(X)
"RTN","VPRDJ03",58,0)
 .. S:'TIUN TIUN=X_U_$$RESOLVE^TIUSRVLO(X)
"RTN","VPRDJ03",59,0)
 I TIUN D
"RTN","VPRDJ03",60,0)
 . S X=$P(TIUN,U,5) I X D
"RTN","VPRDJ03",61,0)
 .. S PROC("providers",1,"providerUid")=$$SETUID^VPRUTILS("user","",+X,"")
"RTN","VPRDJ03",62,0)
 .. S PROC("providers",1,"providerName")=$P(X,";",3)
"RTN","VPRDJ03",63,0)
 . S:$P(TIUN,U,11) PROC("hasImages")="true"
"RTN","VPRDJ03",64,0)
 . K VPRT D EXTRACT^TIULQ(+TIUN,"VPRT",,".03;.05;1211",,,"I")
"RTN","VPRDJ03",65,0)
 . S X=+$G(VPRT(+TIUN,.03,"I")),PROC("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,X,"")
"RTN","VPRDJ03",66,0)
 . S LOC=+$G(VPRT(+TIUN,1211,"I")) I LOC S LOC=LOC_U_$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ03",67,0)
 . E  S X=$P(TIUN,U,6) S:$L(X) LOC=+$O(^SC("B",X,0))_U_X
"RTN","VPRDJ03",68,0)
 . S:LOC PROC("locationUid")=+LOC,PROC("locationName")=$P(LOC,U,2),FAC=$$FAC^VPRD(+LOC)
"RTN","VPRDJ03",69,0)
 . I '$D(PROC("statusName")) S X=+$G(VPRT(+TIUN,.05,"I")),PROC("statusName")=$S(X<6:"PARTIAL RESULTS",1:"COMPLETE")
"RTN","VPRDJ03",70,0)
 . I '$G(PROC("results",+TIUN)) D NOTE(+TIUN)
"RTN","VPRDJ03",71,0)
 ; if no consult or note/visit ...
"RTN","VPRDJ03",72,0)
 S:'$D(PROC("statusName")) PROC("statusName")="COMPLETE"
"RTN","VPRDJ03",73,0)
 I '$D(FAC) S X=$P(X0,U,21),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ03",74,0)
 D FACILITY^VPRUTILS(FAC,"PROC")
"RTN","VPRDJ03",75,0)
 D ADD^VPRDJ("PROC")
"RTN","VPRDJ03",76,0)
 Q
"RTN","VPRDJ03",77,0)
 ;
"RTN","VPRDJ03",78,0)
NOTE(DA) ; -- add TIU note
"RTN","VPRDJ03",79,0)
 N VPRT,NT,TEXT
"RTN","VPRDJ03",80,0)
 D EXTRACT^TIULQ(DA,"VPRT",,.01)
"RTN","VPRDJ03",81,0)
 S PROC("results",DA,"uid")=$$SETUID^VPRUTILS("tiu","",DA,"")
"RTN","VPRDJ03",82,0)
 S PROC("results",DA,"localTitle")=$G(VPRT(DA,.01,"E"))
"RTN","VPRDJ03",83,0)
 S NT=$$GET1^DIQ(8925.1,+$G(VPRT(DA,.01,"I"))_",",1501)
"RTN","VPRDJ03",84,0)
 S:$L(NT) PROC("results",DA,"nationalTitle")=NT
"RTN","VPRDJ03",85,0)
 Q:'$G(VPRTEXT)  S TEXT=$$TEXT^VPRDTIU(DA)
"RTN","VPRDJ03",86,0)
 I $L(TEXT) M PROC("results",DA,"content","\")=@TEXT
"RTN","VPRDJ03",87,0)
 Q
"RTN","VPRDJ03",88,0)
 ;
"RTN","VPRDJ03",89,0)
MDC1(ID) ; -- clinical observation
"RTN","VPRDJ03",90,0)
 N GUID,CLIO,VPRC,VPRT,LOC,FAC,I,X,Y
"RTN","VPRDJ03",91,0)
 S GUID=$G(ID) Q:GUID=""  ;invalid GUID
"RTN","VPRDJ03",92,0)
 D QRYOBS^VPRDMDC("VPRC",GUID) Q:'$D(VPRC)  ;doesn't exist
"RTN","VPRDJ03",93,0)
 Q:$L($G(VPRC("PARENT_ID","E")))            ;PARENT also in list
"RTN","VPRDJ03",94,0)
 K ERRARRY M ERRARRY=VPRC
"RTN","VPRDJ03",95,0)
 ;
"RTN","VPRDJ03",96,0)
 S CLIO("localId")=GUID,CLIO("uid")=$$SETUID^VPRUTILS("obs",DFN,GUID,"")
"RTN","VPRDJ03",97,0)
 S CLIO("typeName")=$G(VPRC("TERM_ID","E")),X=$G(VPRC("TERM_ID","I"))
"RTN","VPRDJ03",98,0)
 S:X CLIO("typeCode")="urn:vuid:"_X
"RTN","VPRDJ03",99,0)
 S CLIO("result")=$G(VPRC("SVALUE","E"))
"RTN","VPRDJ03",100,0)
 S X=$G(VPRC("UNIT_ID","ABBV")) S:$L(X) CLIO("units")=X
"RTN","VPRDJ03",101,0)
 S X=$G(VPRC("ENTERED_DATE_TIME","I")),CLIO("entered")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",102,0)
 S X=$G(VPRC("OBSERVED_DATE_TIME","I")),CLIO("observed")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ03",103,0)
 D QRYTYPES^VPRDMDC("VPRT")
"RTN","VPRDJ03",104,0)
 F I=3,5 S X=$G(VPRT(I,"XML")) I $L($G(VPRC(X,"E"))) D
"RTN","VPRDJ03",105,0)
 . S Y=VPRT(I,"NAME"),Y=$S(Y="LOCATION":"bodySite",1:$$LOW^XLFSTR(Y))
"RTN","VPRDJ03",106,0)
 . S CLIO(Y_"Code")=VPRC(X,"I"),CLIO(Y_"Name")=VPRC(X,"E")
"RTN","VPRDJ03",107,0)
 F I=4,6,7 S X=$G(VPRT(I,"XML")) I $L($G(VPRC(X,"E"))) D
"RTN","VPRDJ03",108,0)
 . S CLIO("qualifiers",I,"type")=$$LOW^XLFSTR(VPRT(I,"NAME"))
"RTN","VPRDJ03",109,0)
 . S CLIO("qualifiers",I,"code")=VPRC(X,"I")
"RTN","VPRDJ03",110,0)
 . S CLIO("qualifiers",I,"name")=VPRC(X,"E")
"RTN","VPRDJ03",111,0)
 S X=$G(VPRC("RANGE","E")) I $L(X) D
"RTN","VPRDJ03",112,0)
 . S Y=$$VALUE^VPRLIST("CLIO INTERPRETATION",X) Q:$E(Y)=U
"RTN","VPRDJ03",113,0)
 . S CLIO("interpretationCode")="urn:hl7:observation-interpretation:"_$P(Y,U,2)
"RTN","VPRDJ03",114,0)
 . S CLIO("interpretationName")=$P(Y,U,3)
"RTN","VPRDJ03",115,0)
 . ; Y=$S(X="Out of Bounds Low":"<",X="Out of Bounds High":">",1:$E(X))
"RTN","VPRDJ03",116,0)
 . ; CLIO("interpretationCode")="urn:hl7:observation-interpretation:"_Y
"RTN","VPRDJ03",117,0)
 . ; CLIO("interpretationName")=$S(X="<":"Low off scale",X=">":"High off scale",1:X)
"RTN","VPRDJ03",118,0)
 ; X=$G(VPRC("STATUS","E")) S:$L(X) CLIO("resultStatus")=$S(X="unverified":"active",1:"complete")
"RTN","VPRDJ03",119,0)
 S CLIO("statusCode")="urn:va:observation-status:complete",CLIO("statusName")="complete"
"RTN","VPRDJ03",120,0)
 S LOC=$G(VPRC("HOSPITAL_LOCATION_ID","I")),FAC=$$FAC^VPRD(LOC)
"RTN","VPRDJ03",121,0)
 S CLIO("locationCode")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),LOC)
"RTN","VPRDJ03",122,0)
 S CLIO("locationName")=$G(VPRC("HOSPITAL_LOCATION_ID","E"))
"RTN","VPRDJ03",123,0)
 D FACILITY^VPRUTILS(FAC,"CLIO")
"RTN","VPRDJ03",124,0)
 S X=$G(VPRC("COMMENT","E")) S:$L(X) CLIO("comment")=X
"RTN","VPRDJ03",125,0)
 D ADD^VPRDJ("CLIO")
"RTN","VPRDJ03",126,0)
 Q
"RTN","VPRDJ03",127,0)
 ;
"RTN","VPRDJ03",128,0)
OR1(ID) ; -- order ID >> ^TMP("ORR",$J,ORLIST,VPRN)
"RTN","VPRDJ03",129,0)
 N ORDER,CHILD,VPRC
"RTN","VPRDJ03",130,0)
 D ORX(ID,.ORDER)
"RTN","VPRDJ03",131,0)
 S VPRC=0 F  S VPRC=$O(^OR(100,ID,2,VPRC)) Q:VPRC<1  D
"RTN","VPRDJ03",132,0)
 . K CHILD D ORX(VPRC,.CHILD)
"RTN","VPRDJ03",133,0)
 . M ORDER("children",VPRC)=CHILD
"RTN","VPRDJ03",134,0)
 D ADD^VPRDJ("ORDER")
"RTN","VPRDJ03",135,0)
 Q
"RTN","VPRDJ03",136,0)
ORX(IFN,ORD) ; -- extract order IFN into ORD("attribute")
"RTN","VPRDJ03",137,0)
 N ORLIST,ORLST,X0,X8,LOC,X,I,DA
"RTN","VPRDJ03",138,0)
 S ORLST=$S(+$G(VPRN):VPRN-1,1:0) S:'$D(ORLIST) ORLIST=$H
"RTN","VPRDJ03",139,0)
 D GET^ORQ12(IFN,ORLIST,1)
"RTN","VPRDJ03",140,0)
 S X0=$G(^TMP("ORR",$J,ORLIST,ORLST))
"RTN","VPRDJ03",141,0)
 K ERRARRY S ERRARRY(0)=X0
"RTN","VPRDJ03",142,0)
 ;
"RTN","VPRDJ03",143,0)
 S ORD("localId")=IFN,ORD("uid")=$$SETUID^VPRUTILS("order",DFN,IFN,"")
"RTN","VPRDJ03",144,0)
 S X=$$OI^ORX8(+X0) I $L(X) D
"RTN","VPRDJ03",145,0)
 . N ARRAY,NAME
"RTN","VPRDJ03",146,0)
 . S ARRAY("Code")=1_U_"oi",ARRAY("Name")=2,ARRAY("PackageRef")=3
"RTN","VPRDJ03",147,0)
 . D SPLITVAL^VPRUTILS(X,.ARRAY) S ORD("name")=ARRAY("Name")
"RTN","VPRDJ03",148,0)
 . S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  S ORD("oi"_NAME)=$G(ARRAY(NAME))
"RTN","VPRDJ03",149,0)
 S ORD("displayGroup")=$P(X0,U,2)
"RTN","VPRDJ03",150,0)
 S ORD("entered")=$$JSONDT^VPRUTILS($P(X0,U,3))
"RTN","VPRDJ03",151,0)
 S ORD("start")=$$TM($P(X0,U,4)),ORD("stop")=$$TM($P(X0,U,5))
"RTN","VPRDJ03",152,0)
 S ORD("statusCode")="urn:va:order-status:"_$P(X0,U,7)
"RTN","VPRDJ03",153,0)
 S ORD("statusName")=$P(X0,U,6)
"RTN","VPRDJ03",154,0)
 S ORD("statusVuid")=$$STS^VPRDOR($P(X0,U,7))
"RTN","VPRDJ03",155,0)
 D SETTEXT^VPRUTILS($NA(^TMP("ORR",$J,ORLIST,ORLST,"TX")),$NA(^TMP("VPRTEXT",$J,IFN)))
"RTN","VPRDJ03",156,0)
 M ORD("content","\")=^TMP("VPRTEXT",$J,IFN)
"RTN","VPRDJ03",157,0)
 S X=$$GET1^DIQ(100,IFN_",",1,"I") I X D
"RTN","VPRDJ03",158,0)
 . S ORD("providerUid")=$$SETUID^VPRUTILS("user","",+X,"")
"RTN","VPRDJ03",159,0)
 . S ORD("providerName")=$P($G(^VA(200,+X,0)),U)
"RTN","VPRDJ03",160,0)
 S LOC=+$$GET1^DIQ(100,IFN_",",6,"I"),FAC=$$FAC^VPRD(LOC) I LOC D
"RTN","VPRDJ03",161,0)
 . S ORD("locationName")=$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ03",162,0)
 . S ORD("locationCode")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),LOC)
"RTN","VPRDJ03",163,0)
 D FACILITY^VPRUTILS(FAC,"ORD")
"RTN","VPRDJ03",164,0)
 S ORD("service")=$$GET1^DIQ(100,IFN_",","12:1")
"RTN","VPRDJ03",165,0)
 S X=$$GET1^DIQ(100,IFN_",",9,"I") S:X ORD("predecessor")=$$SETUID^VPRUTILS("order",DFN,+X,"")
"RTN","VPRDJ03",166,0)
 S X=$$GET1^DIQ(100,IFN_",",9.1,"I") S:X ORD("successor")=$$SETUID^VPRUTILS("order",DFN,+X,"")
"RTN","VPRDJ03",167,0)
 ; sign/verify
"RTN","VPRDJ03",168,0)
 S X8=$G(^OR(100,IFN,8,1,0)),I=0 I $P(X8,U,6) D       ;signed
"RTN","VPRDJ03",169,0)
 . N PROV S PROV=$P(X8,U,5) S:PROV<1 PROV=$P(X8,U,3)  ;if on chart,
"RTN","VPRDJ03",170,0)
 . D USER(.I,"S",PROV,$P(X8,U,6))                     ;   use provider
"RTN","VPRDJ03",171,0)
 I $P(X8,U,9)  D USER(.I,"N",$P(X8,U,8),$P(X8,U,9))   ;nurse
"RTN","VPRDJ03",172,0)
 I $P(X8,U,11) D USER(.I,"C",$P(X8,U,10),$P(X8,U,11)) ;clerk
"RTN","VPRDJ03",173,0)
 I $P(X8,U,19) D USER(.I,"R",$P(X8,U,18),$P(X8,U,19)) ;chart review
"RTN","VPRDJ03",174,0)
 Q
"RTN","VPRDJ03",175,0)
 ; acknowledgements
"RTN","VPRDJ03",176,0)
 S DA=0 F  S DA=$O(^ORA(102.4,"B",+IFN,DA)) Q:DA<1  D
"RTN","VPRDJ03",177,0)
 . S X0=$G(^ORA(102.4,DA,0)) Q:'$P(X0,U,3)  ;stub - not ack'd
"RTN","VPRDJ03",178,0)
 . S X=+$P(X0,U,2),X=$S(X:X_U_$P($G(^VA(200,X,0)),U),1:U)
"RTN","VPRDJ03",179,0)
 . S ORD("acknowledgement",DA)=X_U_$P(X0,U,3)
"RTN","VPRDJ03",180,0)
 Q
"RTN","VPRDJ03",181,0)
 ;
"RTN","VPRDJ03",182,0)
USER(N,ROLE,IEN,DATE) ; -- add signature/verification data
"RTN","VPRDJ03",183,0)
 S N=+$G(N)+1
"RTN","VPRDJ03",184,0)
 S ORD("clinicians",N,"signedDateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ03",185,0)
 S ORD("clinicians",N,"role")=$G(ROLE)
"RTN","VPRDJ03",186,0)
 Q:+$G(IEN)<1
"RTN","VPRDJ03",187,0)
 S ORD("clinicians",N,"uid")=$$SETUID^VPRUTILS("user","",IEN,"")
"RTN","VPRDJ03",188,0)
 S ORD("clinicians",N,"name")=$P($G(^VA(200,IEN,0)),U)
"RTN","VPRDJ03",189,0)
 Q
"RTN","VPRDJ03",190,0)
 ;
"RTN","VPRDJ03",191,0)
TM(X) ; -- strip seconds off a FM time
"RTN","VPRDJ03",192,0)
 N D,T,Y S D=$P(X,"."),T=$P(X,".",2)
"RTN","VPRDJ03",193,0)
 S Y=D_$S(T:"."_$E(T,1,4),1:"")
"RTN","VPRDJ03",194,0)
 S Y=$$JSONDT^VPRUTILS(Y)
"RTN","VPRDJ03",195,0)
 Q Y
"RTN","VPRDJ04")
0^7^B87122800
"RTN","VPRDJ04",1,0)
VPRDJ04 ;SLC/MKB -- Appointments,Visits,Admissions,PTF ;6/25/12  16:11
"RTN","VPRDJ04",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ04",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ04",4,0)
 ;
"RTN","VPRDJ04",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ04",6,0)
 ;
"RTN","VPRDJ04",7,0)
 ;
"RTN","VPRDJ04",8,0)
SDAM1 ; -- appointment ^TMP($J,"SDAMA301",DFN,VPRDT)
"RTN","VPRDJ04",9,0)
 N NODE,HLOC,APPT,X,STS,CLS,FAC,SV,PRV
"RTN","VPRDJ04",10,0)
 S NODE=$G(^TMP($J,"SDAMA301",DFN,VPRDT))
"RTN","VPRDJ04",11,0)
 K ERRARRY S ERRARRY(0)=NODE
"RTN","VPRDJ04",12,0)
 ;
"RTN","VPRDJ04",13,0)
 S HLOC=$P(NODE,U,2),X="A;"_VPRDT_";"_+HLOC
"RTN","VPRDJ04",14,0)
 I $L($G(ID)),ID'=X Q
"RTN","VPRDJ04",15,0)
 S APPT("localId")=X,APPT("uid")=$$SETUID^VPRUTILS("appt",DFN,X,"")
"RTN","VPRDJ04",16,0)
 S X=$P(NODE,U,10),APPT("typeCode")=$P(X,";"),APPT("typeName")=$P(X,";",2)
"RTN","VPRDJ04",17,0)
 S STS=$P(NODE,U,3),CLS=$S($E(STS)="I":"I",1:"O")
"RTN","VPRDJ04",18,0)
 S APPT("dateTime")=$$JSONDT^VPRUTILS(VPRDT)
"RTN","VPRDJ04",19,0)
 S:$L($P(NODE,U,6)) APPT("comment")=$P(NODE,U,6)
"RTN","VPRDJ04",20,0)
 S:$P(NODE,U,9) APPT("checkIn")=$$JSONDT^VPRUTILS($P(NODE,U,9))
"RTN","VPRDJ04",21,0)
 S:$P(NODE,U,11) APPT("checkOut")=$$JSONDT^VPRUTILS($P(NODE,U,11))
"RTN","VPRDJ04",22,0)
 S FAC=$$FAC^VPRD(+HLOC) D FACILITY^VPRUTILS(FAC,"APPT") I HLOC D
"RTN","VPRDJ04",23,0)
 . S APPT("locationName")=$P(HLOC,";",2)
"RTN","VPRDJ04",24,0)
 . S APPT("locationUid")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),+HLOC)
"RTN","VPRDJ04",25,0)
 . S X=$$AMIS^VPRDVSIT(+$P(NODE,U,13))
"RTN","VPRDJ04",26,0)
 . S:$L(X) APPT("stopCode")=$P(X,U),APPT("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04",27,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","VPRDJ04",28,0)
 . I SV S APPT("service")=$$SERV^VPRDSDAM(SV)
"RTN","VPRDJ04",29,0)
 . ;find default provider
"RTN","VPRDJ04",30,0)
 . S PRV=+$$GET1^DIQ(44,+HLOC_",",16,"I") I 'PRV D
"RTN","VPRDJ04",31,0)
 .. N VPRP,I,FIRST
"RTN","VPRDJ04",32,0)
 .. D GETS^DIQ(44,+HLOC_",","2600*","I","VPRP")
"RTN","VPRDJ04",33,0)
 .. S FIRST=$O(VPRP(44.1,"")),I=""
"RTN","VPRDJ04",34,0)
 .. F  S I=$O(VPRP(44.1,I)) Q:I=""  I $G(VPRP(44.1,I,.02,"I")) S PRV=$G(VPRP(44.1,I,.01,"I")) Q
"RTN","VPRDJ04",35,0)
 .. I 'PRV,FIRST S PRV=$G(VPRP(44.1,FIRST,.01,"I"))
"RTN","VPRDJ04",36,0)
 . I PRV S APPT("providers",1,"provideruId")=$$SETUID^VPRUTILS("user","",PRV,""),APPT("providers",1,"providerName")=$P($G(^VA(200,PRV,0)),U)
"RTN","VPRDJ04",37,0)
 I $G(SV) S APPT("summary")="${"_APPT("service")_"}:"_$P(HLOC,";",2)
"RTN","VPRDJ04",38,0)
 S X=$$VALUE^VPRLIST("APPOINTMENTS PATIENT CLASS",CLS)
"RTN","VPRDJ04",39,0)
 S:$E(X)'="^" APPT("patientClassCode")="urn:va:patient-class:"_$P(X,U,2),APPT("patientClassName")=$P(X,U,3)
"RTN","VPRDJ04",40,0)
 S APPT("categoryCode")="urn:va:encounter-category:OV",APPT("categoryName")="Outpatient Visit"
"RTN","VPRDJ04",41,0)
 S APPT("appointmentStatus")=$P(STS,";",2)
"RTN","VPRDJ04",42,0)
 D ADD^VPRDJ("APPT")
"RTN","VPRDJ04",43,0)
 Q
"RTN","VPRDJ04",44,0)
 ;
"RTN","VPRDJ04",45,0)
DGS1(IFN) ; -- scheduled admission
"RTN","VPRDJ04",46,0)
 N ADM,X0,DATE,HLOC,FAC,SV,X
"RTN","VPRDJ04",47,0)
 S X0=$G(^DGS(41.1,+$G(IFN),0)) Q:X0=""  ;deleted
"RTN","VPRDJ04",48,0)
 K ERRARRY S ERRARRY(0)=X0
"RTN","VPRDJ04",49,0)
 ;
"RTN","VPRDJ04",50,0)
 S DATE=+$P(X0,U,2),HLOC=+$G(^DIC(42,+$P(X0,U,8),44))
"RTN","VPRDJ04",51,0)
 S X="H;"_DATE,ADM("localId")=X,ADM("uid")=$$SETUID^VPRUTILS("appt",DFN,X,"")
"RTN","VPRDJ04",52,0)
 S ADM("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ04",53,0)
 S FAC=$$FAC^VPRD(+HLOC) D FACILITY^VPRUTILS(FAC,"ADM") I HLOC D
"RTN","VPRDJ04",54,0)
 . S HLOC=+HLOC_";"_$P($G(^SC(+HLOC,0)),U)
"RTN","VPRDJ04",55,0)
 . S ADM("uid")=ADM("uid")_";"_+HLOC
"RTN","VPRDJ04",56,0)
 . S ADM("locationName")=$P(HLOC,";",2)
"RTN","VPRDJ04",57,0)
 . S ADM("locationUid")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),+HLOC)
"RTN","VPRDJ04",58,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",8,"I"),X=$$AMIS^VPRDVSIT(X)
"RTN","VPRDJ04",59,0)
 . S:$L(X) ADM("stopCode")=$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04",60,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","VPRDJ04",61,0)
 . I SV S ADM("service")=$$SERV^VPRDSDAM(SV)
"RTN","VPRDJ04",62,0)
 I $G(SV) S ADM("summary")="${"_ADM("service")_"}:"_$P(HLOC,";",2)
"RTN","VPRDJ04",63,0)
 S X=+$P(X0,U,5) I X D
"RTN","VPRDJ04",64,0)
 . S ADM("providers",1,"providerUid")=$$SETUID^VPRUTILS("user","",X,"")
"RTN","VPRDJ04",65,0)
 . S ADM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ04",66,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","VPRDJ04",67,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","VPRDJ04",68,0)
 S ADM("appointmentStatus")=$S($P(X0,U,17):"ADMITTED",$P(X0,U,13):"CANCELLED",1:"SCHEDULED")
"RTN","VPRDJ04",69,0)
 D ADD^VPRDJ("ADM")
"RTN","VPRDJ04",70,0)
 Q
"RTN","VPRDJ04",71,0)
 ;
"RTN","VPRDJ04",72,0)
VSIT1(ID) ; -- visit
"RTN","VPRDJ04",73,0)
 N VST,X0,X15,X,FAC,LOC,CATG,AMIS,INPT,DA
"RTN","VPRDJ04",74,0)
 I $D(^EDP(230,"V",ID)) D EDP1^VPRDJ04E(ID) Q
"RTN","VPRDJ04",75,0)
 D ENCEVENT^PXAPI(ID)
"RTN","VPRDJ04",76,0)
 K ERRARRY M ERRARRY=^TMP("PXKENC",$J,ID)
"RTN","VPRDJ04",77,0)
 ;
"RTN","VPRDJ04",78,0)
 S X0=$G(^TMP("PXKENC",$J,ID,"VST",ID,0)),X15=$G(^(150))
"RTN","VPRDJ04",79,0)
 Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  ;want primary, not historical
"RTN","VPRDJ04",80,0)
 I $P(X0,U,7)="H" D ADM(ID,+X0) Q
"RTN","VPRDJ04",81,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^VPRUTILS("visit",DFN,ID,"")
"RTN","VPRDJ04",82,0)
 S VST("dateTime")=$$JSONDT^VPRUTILS(+X0) ;checkIn ??
"RTN","VPRDJ04",83,0)
 S:$P(X0,U,18) VST("checkOut")=$$JSONDT^VPRUTILS($P(X0,U,18))
"RTN","VPRDJ04",84,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","VPRDJ04",85,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ04",86,0)
 S:'FAC X=$$FAC^VPRD(LOC) D FACILITY^VPRUTILS(X,"VST")
"RTN","VPRDJ04",87,0)
 ; X=$S(CATG="H":"AD",CATG="C":"CR",CATG="T":"TC",CATG="N":"U",CATG="R":"NH","D^X"[CATG:"O",1:"OV")
"RTN","VPRDJ04",88,0)
 S X=$$VALUE^VPRLIST("VISITS CATEGORY CODE",CATG)
"RTN","VPRDJ04",89,0)
 S:$E(X)'="^" VST("categoryCode")="urn:va:encounter-category:"_$P(X,U,2),VST("categoryName")=$P(X,U,3)
"RTN","VPRDJ04",90,0)
 ; VST("categoryName")=$S(X="AD":"Admission",X="C":"Chart Review",X="TC":"Phone Contact",X="U":"Unknown",X="NH":"Nursing Home",X="O":"Other",1:"Outpatient Visit")
"RTN","VPRDJ04",91,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","VPRDJ04",92,0)
 S X=$$CPT^VPRDVSIT(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","VPRDJ04",93,0)
 I 'X S VST("typeName")=$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG^VPRDVSIT(CATG))
"RTN","VPRDJ04",94,0)
 S X=$$VALUE^VPRLIST("VISITS PATIENT CLASS CODE",INPT)
"RTN","VPRDJ04",95,0)
 S:$E(X)'="^" VST("patientClassCode")="urn:va:patient-class:"_$P(X,U,2),VST("patientClassName")=$P(X,U,3)
"RTN","VPRDJ04",96,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^VPRDVSIT(X) I LOC D
"RTN","VPRDJ04",97,0)
 . N L0 S L0=$G(^SC(LOC,0))
"RTN","VPRDJ04",98,0)
 . I 'X S AMIS=$$AMIS^VPRDVSIT($P(L0,U,7))
"RTN","VPRDJ04",99,0)
 . S VST("locationUid")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),+LOC)
"RTN","VPRDJ04",100,0)
 . S VST("locationName")=$P(L0,U)
"RTN","VPRDJ04",101,0)
 . S X=$$SERV^VPRDVSIT($P(L0,U,20)) Q:X=""
"RTN","VPRDJ04",102,0)
 . S:$L(X) VST("service")=X,VST("summary")="${"_VST("service")_"}:"_$P(L0,U)
"RTN","VPRDJ04",103,0)
 S:$D(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","VPRDJ04",104,0)
 S X=$$POV^VPRDVSIT(ID) S:$L(X) VST("reasonUid")=$$SETNCS^VPRUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","VPRDJ04",105,0)
 ; provider(s)
"RTN","VPRDJ04",106,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,ID,"PRV",DA)) Q:DA<1  S X0=$G(^(DA,0)) D
"RTN","VPRDJ04",107,0)
 . I $P(X0,U,4)="P" D PROV("VST",DA,+X0,"P",1) Q  ;primary
"RTN","VPRDJ04",108,0)
 . D PROV("VST",DA,+X0,"S")                       ;secondary
"RTN","VPRDJ04",109,0)
 ; note(s)
"RTN","VPRDJ04",110,0)
 D TIU(ID,.VST) K ^TMP("PXKENC",$J,ID)
"RTN","VPRDJ04",111,0)
 D ADD^VPRDJ("VST")
"RTN","VPRDJ04",112,0)
 Q
"RTN","VPRDJ04",113,0)
 ;
"RTN","VPRDJ04",114,0)
NAME(IEN) ; -- Return a string 'name' for the visit
"RTN","VPRDJ04",115,0)
 N Y,X0,LOC,DATE
"RTN","VPRDJ04",116,0)
 S X0=$G(^AUPNVSIT(+$G(IEN),0)),Y=""
"RTN","VPRDJ04",117,0)
 S DATE=+X0,LOC=+$P(X0,U,22) S:LOC LOC=$P($G(^SC(LOC,0)),U)_" "
"RTN","VPRDJ04",118,0)
 S Y=LOC_$$FMTE^XLFDT(DATE,"1D") ;Mon DD, YYYY
"RTN","VPRDJ04",119,0)
 Q Y
"RTN","VPRDJ04",120,0)
 ;
"RTN","VPRDJ04",121,0)
ADM(IEN,DATE) ; -- admission [from VSIT1]
"RTN","VPRDJ04",122,0)
 N ADM,VADMVT,VAIP,VAERR,MVT,SPEC,HLOC,FAC,ICD,I
"RTN","VPRDJ04",123,0)
 S IEN=+$G(IEN),DATE=+$G(DATE) Q:IEN<1  Q:DATE<1
"RTN","VPRDJ04",124,0)
 S VAIP("D")=DATE D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","VPRDJ04",125,0)
 S ADM("localId")=IEN,ADM("uid")=$$SETUID^VPRUTILS("visit",DFN,IEN,"")
"RTN","VPRDJ04",126,0)
 ; ADM("admitType")=$P($G(VAIP(4)),U,2),DATE=+$G(VAIP(13,1))
"RTN","VPRDJ04",127,0)
 S (ADM("dateTime"),ADM("stay","arrivalDateTime"))=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ04",128,0)
 S:$L($P(VAIP(6),U,2)) ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","VPRDJ04",129,0)
 S MVT=13,I=0 I +$G(VAIP(1))=$G(^DPT(DFN,.105)) D  ;if current admission
"RTN","VPRDJ04",130,0)
 . S ADM("current")="true",MVT=14                  ; use last movement
"RTN","VPRDJ04",131,0)
 . S X=$G(^DPT(DFN,.101)) S:$L(X) ADM("roomBed")=X
"RTN","VPRDJ04",132,0)
 S SPEC=$G(VAIP(MVT,6)),ADM("specialty")=$P(SPEC,U,2)
"RTN","VPRDJ04",133,0)
 S X=$$SERV^VPRDVSIT(+SPEC),ADM("service")=X
"RTN","VPRDJ04",134,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(MVT,4)),44)),FAC=$$FAC^VPRD(+HLOC) I HLOC D
"RTN","VPRDJ04",135,0)
 . S ADM("locationUid")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),+HLOC)
"RTN","VPRDJ04",136,0)
 . S ADM("locationName")=$P($G(^SC(HLOC,0)),U)
"RTN","VPRDJ04",137,0)
 . S X=$$AMIS^VPRDVSIT($P($G(^SC(HLOC,0)),U,7))
"RTN","VPRDJ04",138,0)
 . S:$L($G(X)) VST("stopCodeUid")="urn:va:stop-code:"_$P(X,U),VST("stopCodeName")=$P(X,U,2)
"RTN","VPRDJ04",139,0)
 . S ADM("summary")="${"_ADM("service")_"}:"_ADM("locationName")
"RTN","VPRDJ04",140,0)
 D FACILITY^VPRUTILS(FAC,"ADM")
"RTN","VPRDJ04",141,0)
 I $G(VAIP(MVT,5)) S I=I+1 D PROV("ADM",I,+VAIP(MVT,5),"P",1) ;primary
"RTN","VPRDJ04",142,0)
 I $G(VAIP(18)) S I=I+1 D PROV("ADM",I,+VAIP(18),"A")         ;attending
"RTN","VPRDJ04",143,0)
 S ICD=$$POV^VPRDVSIT(IEN) S:'ICD ICD=$$PTF^VPRDVSIT(DFN,VAIP(12)) ;PTF>ICD
"RTN","VPRDJ04",144,0)
 I $L(ICD)<2 S ADM("reasonName")=$G(VAIP(MVT,7))
"RTN","VPRDJ04",145,0)
 E  S ADM("reasonUid")=$$SETNCS^VPRUTILS("icd",ICD),ADM("reasonName")=$P(ICD,U,2)
"RTN","VPRDJ04",146,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","VPRDJ04",147,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","VPRDJ04",148,0)
 S X=$$CPT^VPRDVSIT(IEN),ADM("typeName")=$S(X:$P($$CPT^ICPTCOD(X),U,3),1:$$CATG^VPRDVSIT("H"))
"RTN","VPRDJ04",149,0)
 I $G(VAIP(17)) S ADM("stay","dischargeDateTime")=$$JSONDT^VPRUTILS(+$G(VAIP(17,1)))
"RTN","VPRDJ04",150,0)
 D TIU(IEN,.ADM) ;notes/summary
"RTN","VPRDJ04",151,0)
 D ADD^VPRDJ("ADM")
"RTN","VPRDJ04",152,0)
 Q
"RTN","VPRDJ04",153,0)
 ;
"RTN","VPRDJ04",154,0)
TIU(VISIT,ARR) ; -- add notes to ARR("document")
"RTN","VPRDJ04",155,0)
 N X,Y,I,VPRX,LT,NT,DA,CNT,VPRY
"RTN","VPRDJ04",156,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"VPRX")
"RTN","VPRDJ04",157,0)
 S Y="",(I,CNT)=0
"RTN","VPRDJ04",158,0)
 F  S I=$O(VPRX("DILIST",1,I)) Q:I<1  D
"RTN","VPRDJ04",159,0)
 . S LT=$G(VPRX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ04",160,0)
 . S DA=$G(VPRX("DILIST",2,I))
"RTN","VPRDJ04",161,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","VPRDJ04",162,0)
 . S CNT=CNT+1,ARR("documents",CNT,"uid")=$$SETUID^VPRUTILS("tiu",DFN,+DA,"")
"RTN","VPRDJ04",163,0)
 . S ARR("documents",CNT,"localTitle")=LT
"RTN","VPRDJ04",164,0)
 . S:$L(NT) ARR("documents",CNT,"nationalTitle")=NT
"RTN","VPRDJ04",165,0)
 Q
"RTN","VPRDJ04",166,0)
 ;
"RTN","VPRDJ04",167,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","VPRDJ04",168,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^VPRUTILS("user","",+IEN,"")
"RTN","VPRDJ04",169,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","VPRDJ04",170,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","VPRDJ04",171,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","VPRDJ04",172,0)
 Q
"RTN","VPRDJ04",173,0)
 ;
"RTN","VPRDJ04",174,0)
PTFA(ID) ; -- find ID in ^PXRMINDX(FNUM), fall thru to PX1 if successful
"RTN","VPRDJ04",175,0)
 N ROOT,IDX,ITEM,DATE K ^TMP("VPRPX",$J)
"RTN","VPRDJ04",176,0)
 S P=$L(ID,";"),TYPE=$P(ID,";",P),ID=$P(ID,";",1,P-1)
"RTN","VPRDJ04",177,0)
 S ROOT="^PXRMINDX(45,""ICD9"",""PNI"","_+$G(DFN)_","_""""_TYPE_""""
"RTN","VPRDJ04",178,0)
 S IDX=ROOT_")" F  S IDX=$Q(@IDX) Q:$P(IDX,",",1,5)'=ROOT  D
"RTN","VPRDJ04",179,0)
 . I """"_ID_""")"'=$P(IDX,",",8) Q
"RTN","VPRDJ04",180,0)
 . S DATE=+$P(IDX,",",7),ITEM=+$P(IDX,",",6)
"RTN","VPRDJ04",181,0)
 . S VPRIDT=9999999-DATE,^TMP("VPRPX",$J,VPRIDT,ID_";"_TYPE)=ITEM_U_DATE
"RTN","VPRDJ04",182,0)
 Q:'$D(^TMP("VPRPX",$J))  ;not found
"RTN","VPRDJ04",183,0)
 S ID=ID_";"_TYPE
"RTN","VPRDJ04",184,0)
PTF1 ; -- PTF ^TMP("VPRPX",$J,VPRIDT,ID)=ITM^DATE for ID=iens;TYPE
"RTN","VPRDJ04",185,0)
 N VPRF,PTF,TMP,STN,FAC,X,Y,ADM
"RTN","VPRDJ04",186,0)
 D PTF^DGPTPXRM(+ID,.VPRF)
"RTN","VPRDJ04",187,0)
 K ERRARRY M ERRARRY=VPRF
"RTN","VPRDJ04",188,0)
 ;
"RTN","VPRDJ04",189,0)
 S PTF("localId")=ID,PTF("uid")=$$SETUID^VPRUTILS("ptf",DFN,ID,"")
"RTN","VPRDJ04",190,0)
 S P=$L(ID,";"),TYPE=$P(ID,";",P) S:TYPE="DXLS" PTF("principalDx")="true"
"RTN","VPRDJ04",191,0)
 S TMP=$G(^TMP("VPRPX",$J,VPRIDT,ID))
"RTN","VPRDJ04",192,0)
 S X=$$ICDDX^ICDCODE($P(TMP,U),$P(TMP,U,2)),Y=$S($P(X,U,4)'="":$P(X,U,4),1:$P(X,U,2))
"RTN","VPRDJ04",193,0)
 S PTF("icdCode")=$$SETNCS^VPRUTILS("icd",$P(X,U,2)),PTF("icdName")=Y
"RTN","VPRDJ04",194,0)
 S X=$G(VPRF("ADMISSION DATE")),ADM=X
"RTN","VPRDJ04",195,0)
 S:X PTF("arrivalDateTime")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ04",196,0)
 S X=$G(VPRF("DISCHARGE DATE"))
"RTN","VPRDJ04",197,0)
 S:X PTF("dischargeDateTime")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ04",198,0)
 S STN=$G(VPRF("FACILITY")),FAC="" I STN D
"RTN","VPRDJ04",199,0)
 . S X=$$IEN^XUAF4(STN),FAC=STN_U_$$NAME^XUAF4(X)
"RTN","VPRDJ04",200,0)
 S VISIT=+$$VISIT(DFN,ADM) I VISIT D
"RTN","VPRDJ04",201,0)
 . S PTF("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,VISIT,"")
"RTN","VPRDJ04",202,0)
 . S PTF("encounterName")=$$NAME^VPRDJ04(VISIT) Q:FAC
"RTN","VPRDJ04",203,0)
 . S X0=$G(^AUPNVSIT(+VISIT,0)),FAC=+$P(X0,U,6)
"RTN","VPRDJ04",204,0)
 . S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ04",205,0)
 . S:'FAC X=$$FAC^VPRD(+$P(X0,U,22)) ;location
"RTN","VPRDJ04",206,0)
 D:FAC FACILITY^VPRUTILS(FAC,"PTF")
"RTN","VPRDJ04",207,0)
 D ADD^VPRDJ("PTF")
"RTN","VPRDJ04",208,0)
 Q
"RTN","VPRDJ04",209,0)
 ;
"RTN","VPRDJ04",210,0)
VISIT(DFN,DATE) ; -- Return visit# for admission
"RTN","VPRDJ04",211,0)
 N X,Y
"RTN","VPRDJ04",212,0)
 S X=9999999-$P(DATE,".")_"."_$P(DATE,".",2)
"RTN","VPRDJ04",213,0)
 S Y=+$O(^AUPNVSIT("AAH",DFN,X,0))
"RTN","VPRDJ04",214,0)
 Q Y
"RTN","VPRDJ04E")
0^20^B10513040
"RTN","VPRDJ04E",1,0)
VPRDJ04E ;SLC/MKB -- EDIS ;6/25/12  16:11
"RTN","VPRDJ04E",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ04E",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ04E",4,0)
 ;
"RTN","VPRDJ04E",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ04E",6,0)
 ;
"RTN","VPRDJ04E",7,0)
 ;
"RTN","VPRDJ04E",8,0)
EDP1(ID) ; -- ED visit
"RTN","VPRDJ04E",9,0)
 N DA,EDP,X0,VST,FAC,LOC,LOC0,X,I,ICD
"RTN","VPRDJ04E",10,0)
 S DA=+$O(^EDP(230,"V",+$G(ID),0)) Q:DA<1
"RTN","VPRDJ04E",11,0)
 K ERRARRY S EDP=$G(^EDP(230,DA,0)),ERRARRY=EDP
"RTN","VPRDJ04E",12,0)
 S X0=$G(^AUPNVSIT(ID,0))
"RTN","VPRDJ04E",13,0)
 ;
"RTN","VPRDJ04E",14,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^VPRUTILS("visit",DFN,ID,"")
"RTN","VPRDJ04E",15,0)
 S VST("dateTime")=$$JSONDT^VPRUTILS(+X0)
"RTN","VPRDJ04E",16,0)
 S:$P(EDP,U,8) VST("stay","arrivalDateTime")=$$JSONDT^VPRUTILS($P(EDP,U,8))
"RTN","VPRDJ04E",17,0)
 S:$P(EDP,U,9) VST("stay","dischargeDateTime")=$$JSONDT^VPRUTILS($P(EDP,U,9))
"RTN","VPRDJ04E",18,0)
 S FAC=+$P(EDP,U,2),LOC=+$P(EDP,U,14),LOC0=$S(LOC:$G(^SC(LOC,0)),1:"")
"RTN","VPRDJ04E",19,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ04E",20,0)
 S:'FAC X=$$FAC^VPRD(LOC) D FACILITY^VPRUTILS(X,"VST")
"RTN","VPRDJ04E",21,0)
 S VST("categoryCode")="urn:va:encounter-category:OV"
"RTN","VPRDJ04E",22,0)
 S VST("categoryName")="Outpatient Visit"
"RTN","VPRDJ04E",23,0)
 S VST("patientClassCode")="urn:va:patient-class:EMER"
"RTN","VPRDJ04E",24,0)
 S VST("patientClassName")="Emergency"
"RTN","VPRDJ04E",25,0)
 ;
"RTN","VPRDJ04E",26,0)
 S X=$$CPT^VPRDVSIT(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","VPRDJ04E",27,0)
 I 'X S VST("typeName")=$S(LOC:$P(LOC0,U)_" VISIT",1:"EMERGENCY")
"RTN","VPRDJ04E",28,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^VPRDVSIT(X) I LOC D
"RTN","VPRDJ04E",29,0)
 . I 'X S AMIS=$$AMIS^VPRDVSIT($P(LOC0,U,7))
"RTN","VPRDJ04E",30,0)
 . S VST("locationUid")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),+LOC)
"RTN","VPRDJ04E",31,0)
 . S VST("locationName")=$P(LOC0,U)
"RTN","VPRDJ04E",32,0)
 . S X=$$SERV^VPRDVSIT($P(LOC0,U,20)) Q:X=""
"RTN","VPRDJ04E",33,0)
 . S:$L(X) VST("service")=X,VST("summary")="${"_VST("service")_"}:"_$P(LOC0,U)
"RTN","VPRDJ04E",34,0)
 S:$G(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","VPRDJ04E",35,0)
 ; X=$$POV^VPRDVSIT(ID) S:$L(X) VST("reasonUid")=$$SETNCS^VPRUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","VPRDJ04E",36,0)
 ;
"RTN","VPRDJ04E",37,0)
 S VST("reasonName")=$P($G(^EDP(230,+DA,1)),U)
"RTN","VPRDJ04E",38,0)
 S I=0 F  S I=$O(^EDP(230,+DA,4,I)) Q:I<1  I $P($G(^(I,0)),U,3) D  ;primary Dx
"RTN","VPRDJ04E",39,0)
 . S X=$G(^EDP(230,+DA,4,I,0)),VST("reasonName")=$P(X,U) Q:'$P(X,U,2)
"RTN","VPRDJ04E",40,0)
 . S ICD=$$ICD^VPRDVSIT($P(X,U,2)) Q:$L(ICD)'>1
"RTN","VPRDJ04E",41,0)
 . S VST("reasonUid")=$$SETNCS^VPRUTILS("icd",$P(ICD,U)),VST("reasonName")=$P(ICD,U,2)
"RTN","VPRDJ04E",42,0)
 ;
"RTN","VPRDJ04E",43,0)
 ; provider(s)
"RTN","VPRDJ04E",44,0)
 S EDP=$G(^EDP(230,DA,3)),I=0
"RTN","VPRDJ04E",45,0)
 I $P(EDP,U,5) S I=I+1 D PROV("VST",I,+$P(EDP,U,5),"P",1) ;primary/MD
"RTN","VPRDJ04E",46,0)
 I $P(EDP,U,6) S I=I+1 D PROV("VST",I,+$P(EDP,U,6),"N")   ;nurse
"RTN","VPRDJ04E",47,0)
 I $P(EDP,U,7) S I=I+1 D PROV("VST",I,+$P(EDP,U,7),"R")   ;resident
"RTN","VPRDJ04E",48,0)
 S:$L($P(EDP,U,8)) VST("comment")=$P(EDP,U,8)
"RTN","VPRDJ04E",49,0)
 S:$P(EDP,U,2) VST("appointmentStatus")=$$NAME(+$P(EDP,U,2))
"RTN","VPRDJ04E",50,0)
 ;
"RTN","VPRDJ04E",51,0)
 ; note(s)
"RTN","VPRDJ04E",52,0)
 D TIU^VPRDJ04(ID,.VST) K ^TMP("PXKENC",$J,ID)
"RTN","VPRDJ04E",53,0)
 D ADD^VPRDJ("VST")
"RTN","VPRDJ04E",54,0)
 Q
"RTN","VPRDJ04E",55,0)
 ;
"RTN","VPRDJ04E",56,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","VPRDJ04E",57,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^VPRUTILS("user","",+IEN,"")
"RTN","VPRDJ04E",58,0)
 S @ARR@("providers",I,"providerName")=$P($G(^VA(200,+IEN,0)),U)
"RTN","VPRDJ04E",59,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","VPRDJ04E",60,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","VPRDJ04E",61,0)
 Q
"RTN","VPRDJ04E",62,0)
 ;
"RTN","VPRDJ04E",63,0)
NAME(X) ; -- name of a code in #233.1
"RTN","VPRDJ04E",64,0)
 N Y S Y=$P($G(^EDPB(233.1,+$G(X),0)),U,2)
"RTN","VPRDJ04E",65,0)
 Q Y
"RTN","VPRDJ05")
0^8^B75546671
"RTN","VPRDJ05",1,0)
VPRDJ05 ;SLC/MKB -- Medications by order ;8/2/11  15:29
"RTN","VPRDJ05",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ05",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ05",4,0)
 ;
"RTN","VPRDJ05",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ05",6,0)
 ;
"RTN","VPRDJ05",7,0)
PS1(ID) ; -- med order
"RTN","VPRDJ05",8,0)
 K ERRARRY S ERRARRY=ID,ERRARRY(0)=ID
"RTN","VPRDJ05",9,0)
 N ORPK,TYPE S ID=+$G(ID)
"RTN","VPRDJ05",10,0)
 S ORPK=$$PKGID^ORX8(ID),TYPE=$E(ORPK,$L(ORPK)) S:TYPE=+TYPE TYPE="R"
"RTN","VPRDJ05",11,0)
 ;
"RTN","VPRDJ05",12,0)
 N ORUPCHUK,ORVP,ORPCL,ORDUZ,ORODT,ORSTRT,ORSTOP,ORL,ORTO,ORSTS,ORNP,ORPV,ORTX
"RTN","VPRDJ05",13,0)
 N MED,CLS,OI,X,LOC,FAC,DRUG,DA,CNT,VPRESP
"RTN","VPRDJ05",14,0)
 S X=$S(ORPK:$E(ORPK,$L(ORPK)),1:"Z") S:X=+X X="R" ;last char = PS file
"RTN","VPRDJ05",15,0)
 S CLS=$S("RSN"[X:"O","UV"[X:"I",1:$$GET1^DIQ(100,ID_",",10,"I"))
"RTN","VPRDJ05",16,0)
 S MED("uid")=$$SETUID^VPRUTILS("med",DFN,ID,"")
"RTN","VPRDJ05",17,0)
 S MED("orders",1,"orderUid")=$$SETUID^VPRUTILS("order",DFN,ID,"")
"RTN","VPRDJ05",18,0)
 S X=$$GET1^DIQ(100,ID_",",9,"I") S:X MED("orders",1,"predecessor")=$$SETUID^VPRUTILS("med",DFN,+X,"")
"RTN","VPRDJ05",19,0)
 S X=$$GET1^DIQ(100,ID_",",9.1,"I") S:X MED("orders",1,"successor")=$$SETUID^VPRUTILS("med",DFN,+X,"")
"RTN","VPRDJ05",20,0)
 S:ORPK MED("localId")=ORPK_";"_CLS
"RTN","VPRDJ05",21,0)
 D EN^ORX8(ID) S X="" F  S X=$O(ORUPCHUK(X)) Q:X=""  S:$D(ORUPCHUK(X))#2 @X=ORUPCHUK(X)
"RTN","VPRDJ05",22,0)
 S:$G(ORODT) MED("orders",1,"ordered")=$$JSONDT^VPRUTILS(ORODT)
"RTN","VPRDJ05",23,0)
 S:$G(ORNP) MED("orders",1,"providerUid")=$$SETUID^VPRUTILS("user","",+ORNP,""),MED("orders",1,"providerName")=$P(ORNP,U,2)
"RTN","VPRDJ05",24,0)
 S LOC=+$G(ORL),FAC=$$FAC^VPRD(LOC) I LOC D
"RTN","VPRDJ05",25,0)
 . S MED("orders",1,"locationCode")=$$SETFCURN^VPRUTILS("location",$P(FAC,U),LOC)
"RTN","VPRDJ05",26,0)
 . S MED("orders",1,"locationName")=$P(^SC(LOC,0),U)
"RTN","VPRDJ05",27,0)
 D FACILITY^VPRUTILS(FAC,"MED")
"RTN","VPRDJ05",28,0)
 S:$G(ORSTRT) MED("overallStart")=$$JSONDT^VPRUTILS(ORSTRT)
"RTN","VPRDJ05",29,0)
 S:$G(ORSTOP) MED("stopped")=$$JSONDT^VPRUTILS(ORSTOP)
"RTN","VPRDJ05",30,0)
 S MED("vaStatus")=$P($G(ORSTS),U,2),X=$$VALUE^VPRLIST("MED STATUS",+$G(ORSTS))
"RTN","VPRDJ05",31,0)
 S:X MED("medStatus")="urn:sct:"_$P(X,U,2),MED("medStatusName")=$P(X,U,3)
"RTN","VPRDJ05",32,0)
 ; MED("medStatusName")=$$STATUS^VPRDPSOR(+$G(ORSTS))
"RTN","VPRDJ05",33,0)
 ; MED("medStatus")=$$MEDSTAT(MED("medStatusName"))
"RTN","VPRDJ05",34,0)
 I CLS="I" D
"RTN","VPRDJ05",35,0)
 . S:$P($G(^SC(+$G(LOC),0)),U,25) MED("IMO")="true"
"RTN","VPRDJ05",36,0)
 . S X=$P($G(^OR(100,ID,3)),U,9) S:X MED("parent")=X
"RTN","VPRDJ05",37,0)
 I ORPK D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","VPRDJ05",38,0)
 S X=$S(ORPK["N":"N",1:CLS),MED("vaType")=X,MED("medType")=$$TYPE(X)
"RTN","VPRDJ05",39,0)
 I CLS="O" S MED("type")=$S(ORPK["N":"OTC",1:"Prescription")
"RTN","VPRDJ05",40,0)
 I $$IV G IV1^VPRDJ05V
"RTN","VPRDJ05",41,0)
 ;
"RTN","VPRDJ05",42,0)
ENA ; - Get order responses
"RTN","VPRDJ05",43,0)
 S OI=$$OI^ORX8(ID) I OI D
"RTN","VPRDJ05",44,0)
 . S X=$P(OI,U,2) S:$E(X,$L(X))=" " X=$E(X,1,$L(X)-1)
"RTN","VPRDJ05",45,0)
 . S MED("name")=X
"RTN","VPRDJ05",46,0)
 . D ZERO^PSS50P7(+$P(OI,U,3),,,"PSOI")
"RTN","VPRDJ05",47,0)
 . S MED("productFormName")=$P($G(^TMP($J,"PSOI",+$P(OI,U,3),.02)),U,2)
"RTN","VPRDJ05",48,0)
 . S:+$G(^TMP($J,"PSOI",+$P(OI,U,3),.09)) MED("supply")="true"
"RTN","VPRDJ05",49,0)
 D RESP^VPRDPSOR(ID,.VPRESP) ;order responses
"RTN","VPRDJ05",50,0)
 S DRUG=+$G(^TMP("PS",$J,"DD",1,0)) S:'DRUG DRUG=+$G(VPRESP("DRUG",1))
"RTN","VPRDJ05",51,0)
 S MED("sig")=$S(CLS="I":"Give: ",1:"")_$G(VPRESP("SIG",1)) ;ORTX(2)
"RTN","VPRDJ05",52,0)
 ;
"RTN","VPRDJ05",53,0)
ENB ; - Get dosages
"RTN","VPRDJ05",54,0)
 I '$O(^OR(100,ID,2,0)) D  ;single dose or OP
"RTN","VPRDJ05",55,0)
 . N VPRY,START,STOP,DUR,CONJ,MIN
"RTN","VPRDJ05",56,0)
 . S START=$G(ORSTRT),STOP=$G(ORSTOP),MIN=0
"RTN","VPRDJ05",57,0)
 . S CNT=0 F  S CNT=$O(VPRESP("INSTR",CNT)) Q:CNT<1  D
"RTN","VPRDJ05",58,0)
 .. K VPRY D DOSE(.VPRY,CNT) M MED("dosages",CNT)=VPRY
"RTN","VPRDJ05",59,0)
 .. ;determine start & stop per dose
"RTN","VPRDJ05",60,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","VPRDJ05",61,0)
 .. S DUR=$G(VPRY("complexDuration")),CONJ=$G(VPRY("complexConjunction"))
"RTN","VPRDJ05",62,0)
 .. S STOP=$S(DUR:$$STOP(START,DUR),1:STOP)
"RTN","VPRDJ05",63,0)
 .. S:START MED("dosages",CNT,"start")=$$JSONDT^VPRUTILS(START)
"RTN","VPRDJ05",64,0)
 .. S:STOP MED("dosages",CNT,"stop")=$$JSONDT^VPRUTILS(STOP)
"RTN","VPRDJ05",65,0)
 .. S X=$$RELTIME(START,STOP,DUR,MIN),MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X)
"RTN","VPRDJ05",66,0)
 .. I $E(CONJ)="T",DUR S START=STOP,MIN=X
"RTN","VPRDJ05",67,0)
 I $O(^OR(100,ID,2,0)) D
"RTN","VPRDJ05",68,0)
 . N DD,CONJ,VPRY,MIN
"RTN","VPRDJ05",69,0)
 . M CONJ=VPRESP("CONJ"),DUR=VPRESP("DAYS") S MIN=0
"RTN","VPRDJ05",70,0)
 . S (DA,CNT)=0 F  S DA=$O(^OR(100,ID,2,DA)) Q:DA<1  D  ;child orders
"RTN","VPRDJ05",71,0)
 .. K VPRESP,VPRY D RESP^VPRDPSOR(DA,.VPRESP),DOSE(.VPRY,1)
"RTN","VPRDJ05",72,0)
 .. S CNT=CNT+1 M MED("dosages",CNT)=VPRY
"RTN","VPRDJ05",73,0)
 .. S MED("dosages",CNT,"relativeStart")=MIN
"RTN","VPRDJ05",74,0)
 .. S MED("dosages",CNT,"complexConjunction")=$G(CONJ(CNT))
"RTN","VPRDJ05",75,0)
 .. S MED("dosages",CNT,"complexDuration")=$G(DUR(CNT))
"RTN","VPRDJ05",76,0)
 .. S MED("dosages",CNT,"relatedOrder")=DA
"RTN","VPRDJ05",77,0)
 .. S X=$P($G(^OR(100,DA,0)),U,8,9)
"RTN","VPRDJ05",78,0)
 .. S:$P(X,U) MED("dosages",CNT,"start")=$$JSONDT^VPRUTILS($P(X,U))
"RTN","VPRDJ05",79,0)
 .. S:$P(X,U,2) MED("dosages",CNT,"stop")=$$JSONDT^VPRUTILS($P(X,U,2))
"RTN","VPRDJ05",80,0)
 .. I $P(X,U,2)>$G(ORSTOP) S ORSTOP=$P(X,U,2) ;get last stop time
"RTN","VPRDJ05",81,0)
 .. S X=$$RELTIME($P(X,U),$P(X,U,2),$G(DUR(CNT)),MIN)
"RTN","VPRDJ05",82,0)
 .. S MED("dosages",CNT,"relativeStop")=$S($E(X)=".":0_X,1:X) S:$G(CONJ(CNT))="T" MIN=X
"RTN","VPRDJ05",83,0)
 .. S:'DRUG DD=+$G(VPRESP("DRUG",1)),DD(DD,DA)="" ;dispense drug(s)
"RTN","VPRDJ05",84,0)
 .. ; get ^TMP("PS",$J) from 1st child, if Inpt parent:
"RTN","VPRDJ05",85,0)
 .. I '$D(^TMP("PS",$J)) S ORPK=$$PKGID^ORX8(DA) D OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","VPRDJ05",86,0)
 . S MED("stopped")=$$JSONDT^VPRUTILS($G(ORSTOP)) ;reset from last child order
"RTN","VPRDJ05",87,0)
 . S DD=$O(DD(0)) I DD,'$O(DD(DD)) S DRUG=DD Q    ;1 drug for order
"RTN","VPRDJ05",88,0)
 . S (DD,CNT)=0 F  S DD=$O(DD(DD)) Q:DD<1  S DA=0 F  S DA=$O(DD(DD,DA)) Q:DA<1  S CNT=CNT+1 D NDF(DD,CNT,DA)
"RTN","VPRDJ05",89,0)
 ;
"RTN","VPRDJ05",90,0)
ENC ; - Get OP data
"RTN","VPRDJ05",91,0)
 I CLS="O",ORPK'["N" D
"RTN","VPRDJ05",92,0)
 . S MED("orders",1,"quantityOrdered")=$G(VPRESP("QTY",1))
"RTN","VPRDJ05",93,0)
 . S MED("orders",1,"daysSupply")=$G(VPRESP("SUPPLY",1))
"RTN","VPRDJ05",94,0)
 . S MED("orders",1,"vaRouting")=$G(VPRESP("PICKUP",1))
"RTN","VPRDJ05",95,0)
 . S MED("orders",1,"fillsAllowed")=$G(VPRESP("REFILLS",1))
"RTN","VPRDJ05",96,0)
 . S MED("patientInstruction")=$G(VPRESP("PI",1))
"RTN","VPRDJ05",97,0)
 . Q:ORPK["P"!(ORPK["S")  ;pending
"RTN","VPRDJ05",98,0)
 . N VPR,RX0,FILL,RFD,MW,REL
"RTN","VPRDJ05",99,0)
 . K ^TMP("PSOR",$J) D EN^PSOORDER(DFN,+ORPK)
"RTN","VPRDJ05",100,0)
 . S RX0=$G(^TMP("PSOR",$J,+ORPK,0)),MED("orders",1,"prescriptionId")=$P(RX0,U,5)
"RTN","VPRDJ05",101,0)
 . I '$G(VPRESP("QTY",1)) S MED("orders",1,"quantityOrdered")=$P(RX0,U,6)
"RTN","VPRDJ05",102,0)
 . I '$G(VPRESP("SUPPLY",1)) S MED("orders",1,"daysSupply")=$P(RX0,U,7)
"RTN","VPRDJ05",103,0)
 . S MED("orders",1,"fillsRemaining")=$P(RX0,U,9),MED("lastFilled")=$$JSONDT^VPRUTILS($P(RX0,U,3))
"RTN","VPRDJ05",104,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"REF",I)) Q:I<1  S X=$G(^(I,0)),FILL(+X)=X
"RTN","VPRDJ05",105,0)
 . S I=0 F  S I=$O(^TMP("PSOR",$J,+ORPK,"RPAR",I)) Q:I<1  S X=$G(^(I,0)),$P(X,U,14)=1,FILL(+X)=X
"RTN","VPRDJ05",106,0)
 . S (I,RFD)=0 F  S RFD=$O(FILL(RFD)) Q:RFD<1  S X=$G(FILL(RFD)) D  ;sort 1st
"RTN","VPRDJ05",107,0)
 .. S I=I+1,MW=$P($P(X,U,10),";"),REL=$P($P(X,U,8),".")
"RTN","VPRDJ05",108,0)
 .. S MED("fills",I,"dispenseDate")=$$JSONDT^VPRUTILS($P(RFD,"."))
"RTN","VPRDJ05",109,0)
 .. S MED("fills",I,"releaseDate")=$$JSONDT^VPRUTILS(REL)
"RTN","VPRDJ05",110,0)
 .. S MED("fills",I,"routing")=MW
"RTN","VPRDJ05",111,0)
 .. S MED("fills",I,"quantityDispensed")=$P(X,U,4)
"RTN","VPRDJ05",112,0)
 .. S MED("fills",I,"daysSupplyDispensed")=$P(X,U,5)
"RTN","VPRDJ05",113,0)
 .. S:$P(X,U,14) MED("fills",I,"partial")=1 ;"true"
"RTN","VPRDJ05",114,0)
 . S X=$S($P(RX0,U,11):$P(RX0,U,11),$P(RX0,U,10):$P(RX0,U,10),1:0)
"RTN","VPRDJ05",115,0)
 . S:X MED("orders",1,"fillCost")=X
"RTN","VPRDJ05",116,0)
 . S X=$$GET1^PSODI(52,+ORPK_",",26,"I") S:X MED("overallStop")=$$JSONDT^VPRUTILS($P(X,U,2)) ;1^date
"RTN","VPRDJ05",117,0)
 ;
"RTN","VPRDJ05",118,0)
ENQ ; finish
"RTN","VPRDJ05",119,0)
 D:DRUG NDF(+DRUG)
"RTN","VPRDJ05",120,0)
 S MED("qualifiedName")=$G(MED("name"))
"RTN","VPRDJ05",121,0)
 S X=+$P($G(^TMP("PS",$J,"RXN",0)),U,5)
"RTN","VPRDJ05",122,0)
 S:X MED("orders",1,"pharmacistUid")=$$SETUID^VPRUTILS("user","",X,""),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ05",123,0)
 K ^TMP("PS",$J),^TMP($J,"PSOI"),^TMP("PSOR",$J)
"RTN","VPRDJ05",124,0)
 D ADD^VPRDJ("MED")
"RTN","VPRDJ05",125,0)
 Q
"RTN","VPRDJ05",126,0)
 ;
"RTN","VPRDJ05",127,0)
IV() ; -- Return 1 or 0, if order is for IV/infusion
"RTN","VPRDJ05",128,0)
 I ORPK["V" Q 1
"RTN","VPRDJ05",129,0)
 I $P($G(ORTO),U,2)?1"IV".E Q 1
"RTN","VPRDJ05",130,0)
 I +$G(ORPCL)=130 Q 1
"RTN","VPRDJ05",131,0)
 I $G(^TMP("PS",$J,"B",0)) Q 1
"RTN","VPRDJ05",132,0)
 Q 0
"RTN","VPRDJ05",133,0)
 ;
"RTN","VPRDJ05",134,0)
DOSE(Y,N) ; -- return dosage data from VPRESP(ID,N) to Y("name")
"RTN","VPRDJ05",135,0)
 N X,DUR,CONJ S N=+$G(N,1) K Y
"RTN","VPRDJ05",136,0)
 S X=$P($G(VPRESP("DOSE",N)),"&",1,2) ; units per dose + noun ??
"RTN","VPRDJ05",137,0)
 S Y("dose")=$S($L(X)>2:$TR(X,"&"," "),1:$P(X,"&"))
"RTN","VPRDJ05",138,0)
 S Y("units")=$P(X,"&",2)
"RTN","VPRDJ05",139,0)
 S X=+$G(VPRESP("ROUTE",N)) D ALL^PSS51P2(X,,,,"VPRTE")
"RTN","VPRDJ05",140,0)
 S Y("routeName")=$G(^TMP($J,"VPRTE",X,1))
"RTN","VPRDJ05",141,0)
 S X=$G(VPRESP("SCHEDULE",N)) S:$L(X) Y("scheduleName")=X
"RTN","VPRDJ05",142,0)
 S X=$G(VPRESP("DAYS",N)) S:$L(X) Y("complexDuration")=X,DUR=X
"RTN","VPRDJ05",143,0)
 S X=$G(VPRESP("CONJ",N)) S:$L(X) Y("complexConjunction")=X,CONJ=X
"RTN","VPRDJ05",144,0)
 I $L($G(CONJ)),'$L($G(DUR)) D  ;look ahead to find duration
"RTN","VPRDJ05",145,0)
 . N I,D S I=$O(VPRESP("DAYS",N)),D=$S(I:$G(VPRESP("DAYS",I)),1:"")
"RTN","VPRDJ05",146,0)
 . S:$L(D) Y("complexDuration")=D
"RTN","VPRDJ05",147,0)
 K ^TMP($J,"VPRTE")
"RTN","VPRDJ05",148,0)
 Q
"RTN","VPRDJ05",149,0)
 ;
"RTN","VPRDJ05",150,0)
STOP(BEG,X) ; -- Return date after adding X to BEG
"RTN","VPRDJ05",151,0)
 N D,H,M,UNT,Y
"RTN","VPRDJ05",152,0)
 S Y=BEG,(D,H,M)=0,UNT=$P(X,+X,2),X=+X
"RTN","VPRDJ05",153,0)
 S UNT=$S($E(UNT)=" ":$E(UNT,2),1:$E(UNT)) I UNT="" S UNT="D"
"RTN","VPRDJ05",154,0)
 S:UNT="L" D=30*X
"RTN","VPRDJ05",155,0)
 S:UNT="W" D=7*X
"RTN","VPRDJ05",156,0)
 S:UNT="D" D=X
"RTN","VPRDJ05",157,0)
 S:UNT="H" H=X
"RTN","VPRDJ05",158,0)
 S:UNT="M" M=X
"RTN","VPRDJ05",159,0)
 S Y=$$FMADD^XLFDT(BEG,D,H,M)
"RTN","VPRDJ05",160,0)
 Q Y
"RTN","VPRDJ05",161,0)
 ;
"RTN","VPRDJ05",162,0)
NDF(DRUG,VPI,ORD) ; -- Set NDF data for dispense DRUG ien
"RTN","VPRDJ05",163,0)
 ; code ^ name ^ vuid [^ role ^ concentration ^ order]
"RTN","VPRDJ05",164,0)
 N LEN,VPRX,STR,VUID,X,I
"RTN","VPRDJ05",165,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","VPRDJ05",166,0)
 D EN^PSSDI(50,,50,"901;902",DRUG,"VPRX")
"RTN","VPRDJ05",167,0)
 S STR=$S($G(VPRX(50,DRUG,901)):$G(VPRX(50,DRUG,901))_" "_$G(VPRX(50,DRUG,902)),1:"")
"RTN","VPRDJ05",168,0)
 D NDF^PSS50(DRUG,,,,,"NDF") S VPI=+$G(VPI,1)
"RTN","VPRDJ05",169,0)
 ;
"RTN","VPRDJ05",170,0)
 S MED("products",VPI,"ingredientRole")="urn:sct:410942007" ;Drug
"RTN","VPRDJ05",171,0)
 S:$G(ORD) MED("products",VPI,"relatedOrder")=ORD
"RTN","VPRDJ05",172,0)
 S:$G(STR) MED("products",VPI,"strength")=STR
"RTN","VPRDJ05",173,0)
 S X=$G(MED("name")) S:$L(X) MED("products",VPI,"ingredientName")=X
"RTN","VPRDJ05",174,0)
 ;
"RTN","VPRDJ05",175,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) ;VA Generic
"RTN","VPRDJ05",176,0)
 S MED("products",VPI,"ingredientCode")="urn:vuid:"_$$VUID^VPRD(+X,50.6)
"RTN","VPRDJ05",177,0)
 S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","VPRDJ05",178,0)
 ;
"RTN","VPRDJ05",179,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) ;VA Product
"RTN","VPRDJ05",180,0)
 S MED("products",VPI,"suppliedCode")="urn:vuid:"_$$VUID^VPRD(+X,50.68)
"RTN","VPRDJ05",181,0)
 S MED("products",VPI,"suppliedName")=$P(X,U,2)
"RTN","VPRDJ05",182,0)
 ;
"RTN","VPRDJ05",183,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) ;VA Drug Class
"RTN","VPRDJ05",184,0)
 S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","VPRDJ05",185,0)
 S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","VPRDJ05",186,0)
 ;
"RTN","VPRDJ05",187,0)
 K ^TMP($J,"NDF")
"RTN","VPRDJ05",188,0)
 Q
"RTN","VPRDJ05",189,0)
 ;
"RTN","VPRDJ05",190,0)
MEDSTAT(X) ;
"RTN","VPRDJ05",191,0)
 N Y S Y="urn:sct:"
"RTN","VPRDJ05",192,0)
 S Y=Y_$S(X="active":"55561003",X="historical":"392521001","hold":"421139008",1:"73425007")
"RTN","VPRDJ05",193,0)
 Q Y
"RTN","VPRDJ05",194,0)
 ;
"RTN","VPRDJ05",195,0)
TYPE(VA) ;
"RTN","VPRDJ05",196,0)
 N RESULT,TXT,Y
"RTN","VPRDJ05",197,0)
 S RESULT="",TXT="urn:sct:"
"RTN","VPRDJ05",198,0)
 S Y=$$VALUE^VPRLIST("MED TYPE",VA)
"RTN","VPRDJ05",199,0)
 S:$P(Y,U,2) RESULT=TXT_$P(Y,U,2)
"RTN","VPRDJ05",200,0)
 ; RESULT=$S(VA="N":TXT_"329505003",VA="O":TXT_"73639000",1:TXT_"105903003")
"RTN","VPRDJ05",201,0)
 Q RESULT
"RTN","VPRDJ05",202,0)
 ;
"RTN","VPRDJ05",203,0)
RELTIME(START,STOP,DUR,MIN) ; -- Return #min for dose
"RTN","VPRDJ05",204,0)
 N Y S Y=0
"RTN","VPRDJ05",205,0)
 I START>0,STOP>0 S Y=$$FMDIFF^XLFDT(STOP,START,2)/60 I 1
"RTN","VPRDJ05",206,0)
 E  I DUR S Y=$$TOMIN(DUR) I 1
"RTN","VPRDJ05",207,0)
 E  S Y=$G(VPRESP("SUPPLY",1))*1440
"RTN","VPRDJ05",208,0)
 S Y=$S(Y:Y+MIN,1:MIN)
"RTN","VPRDJ05",209,0)
 Q Y
"RTN","VPRDJ05",210,0)
 ;
"RTN","VPRDJ05",211,0)
TOMIN(DUR) ;
"RTN","VPRDJ05",212,0)
 N RESULT,TIME,UNIT
"RTN","VPRDJ05",213,0)
 S UNIT=$$UP^XLFSTR($E($P(DUR," ",2)))
"RTN","VPRDJ05",214,0)
 I UNIT="" Q 0
"RTN","VPRDJ05",215,0)
 S TIME=$P(DUR," ")
"RTN","VPRDJ05",216,0)
 S RESULT=$S(UNIT="M":TIME,UNIT="H":TIME*60,UNIT="D":TIME*1440,UNIT="W":TIME*10080,UNIT="L":TIME*43200,1:0)
"RTN","VPRDJ05",217,0)
 Q RESULT
"RTN","VPRDJ05V")
0^18^B20733500
"RTN","VPRDJ05V",1,0)
VPRDJ05V ;SLC/MKB -- IV/Infusions ;8/2/11  15:29
"RTN","VPRDJ05V",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ05V",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ05V",4,0)
 ;
"RTN","VPRDJ05V",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ05V",6,0)
 ;
"RTN","VPRDJ05V",7,0)
 ;
"RTN","VPRDJ05V",8,0)
IV1 ; -- IV fluid, Infusion order [continued from VPRDJ05]
"RTN","VPRDJ05V",9,0)
 ; [Also expects ORPK, OEL^PSOORRL data]
"RTN","VPRDJ05V",10,0)
 N PS,PS0,X,X0,RTE,I,ADD,BASE
"RTN","VPRDJ05V",11,0)
 S MED("vaType")="V",MED("medType")="urn:sct:105903003"
"RTN","VPRDJ05V",12,0)
 S (ADD,BASE)=""
"RTN","VPRDJ05V",13,0)
 I ORPK,$D(^TMP("PS",$J)) D  G IVQ
"RTN","VPRDJ05V",14,0)
 . M PS=^TMP("PS",$J) S PS0=$G(PS(0)),MED("name")=$P(PS0,U)
"RTN","VPRDJ05V",15,0)
 . S X=$G(PS("MDR",1,0)) S:$L(X) MED("dosages",1,"routeName")=X
"RTN","VPRDJ05V",16,0)
 . S X=$P($G(PS("SCH",1,0)),U) S:$L(X) MED("dosages",1,"scheduleName")=X
"RTN","VPRDJ05V",17,0)
 . S X=$P(PS0,U,2) I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","VPRDJ05V",18,0)
 . E  S MED("dosages",1,"ivRate")=X
"RTN","VPRDJ05V",19,0)
 . S X=$G(PS("IVLIM",0)) S:$L(X) MED("dosages",1,"restriction")=$$IVLIM(X)
"RTN","VPRDJ05V",20,0)
 . S X=+$P($G(PS("RXN",0)),U,5)
"RTN","VPRDJ05V",21,0)
 . S:X MED("orders",1,"pharmacistUid")=$$SETUID^VPRUTILS("user","",X,""),MED("orders",1,"pharmacistName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ05V",22,0)
 . D IVP
"RTN","VPRDJ05V",23,0)
 ; no med in PS (pending or cancelled), so use Order values
"RTN","VPRDJ05V",24,0)
 S RTE=+$$VALUE^ORX8(ID,"ROUTE") D ALL^PSS51P2(RTE,,,,"VPRTE")
"RTN","VPRDJ05V",25,0)
 S MED("dosages",1,"routeName")=$G(^TMP($J,"VPRTE",RTE,1))
"RTN","VPRDJ05V",26,0)
 S MED("dosages",1,"scheduleName")=$$VALUE^ORX8(ID,"SCHEDULE")
"RTN","VPRDJ05V",27,0)
 S X=$$VALUE^ORX8(ID,"RATE")
"RTN","VPRDJ05V",28,0)
 I X["INFUSE OVER" S MED("dosages",1,"duration")=X
"RTN","VPRDJ05V",29,0)
 E  S MED("dosages",1,"ivRate")=X
"RTN","VPRDJ05V",30,0)
 S I=0 F  S I=$O(^OR(100,ID,.1,I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","VPRDJ05V",31,0)
 . S X0=$G(^ORD(101.43,X,0)),MED("name")=$P(X0,U)
"RTN","VPRDJ05V",32,0)
 . S MED("products",I,"ingredientName")=$P(X0,U)
"RTN","VPRDJ05V",33,0)
 S X=$$VALUE^ORX8(ID,"DAYS") I $L(X) D  S MED("dosages",1,"restriction")=X
"RTN","VPRDJ05V",34,0)
 . I X?1.A1.N S X=$$IVLIM(X) Q
"RTN","VPRDJ05V",35,0)
 . ; CPRS format = "for a total of 3 doses" or "with total volume 100ml"
"RTN","VPRDJ05V",36,0)
 . F I=1:1:$L(X) I $E(X,I)=+$E(X,I) S X=$E(X,I,$L(X)) Q
"RTN","VPRDJ05V",37,0)
IVQ ; done
"RTN","VPRDJ05V",38,0)
 K ^TMP("PS",$J),^TMP($J,"VPRTE")
"RTN","VPRDJ05V",39,0)
 S MED("qualifiedName")=ADD_$S($L(ADD)&$L(BASE):" in ",1:"")_BASE
"RTN","VPRDJ05V",40,0)
 D ADD^VPRDJ("MED")
"RTN","VPRDJ05V",41,0)
 Q
"RTN","VPRDJ05V",42,0)
 ;
"RTN","VPRDJ05V",43,0)
IVP ; -- add IV products
"RTN","VPRDJ05V",44,0)
 ; [expects PS("A") & PS("B") data arrays from IV1]
"RTN","VPRDJ05V",45,0)
 N VPI,N,NAME,IEN,DRUG,OI,X S N=0
"RTN","VPRDJ05V",46,0)
 ; IV Additives
"RTN","VPRDJ05V",47,0)
 S VPI=0 F  S VPI=$O(PS("A",VPI)) Q:VPI<1  D
"RTN","VPRDJ05V",48,0)
 . K ^TMP($J,"VPRPSIV") S NAME=$P($G(PS("A",VPI,0)),U)
"RTN","VPRDJ05V",49,0)
 . D ZERO^PSS52P6("",NAME,"","VPRPSIV")
"RTN","VPRDJ05V",50,0)
 . S IEN=$O(^TMP($J,"VPRPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","VPRDJ05V",51,0)
 . S OI=$G(^TMP($J,"VPRPSIV",IEN,15)) S:OI OI=$$NAME^PSS50P7(+OI)
"RTN","VPRDJ05V",52,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"A",OI)
"RTN","VPRDJ05V",53,0)
 . S MED("products",N,"strength")=$P($G(PS("A",VPI,0)),U,2)
"RTN","VPRDJ05V",54,0)
 ; IV Base Solutions
"RTN","VPRDJ05V",55,0)
 S VPI=0 F  S VPI=$O(PS("B",VPI)) Q:VPI<1  D
"RTN","VPRDJ05V",56,0)
 . K ^TMP($J,"VPRPSIV") S NAME=$P($G(PS("B",VPI,0)),U)
"RTN","VPRDJ05V",57,0)
 . D ZERO^PSS52P7("",NAME,"","VPRPSIV")
"RTN","VPRDJ05V",58,0)
 . S IEN=$O(^TMP($J,"VPRPSIV",0)),DRUG=+$G(^(IEN,1)) Q:IEN<1
"RTN","VPRDJ05V",59,0)
 . S OI=$G(^TMP($J,"VPRPSIV",IEN,9)) S:OI OI=$$NAME^PSS50P7(+OI)
"RTN","VPRDJ05V",60,0)
 . S N=N+1 D:DRUG NDF(DRUG,N,"B",OI)
"RTN","VPRDJ05V",61,0)
 . S MED("products",N,"volume")=$P($G(PS("B",VPI,0)),U,2)
"RTN","VPRDJ05V",62,0)
 K ^TMP($J,"VPRPSIV")
"RTN","VPRDJ05V",63,0)
 Q 
"RTN","VPRDJ05V",64,0)
 ;
"RTN","VPRDJ05V",65,0)
NDF(DRUG,VPI,ROLE,OI) ; -- Set NDF data for dispense DRUG ien
"RTN","VPRDJ05V",66,0)
 ; code ^ name ^ vuid ^ role ^ concentration
"RTN","VPRDJ05V",67,0)
 N VPRX,VUID,X,I,CONC,NM
"RTN","VPRDJ05V",68,0)
 S DRUG=+$G(DRUG) Q:'DRUG
"RTN","VPRDJ05V",69,0)
 D NDF^PSS50(DRUG,,,,,"NDF")
"RTN","VPRDJ05V",70,0)
 S CONC=$P($G(PS(ROLE,VPI,0)),U,2),NM=""
"RTN","VPRDJ05V",71,0)
 ;
"RTN","VPRDJ05V",72,0)
 S MED("products",VPI,"ingredientRole")=$$ROLE(ROLE)
"RTN","VPRDJ05V",73,0)
 S OI=$G(OI) S:$L(OI) MED("products",VPI,"ingredientName")=OI,NM=OI
"RTN","VPRDJ05V",74,0)
 ; NM=X
"RTN","VPRDJ05V",75,0)
 ;
"RTN","VPRDJ05V",76,0)
 S X=$G(^TMP($J,"NDF",DRUG,20)) I X D  ;VA Generic
"RTN","VPRDJ05V",77,0)
 . S MED("products",VPI,"ingredientCode")="urn:vuid:"_$$VUID^VPRD(+X,50.6)
"RTN","VPRDJ05V",78,0)
 . S MED("products",VPI,"ingredientCodeName")=$P(X,U,2)
"RTN","VPRDJ05V",79,0)
 ;
"RTN","VPRDJ05V",80,0)
 S X=$G(^TMP($J,"NDF",DRUG,22)) I X D  ;VA Product
"RTN","VPRDJ05V",81,0)
 . S MED("products",VPI,"suppliedCode")="urn:vuid:"_$$VUID^VPRD(+X,50.68)
"RTN","VPRDJ05V",82,0)
 . S MED("products",VPI,"suppliedName")=$P(X,U,2)_" "_CONC
"RTN","VPRDJ05V",83,0)
 . S:NM="" NM=$P(X,U,2)
"RTN","VPRDJ05V",84,0)
 ;
"RTN","VPRDJ05V",85,0)
 S X=$G(^TMP($J,"NDF",DRUG,25)) I X D  ;VA Drug Class
"RTN","VPRDJ05V",86,0)
 . S MED("products",VPI,"drugClassCode")="urn:vadc:"_$P(X,U,2)
"RTN","VPRDJ05V",87,0)
 . S MED("products",VPI,"drugClassName")=$P(X,U,3)
"RTN","VPRDJ05V",88,0)
 . S:NM="" NM=$P(X,U,3)
"RTN","VPRDJ05V",89,0)
 ;
"RTN","VPRDJ05V",90,0)
 I $L(NM),ROLE="A" S ADD=ADD_$S($L(ADD):", ",1:"")_NM
"RTN","VPRDJ05V",91,0)
 I $L(NM),ROLE="B" S BASE=BASE_$S($L(BASE):", ",1:"")_NM
"RTN","VPRDJ05V",92,0)
 K ^TMP($J,"NDF",DRUG)
"RTN","VPRDJ05V",93,0)
 Q
"RTN","VPRDJ05V",94,0)
 ;
"RTN","VPRDJ05V",95,0)
IVLIM(X) ; -- Return expanded version of IV Limit X
"RTN","VPRDJ05V",96,0)
 I '$L($G(X)) Q ""
"RTN","VPRDJ05V",97,0)
 N Y,VAL,UNT,I
"RTN","VPRDJ05V",98,0)
 S Y="",X=$$UP^XLFSTR(X)
"RTN","VPRDJ05V",99,0)
 I X?1"DOSES".E S X="A"_$P(X,"DOSES",2)
"RTN","VPRDJ05V",100,0)
 S UNT=$E(X),VAL=0 F I=2:1:$L(X) I $E(X,I) S VAL=$E(X,I,$L(X)) Q
"RTN","VPRDJ05V",101,0)
 I UNT="A" S Y=+VAL_$S(+VAL>1:" doses",1:" dose")
"RTN","VPRDJ05V",102,0)
 I UNT="D" S Y=+VAL_$S(+VAL>1:" days",1:" day")
"RTN","VPRDJ05V",103,0)
 I UNT="H" S Y=+VAL_$S(+VAL>1:" hours",1:" hour")
"RTN","VPRDJ05V",104,0)
 I UNT="C" S Y=+VAL_" CC"
"RTN","VPRDJ05V",105,0)
 I UNT="M" S Y=+VAL_" ml"
"RTN","VPRDJ05V",106,0)
 I UNT="L" S Y=+VAL_" L"
"RTN","VPRDJ05V",107,0)
 Q Y
"RTN","VPRDJ05V",108,0)
 ;
"RTN","VPRDJ05V",109,0)
ROLE(X) ;
"RTN","VPRDJ05V",110,0)
 N RESULT,TXT
"RTN","VPRDJ05V",111,0)
 S RESULT="",TXT="urn:sct:"
"RTN","VPRDJ05V",112,0)
 S RESULT=$S(X="A":TXT_"418804003",X="B":TXT_"418297009",1:TXT_"410942007")
"RTN","VPRDJ05V",113,0)
 Q RESULT
"RTN","VPRDJ06")
0^9^B44643473
"RTN","VPRDJ06",1,0)
VPRDJ06 ;SLC/MKB -- Laboratory ;6/25/12  16:11
"RTN","VPRDJ06",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ06",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ06",4,0)
 ;
"RTN","VPRDJ06",5,0)
 ; All tags expect DFN, ID, LRDFN, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ06",6,0)
 ;               & ^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT,VPRN)
"RTN","VPRDJ06",7,0)
 ;
"RTN","VPRDJ06",8,0)
 ;
"RTN","VPRDJ06",9,0)
CH1 ; -- lab ID = CH;VPRIDT;VPRN
"RTN","VPRDJ06",10,0)
 N LAB,CDT,LR0,LRI,X,X0,SPC,LOINC,ORD,CMMT
"RTN","VPRDJ06",11,0)
 K ERRARRY M ERRARRY=^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRN)
"RTN","VPRDJ06",12,0)
 ;
"RTN","VPRDJ06",13,0)
 S LAB("localId")=ID
"RTN","VPRDJ06",14,0)
 S LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID,"")
"RTN","VPRDJ06",15,0)
 S LAB("categoryCode")="urn:va:lab-category:CH"
"RTN","VPRDJ06",16,0)
 S LAB("categoryName")="Laboratory"
"RTN","VPRDJ06",17,0)
 S CDT=9999999-VPRIDT,LAB("observed")=$$DATE(CDT)
"RTN","VPRDJ06",18,0)
 S LR0=$G(^LR(LRDFN,"CH",VPRIDT,0)),LRI=$G(^(VPRN))
"RTN","VPRDJ06",19,0)
 S LAB("resulted")=$$DATE($P(LR0,U,3)),SPC=+$P(LR0,U,5) I SPC D
"RTN","VPRDJ06",20,0)
 . N IENS,VPRY S IENS=SPC_","
"RTN","VPRDJ06",21,0)
 . D GETS^DIQ(61,IENS,".01;4.1",,"VPRY")
"RTN","VPRDJ06",22,0)
 . S LAB("specimen")=$G(VPRY(61,IENS,.01))
"RTN","VPRDJ06",23,0)
 . S LAB("sample")=$G(VPRY(61,IENS,4.1))
"RTN","VPRDJ06",24,0)
 S LAB("groupName")=$P(LR0,U,6) ;accession#
"RTN","VPRDJ06",25,0)
 S LAB("groupUid")=$$SETUID^VPRUTILS("accession",DFN,$P(ID,";",1,2),"")
"RTN","VPRDJ06",26,0)
 S X=+$P(LR0,U,14) D  D FACILITY^VPRUTILS(X,"LAB")
"RTN","VPRDJ06",27,0)
 . S:X X=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","VPRDJ06",28,0)
 . I 'X S X=$$FAC^VPRD ;local stn#^name
"RTN","VPRDJ06",29,0)
 S X0=$G(^TMP("LRRR",$J,DFN,"CH",VPRIDT,VPRN))
"RTN","VPRDJ06",30,0)
 S LAB("typeId")=+X0,LAB("typeName")=$P($G(^LAB(60,+X0,0)),U) ;$P(X0,U,10)?
"RTN","VPRDJ06",31,0)
 S:$L($P(X0,U,2)) LAB("result")=$P(X0,U,2)
"RTN","VPRDJ06",32,0)
 S:$L($P(X0,U,4)) LAB("units")=$P(X0,U,4)
"RTN","VPRDJ06",33,0)
 S X=$P(X0,U,5) I $L(X),X["-" S LAB("low")=$$TRIM^XLFSTR($P(X,"-")),LAB("high")=$$TRIM^XLFSTR($P(X,"-",2))
"RTN","VPRDJ06",34,0)
 S X=$P(X0,U,3) I $L(X) D
"RTN","VPRDJ06",35,0)
 . N Y S Y=$$VALUE^VPRLIST("LAB INTERPRETATION CODE",X) Q:$E(Y)=U
"RTN","VPRDJ06",36,0)
 . S LAB("interpretationCode")="urn:hl7:observation-interpretation:"_$P(Y,U,2)
"RTN","VPRDJ06",37,0)
 . S LAB("interpretationName")=$P(Y,U,3)
"RTN","VPRDJ06",38,0)
 . ;:X["*" X=$S(X["L":"LL",1:"HH")
"RTN","VPRDJ06",39,0)
 . ; LAB("interpretationCode")="urn:hl7:observation-interpretation:"_X
"RTN","VPRDJ06",40,0)
 . ; LAB("interpretationName")=$S(X["L":"Low",1:"High")_$S($L(X)>1:" alert",1:"")
"RTN","VPRDJ06",41,0)
 S LAB("displayName")=$S($L($P(X0,U,15)):$P(X0,U,15),1:LAB("test"))
"RTN","VPRDJ06",42,0)
 S ORD=+$P(X0,U,17) S:ORD LAB("labOrderId")=ORD
"RTN","VPRDJ06",43,0)
 S X=$$ORDER^VPRDLR(ORD,+X0) S:X LAB("orderUid")=$$SETUID^VPRUTILS("order",DFN,X,"")
"RTN","VPRDJ06",44,0)
 S LOINC=$P($P(LRI,U,3),"!",3) S:'LOINC LOINC=$$LOINC(+X0,SPC)
"RTN","VPRDJ06",45,0)
 I LOINC S LAB("typeCode")="urn:lnc:"_$$GET1^DIQ(95.3,+LOINC_",",.01),LAB("vuid")="urn:vuid:"_$$VUID^VPRD(+LOINC,95.3)
"RTN","VPRDJ06",46,0)
 I 'LOINC S LAB("typeCode")="urn:va:ien:60:"_+X0_":"_SPC
"RTN","VPRDJ06",47,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",VPRIDT,"N")) M CMMT=^("N") S LAB("comment")=$$STRING^VPRD(.CMMT)
"RTN","VPRDJ06",48,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",49,0)
 D ADD^VPRDJ("LAB")
"RTN","VPRDJ06",50,0)
 Q
"RTN","VPRDJ06",51,0)
 ;
"RTN","VPRDJ06",52,0)
LOINC(TEST,SPEC) ; -- find LOINC ien, if not saved with result
"RTN","VPRDJ06",53,0)
 N Y,X,LAM,I S Y=""
"RTN","VPRDJ06",54,0)
 I '$G(TEST)!'$G(SPEC) Q ""
"RTN","VPRDJ06",55,0)
 S Y=+$G(^LAB(60,TEST,1,SPEC,95.3)) I 'Y D
"RTN","VPRDJ06",56,0)
 . S LAM=$G(^LAB(60,TEST,64)),X=$S($P(LAM,U,2):$P(LAM,U,2),LAM:+LAM,1:"") Q:'X
"RTN","VPRDJ06",57,0)
 . S I=+$O(^LAM(X,5,SPEC,1,0)),Y=+$P($G(^(I,1)),U) Q:Y  ;first, node 1
"RTN","VPRDJ06",58,0)
 . S Y=$P($G(^LAM(X,9)),U) ;default LOINC
"RTN","VPRDJ06",59,0)
 Q Y
"RTN","VPRDJ06",60,0)
 ;
"RTN","VPRDJ06",61,0)
MI ; -- microbiology loop on ^PXRMINDX(63,"PI",DFN,"M;x;n"
"RTN","VPRDJ06",62,0)
 ;  from LR^VPRDJ0 [expects DFN,LRDFN,VPRSUB,VPRIDT]
"RTN","VPRDJ06",63,0)
 N CDT,IDX
"RTN","VPRDJ06",64,0)
 S CDT=9999999-VPRIDT,VPRITM="M;A;"
"RTN","VPRDJ06",65,0)
 F  S VPRITM=$O(^PXRMINDX(63,"PI",DFN,VPRITM)) Q:$E(VPRITM,1,4)'="M;A;"  D
"RTN","VPRDJ06",66,0)
 . Q:'$D(^PXRMINDX(63,"PI",DFN,VPRITM,CDT))
"RTN","VPRDJ06",67,0)
 . S IDX=LRDFN_";MI;"_VPRIDT
"RTN","VPRDJ06",68,0)
 . F  S IDX=$O(^PXRMINDX(63,"PI",DFN,VPRITM,CDT,IDX)) Q:IDX=""  S ID=$P(IDX,";",2,99) D MI1
"RTN","VPRDJ06",69,0)
 Q
"RTN","VPRDJ06",70,0)
 ;
"RTN","VPRDJ06",71,0)
MI1 ; -- microbiology ID = MI;VPRIDT;mult;ien;node
"RTN","VPRDJ06",72,0)
 N LAB,CDT,X,CMMT,LR0,FAC,VPRM,ACC,OITM,OID K ERRARRY
"RTN","VPRDJ06",73,0)
 S ERRARRY=ID,ERRARRY(0)=ID
"RTN","VPRDJ06",74,0)
 ;
"RTN","VPRDJ06",75,0)
 S LAB("localId")=ID,LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID,"")
"RTN","VPRDJ06",76,0)
 ; LAB("organizerType")="accession" ;??
"RTN","VPRDJ06",77,0)
 S LAB("categoryCode")="urn:va:lab-category:MI"
"RTN","VPRDJ06",78,0)
 S LAB("categoryName")="Microbiology"
"RTN","VPRDJ06",79,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",80,0)
 S CDT=9999999-VPRIDT,LAB("observed")=$$DATE(CDT)
"RTN","VPRDJ06",81,0)
 ; X0=$G(^TMP("LRRR",$J,DFN,"MI",VPRIDT,VPRN)) Q:$L($P(X0,U))'>1
"RTN","VPRDJ06",82,0)
 S LR0=$G(^LR(LRDFN,"MI",VPRIDT,0)),LAB("resulted")=$$DATE($P(LR0,U,3))
"RTN","VPRDJ06",83,0)
 S X=+$P(LR0,U,5) I X D  ;specimen
"RTN","VPRDJ06",84,0)
 . N IENS,VPRY S IENS=X_","
"RTN","VPRDJ06",85,0)
 . D GETS^DIQ(61,IENS,".01;2",,"VPRY")
"RTN","VPRDJ06",86,0)
 . S LAB("specimen")=$G(VPRY(61,IENS,.01))
"RTN","VPRDJ06",87,0)
 . S LAB("sample")=$$GET1^DIQ(61,X_",",4.1)
"RTN","VPRDJ06",88,0)
 S LAB("groupName")=$P(LR0,U,6),ACC=$P(ID,";",1,2) ;accession#
"RTN","VPRDJ06",89,0)
 S LAB("groupUid")=$$SETUID^VPRUTILS("accession",DFN,ACC,"")
"RTN","VPRDJ06",90,0)
 S X=$P(LR0,U,14),FAC=$S(X:$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U),1:$$FAC^VPRD)
"RTN","VPRDJ06",91,0)
 D FACILITY^VPRUTILS(FAC,"LAB")
"RTN","VPRDJ06",92,0)
 ; get results from ^PXRMINDX
"RTN","VPRDJ06",93,0)
 I '$D(VPRITM) S VPRITM=$$ITEM
"RTN","VPRDJ06",94,0)
 D LRPXRM^LRPXAPI(.VPRM,LRDFN_";"_ID,VPRITM) I $L($G(VPRM)) D
"RTN","VPRDJ06",95,0)
 . S LAB("typeName")=$P(VPRM,U,2),LAB("result")=$P(VPRM,U,4)
"RTN","VPRDJ06",96,0)
 . S:$P(VPRM,U,5)="R" LAB("result")=LAB("result")_"*"
"RTN","VPRDJ06",97,0)
 S OITM="M;O;"_+$P(ID,";",4),OID=LRDFN_";"_$P(ID,";",1,4)_";0" K VPRM
"RTN","VPRDJ06",98,0)
 D LRPXRM^LRPXAPI(.VPRM,OID,OITM) I $L($G(VPRM)) D
"RTN","VPRDJ06",99,0)
 . S LAB("organism")=$P(VPRM,U,2),LAB("organismQty")=$P(VPRM,U,4)
"RTN","VPRDJ06",100,0)
 S LAB("results",1,"uid")=ACC
"RTN","VPRDJ06",101,0)
 S LAB("results",1,"resultUid")=$$SETUID^VPRUTILS("tiu",DFN,ACC,"")
"RTN","VPRDJ06",102,0)
 S LAB("results",1,"localTitle")="LR MICROBIOLOGY REPORT"
"RTN","VPRDJ06",103,0)
 I $D(^LR(LRDFN,"MI",VPRIDT,99)) S LAB("comment")= ^(99)
"RTN","VPRDJ06",104,0)
 D ADD^VPRDJ("LAB")
"RTN","VPRDJ06",105,0)
 Q
"RTN","VPRDJ06",106,0)
 ;
"RTN","VPRDJ06",107,0)
ITEM() ; -- find ITEM string from ^PXRMINDX [uses LRDFN,ID,DFN,CDT]
"RTN","VPRDJ06",108,0)
 N ITM,IDX,Y S Y=""
"RTN","VPRDJ06",109,0)
 S IDX=LRDFN_";"_ID,ITM="M"
"RTN","VPRDJ06",110,0)
 F  S ITM=$O(^PXRMINDX(63,"PI",DFN,ITM)) Q:$E(ITM)'="M"  I $D(^PXRMINDX(63,"PI",DFN,ITM,CDT,IDX)) S Y=ITM Q
"RTN","VPRDJ06",111,0)
 Q Y
"RTN","VPRDJ06",112,0)
 ;
"RTN","VPRDJ06",113,0)
AP ; -- pathology ID = VPRSUB;VPRIDT
"RTN","VPRDJ06",114,0)
 N LAB,LR0,X,I,NODE K ERRARRY
"RTN","VPRDJ06",115,0)
 S ERRARRY=VPRSUB_";"_VPRIDT,ERRARRY(0)=VPRSUB_";"_VPRIDT
"RTN","VPRDJ06",116,0)
 ;
"RTN","VPRDJ06",117,0)
 S LAB("localId")=ID,LAB("organizerType")="accession" ;??
"RTN","VPRDJ06",118,0)
 S LAB("uid")=$$SETUID^VPRUTILS("lab",DFN,ID,"")
"RTN","VPRDJ06",119,0)
 S LAB("categoryCode")="urn:va:lab-category:"_VPRSUB
"RTN","VPRDJ06",120,0)
 S LAB("categoryName")=$S(VPRSUB="BB":"Blood Bank",VPRSUB="SP":"Surgical Pathology",1:"Pathology")
"RTN","VPRDJ06",121,0)
 S LAB("statusCode")="urn:va:lab-status:completed",LAB("statusName")="completed"
"RTN","VPRDJ06",122,0)
 S CDT=9999999-VPRIDT,LAB("observed")=$$DATE(CDT)
"RTN","VPRDJ06",123,0)
 S LR0=$G(^LR(LRDFN,VPRSUB,VPRIDT,0))
"RTN","VPRDJ06",124,0)
 S LAB("resulted")=$$DATE($P(LR0,U,11)),LAB("groupName")=$P(LR0,U,6)
"RTN","VPRDJ06",125,0)
 S X="",I=0 F  S I=$O(^LR(LRDFN,VPRSUB,VPRIDT,.1,I)) Q:I<1  S X=X_$S($L(X):", ",1:"")_$P($G(^(I,0)),U)
"RTN","VPRDJ06",126,0)
 S:$L(X) LAB("specimen")=X
"RTN","VPRDJ06",127,0)
 D FACILITY^VPRUTILS($$FAC^VPRD,"LAB")
"RTN","VPRDJ06",128,0)
 S NODE=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDJ06",129,0)
 S I=0 F  S I=$O(@NODE@(I)) Q:I<1  S X=+$P($G(@NODE@(I,0)),U,2) I X D
"RTN","VPRDJ06",130,0)
 . N LT,NT
"RTN","VPRDJ06",131,0)
 . S LT=$$GET1^DIQ(8925,+X_",",.01) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ06",132,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501") S:NT="" NT="LABORATORY NOTE"
"RTN","VPRDJ06",133,0)
 . S LAB("results",I,"uid")=LAB("uid")_";0"
"RTN","VPRDJ06",134,0)
 . S LAB("results",I,"resultUid")=$$SETUID^VPRUTILS("tiu",DFN,X,"")
"RTN","VPRDJ06",135,0)
 . S LAB("results",I,"localTitle")=LT
"RTN","VPRDJ06",136,0)
 . S LAB("results",I,"nationalTitle")=NT
"RTN","VPRDJ06",137,0)
 I '$O(LAB("results",0)) D  ;non-TIU reports
"RTN","VPRDJ06",138,0)
 . S LAB("results",1,"uid")=LAB("uid")_";0"
"RTN","VPRDJ06",139,0)
 . S LAB("results",1,"resultUid")=$$SETUID^VPRUTILS("tiu",DFN,ID,"")
"RTN","VPRDJ06",140,0)
 . S LAB("results",1,"localTitle")="LR "_$$NAME^VPRDLRA(VPRSUB)_" REPORT"
"RTN","VPRDJ06",141,0)
 . S LAB("results",1,"nationalTitle")="LABORATORY NOTE"
"RTN","VPRDJ06",142,0)
 D ADD^VPRDJ("LAB")
"RTN","VPRDJ06",143,0)
 ;
"RTN","VPRDJ06",144,0)
DATE(X) ; -- strip off seconds, return JSON format
"RTN","VPRDJ06",145,0)
 N Y S Y=$G(X)
"RTN","VPRDJ06",146,0)
 I $L($P(Y,".",2))>4 S Y=$P(Y,".")_"."_$E($P(Y,".",2),1,4) ;strip seconds
"RTN","VPRDJ06",147,0)
 S:Y Y=$$JSONDT^VPRUTILS(Y)
"RTN","VPRDJ06",148,0)
 Q Y
"RTN","VPRDJ07")
0^10^B18242997
"RTN","VPRDJ07",1,0)
VPRDJ07 ;SLC/MKB -- Radiology,Surgery ;6/25/12  16:11
"RTN","VPRDJ07",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ07",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ07",4,0)
 ;
"RTN","VPRDJ07",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ07",6,0)
 ;
"RTN","VPRDJ07",7,0)
 ;
"RTN","VPRDJ07",8,0)
RA1(ID) ; -- radiology exam ^TMP($J,"RAE1",DFN,ID)
"RTN","VPRDJ07",9,0)
 N EXAM,X0,SET,PROC,DATE,LOC,X,Y,IENS,ID3,N
"RTN","VPRDJ07",10,0)
 K ERRARRY M ERRARRY=^TMP($J,"RAE1",DFN,ID)
"RTN","VPRDJ07",11,0)
 ;
"RTN","VPRDJ07",12,0)
 S X0=$G(^TMP($J,"RAE1",DFN,ID)),SET=$G(^(ID,"CPRS")),PROC=$P(X0,U) Q:X0=""
"RTN","VPRDJ07",13,0)
 S EXAM("localId")=ID,EXAM("uid")=$$SETUID^VPRUTILS("rad",DFN,ID,"")
"RTN","VPRDJ07",14,0)
 S EXAM("name")=PROC,EXAM("case")=$P(X0,U,2),EXAM("category")="RA"
"RTN","VPRDJ07",15,0)
 S DATE=9999999.9999-+ID,EXAM("dateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ07",16,0)
 I $P(X0,U,5) D  ;report exists
"RTN","VPRDJ07",17,0)
 . N NM S NM=$S(+SET=2:$P(SET,U,2),1:PROC) ;2 = shared report
"RTN","VPRDJ07",18,0)
 . S EXAM("results",1,"uid")=$$SETUID^VPRUTILS("tiu",DFN,ID,"")
"RTN","VPRDJ07",19,0)
 . S EXAM("results",1,"localTitle")=NM
"RTN","VPRDJ07",20,0)
 . S EXAM("verified")=$S($E($P(X0,U,3))="V":"true",1:"false")
"RTN","VPRDJ07",21,0)
 S:$L($P(X0,U,6)) EXAM("status")=$P($P(X0,U,6),"~",2)
"RTN","VPRDJ07",22,0)
 S X=$P(X0,U,7),LOC="" I $L(X) D
"RTN","VPRDJ07",23,0)
 . S EXAM("imageLocation")=X,EXAM("locationName")=X
"RTN","VPRDJ07",24,0)
 . S LOC=+$O(^SC("B",X,0)),EXAM("locationCode")=$$SETVURN^VPRUTILS("location",LOC)
"RTN","VPRDJ07",25,0)
 S X=$$FAC^VPRD(LOC) D FACILITY^VPRUTILS(X,"EXAM")
"RTN","VPRDJ07",26,0)
 I $L($P(X0,U,8)) S X=$P($P(X0,U,8),"~",2),EXAM("imagingTypeUid")=$$SETVURN^VPRUTILS("imaging-Type",X)
"RTN","VPRDJ07",27,0)
 S X=$P(X0,U,10) I X D
"RTN","VPRDJ07",28,0)
 . N CPT S CPT=$$CPT^VPRDRA(X)
"RTN","VPRDJ07",29,0)
 . S (EXAM("typeName"),EXAM("summary"))=$P(CPT,U,2)
"RTN","VPRDJ07",30,0)
 . ;I $D(^TMP($J,"RAE1",DFN,ID,"CMOD")) M EXAM("modifier")=^("CMOD")
"RTN","VPRDJ07",31,0)
 I $P(X0,U,11) D
"RTN","VPRDJ07",32,0)
 . S EXAM("orderUid")=$$SETUID^VPRUTILS("order",DFN,+$P(X0,U,11),"")
"RTN","VPRDJ07",33,0)
 . S EXAM("orderName")=$S($L(SET):$P(SET,U,2),1:PROC)
"RTN","VPRDJ07",34,0)
 S EXAM("hasImages")=$S($P(X0,U,12)="Y":"true",1:"false")
"RTN","VPRDJ07",35,0)
 I $P(X0,U,4)="Y"!($P(X0,U,9)="Y") S EXAM("interpretation")="ABNORMAL"
"RTN","VPRDJ07",36,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","VPRDJ07",37,0)
 S X=$$GET1^DIQ(70.03,IENS,27,"I") I X D
"RTN","VPRDJ07",38,0)
 . S EXAM("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,+X,"")
"RTN","VPRDJ07",39,0)
 . S EXAM("encounterName")=$$NAME^VPRDJ04(+X)
"RTN","VPRDJ07",40,0)
 S ID3=DFN_U_$TR(ID,"-","^") D EN3^RAO7PC1(ID3) D  ;get additional values
"RTN","VPRDJ07",41,0)
 . S X=+$G(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"P")) Q:'X
"RTN","VPRDJ07",42,0)
 . S EXAM("providers",1,"providerUid")=$$SETUID^VPRUTILS("user","",X,"")
"RTN","VPRDJ07",43,0)
 . S EXAM("providers",1,"providerName")=$P($G(^VA(200,X,0)),U),N=0
"RTN","VPRDJ07",44,0)
 . F  S N=$O(^TMP($J,"RAE2",DFN,+$P(ID3,U,3),PROC,"D",N)) Q:N<1  S X=$G(^(N)) D
"RTN","VPRDJ07",45,0)
 .. S EXAM("diagnosis",N,"code")=X
"RTN","VPRDJ07",46,0)
 .. S:N=1 EXAM("diagnosis",N,"primary")="true"
"RTN","VPRDJ07",47,0)
 .. N EXP S EXP=$$LEX(X) S:EXP EXAM("diagnosis",N,"lexicon")=X
"RTN","VPRDJ07",48,0)
 . K ^TMP($J,"RAE2",DFN)
"RTN","VPRDJ07",49,0)
 S EXAM("kind")="Imaging"
"RTN","VPRDJ07",50,0)
 D ADD^VPRDJ("EXAM")
"RTN","VPRDJ07",51,0)
 Q
"RTN","VPRDJ07",52,0)
 ;
"RTN","VPRDJ07",53,0)
LEX(X) ; -- Return Lexicon ptr for a Dx Code
"RTN","VPRDJ07",54,0)
 N X,Y,DIC,LEX
"RTN","VPRDJ07",55,0)
 S DIC=78.3,DIC(0)="BFOXZ" D ^DIC
"RTN","VPRDJ07",56,0)
 S LEX=$P($G(Y(0)),U,6)
"RTN","VPRDJ07",57,0)
 Q LEX
"RTN","VPRDJ07",58,0)
 ;
"RTN","VPRDJ07",59,0)
SR1(ID) ; -- surgery
"RTN","VPRDJ07",60,0)
 N SURG,VPRX,VPRY,X,Y,I
"RTN","VPRDJ07",61,0)
 D ONE^SROESTV("VPRY",ID) S VPRX=$G(VPRY(ID)) Q:VPRX=""
"RTN","VPRDJ07",62,0)
 K ERRARRY M ERRARRY=VPRX
"RTN","VPRDJ07",63,0)
 ;
"RTN","VPRDJ07",64,0)
 S SURG("localId")=ID,SURG("uid")=$$SETUID^VPRUTILS("surgery",DFN,ID,"")
"RTN","VPRDJ07",65,0)
 S X=$P(VPRX,U,2),SURG("status")="COMPLETED"
"RTN","VPRDJ07",66,0)
 I X?1"* Aborted * ".E S X=$E(X,13,999),SURG("status")="ABORTED"
"RTN","VPRDJ07",67,0)
 S (SURG("typeName"),SURG("summary"))=X
"RTN","VPRDJ07",68,0)
 S SURG("dateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,3))
"RTN","VPRDJ07",69,0)
 S X=$P(VPRX,U,4) I X D
"RTN","VPRDJ07",70,0)
 . S SURG("providers",1,"providerUid")=$$SETUID^VPRUTILS("user","",+X,"")
"RTN","VPRDJ07",71,0)
 . S SURG("providers",1,"providerName")=$P(X,";",2)
"RTN","VPRDJ07",72,0)
 S X=$$GET1^DIQ(130,ID_",",50,"I"),X=$$FAC^VPRD(X)
"RTN","VPRDJ07",73,0)
 D FACILITY^VPRUTILS(X,"SURG")
"RTN","VPRDJ07",74,0)
 S X=$$GET1^DIQ(130,ID_",",.015,"I") I X D
"RTN","VPRDJ07",75,0)
 . S SURG("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,+X,"")
"RTN","VPRDJ07",76,0)
 . S SURG("encounterName")=$$NAME^VPRDJ04(+X)
"RTN","VPRDJ07",77,0)
 S X=$$GET1^DIQ(136,ID_",",.02,"I") I X D
"RTN","VPRDJ07",78,0)
 . S X=$$CPT^VPRDSR(X)
"RTN","VPRDJ07",79,0)
 . S (SURG("typeName"),SURG("summary"))=$P(X,U,2)
"RTN","VPRDJ07",80,0)
 . S SURG("typeCode")=$$SETNCS^VPRUTILS("cpt",+X)
"RTN","VPRDJ07",81,0)
 S I=0 F  S I=$O(VPRY(ID,I)) Q:I<1  S X=$G(VPRY(ID,I)) I X D
"RTN","VPRDJ07",82,0)
 . N LT,NT S LT=$P(X,U,2) Q:$P(LT," ")="Addendum"
"RTN","VPRDJ07",83,0)
 . S NT=$$GET1^DIQ(8925,+X_",",".01:1501")
"RTN","VPRDJ07",84,0)
 . S SURG("results",I,"uid")=$$SETUID^VPRUTILS("tiu",DFN,+X,"")
"RTN","VPRDJ07",85,0)
 . S SURG("results",I,"localTitle")=LT
"RTN","VPRDJ07",86,0)
 . S:$L(NT) SURG("results",I,"nationalTitle")=NT
"RTN","VPRDJ07",87,0)
 S SURG("kind")="Surgery",SURG("category")="SR"
"RTN","VPRDJ07",88,0)
 K ^TMP("TIULIST",$J)
"RTN","VPRDJ07",89,0)
 D ADD^VPRDJ("SURG")
"RTN","VPRDJ07",90,0)
 Q
"RTN","VPRDJ08")
0^11^B107060315
"RTN","VPRDJ08",1,0)
VPRDJ08 ;SLC/MKB -- Documents ;6/25/12  16:11
"RTN","VPRDJ08",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ08",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ08",4,0)
 ;
"RTN","VPRDJ08",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ08",6,0)
 ;
"RTN","VPRDJ08",7,0)
 ;
"RTN","VPRDJ08",8,0)
TIU1(ID) ; -- document
"RTN","VPRDJ08",9,0)
 I ID[";" D   Q
"RTN","VPRDJ08",10,0)
 . I ID D EN1($$CP1(DFN,ID),"CP") Q  ;CP
"RTN","VPRDJ08",11,0)
 . D EN1($$LR1(DFN,ID),"LR") Q       ;Lab
"RTN","VPRDJ08",12,0)
 I ID["-" D  Q                       ;Radiology
"RTN","VPRDJ08",13,0)
 . S (BEG,END)=9999999.9999-+ID D EN1^RAO7PC1(DFN,BEG,END,"99P")
"RTN","VPRDJ08",14,0)
 . D EN1($$RA1(DFN,ID),"RA") K ^TMP($J,"RAE1")
"RTN","VPRDJ08",15,0)
 D EN1(ID,38)
"RTN","VPRDJ08",16,0)
 Q
"RTN","VPRDJ08",17,0)
 ;
"RTN","VPRDJ08",18,0)
EN1(VPRX,TIU) ; -- document
"RTN","VPRDJ08",19,0)
 ;  Expects DFN, VPRX=IEN^$$RESOLVE^TIUSRVLO(IEN) or equivalent
"RTN","VPRDJ08",20,0)
 ;          TIU = document class#, or code (CP, RA, LR) if non-TIU
"RTN","VPRDJ08",21,0)
 N DOC,IEN,X,VPRTIU,ES,I,TEXT,SUB,VPRY,ERR
"RTN","VPRDJ08",22,0)
 S IEN=$P($G(VPRX),U),TIU=$G(TIU) Q:IEN=""  ;invalid ien
"RTN","VPRDJ08",23,0)
 S ERRMSG=$$ERRMSG^VPRDJ0("document")
"RTN","VPRDJ08",24,0)
 ;
"RTN","VPRDJ08",25,0)
 I +VPRX=VPRX,TIU D  ;get TIU data string, if needed
"RTN","VPRDJ08",26,0)
 . N SHOWADD,DA S SHOWADD=1,DA=+VPRX
"RTN","VPRDJ08",27,0)
 . S VPRX=DA_U_$$RESOLVE^TIUSRVLO(DA)
"RTN","VPRDJ08",28,0)
 Q:"UNKNOWN"[$P($G(VPRX),U,2)  ;null or invalid
"RTN","VPRDJ08",29,0)
 S DOC("localId")=IEN,DOC("uid")=$$SETUID^VPRUTILS("tiu",DFN,IEN,"")
"RTN","VPRDJ08",30,0)
 S DOC("localTitle")=$P(VPRX,U,2)
"RTN","VPRDJ08",31,0)
 S DOC("referenceDateTime")=$$JSONDT^VPRUTILS($P(VPRX,U,3))
"RTN","VPRDJ08",32,0)
 S X=$P(VPRX,U,6) D  ;S:$L(X) DOC("location")=X
"RTN","VPRDJ08",33,0)
 . N LOC,FAC S LOC=$S($L(X):+$O(^SC("B",X,0)),1:0)
"RTN","VPRDJ08",34,0)
 . S X=$$FAC^VPRD(LOC)
"RTN","VPRDJ08",35,0)
 . S DOC("facilityCode")=$P(X,U),DOC("facilityName")=$P(X,U,2)
"RTN","VPRDJ08",36,0)
 S X=$P(VPRX,U,7) S:$L(X) DOC("status")=X
"RTN","VPRDJ08",37,0)
 S:$P(VPRX,U,11) DOC("images")=+$P(VPRX,U,11)
"RTN","VPRDJ08",38,0)
 S:$L($P(VPRX,U,12)) DOC("subject")=$P(VPRX,U,12)
"RTN","VPRDJ08",39,0)
 I $P(VPRX,U,14)>5 S DOC("parent")=$P(VPRX,U,14) ;ID notes
"RTN","VPRDJ08",40,0)
A ; national title
"RTN","VPRDJ08",41,0)
 S X=$S(TIU:$$GET1^DIQ(8925,IEN_",",".01:1501","I"),1:$P(VPRX,U,10))
"RTN","VPRDJ08",42,0)
 I X D  ;National Title + attributes
"RTN","VPRDJ08",43,0)
 . N IENS,TIU,Y,FNUM,NAME
"RTN","VPRDJ08",44,0)
 . S IENS=X_"," D GETS^DIQ(8926.1,IENS,"*","IE","TIU")
"RTN","VPRDJ08",45,0)
 . S DOC("nationalTitle","vuid")=$G(TIU(8926.1,IENS,99.99,"E"))
"RTN","VPRDJ08",46,0)
 . S DOC("nationalTitle","title")=$G(TIU(8926.1,IENS,.01,"E"))
"RTN","VPRDJ08",47,0)
 . F I=".04^Subject^2",".05^Role^3",".06^Setting^4",".07^Service^5",".08^Type^6" D
"RTN","VPRDJ08",48,0)
 .. S Y=+$G(TIU(8926.1,IENS,+I,"I")) Q:Y'>0
"RTN","VPRDJ08",49,0)
 .. S FNUM="8926."_+$P(I,U,3),NAME=$$LOW^XLFSTR($P(I,U,2))
"RTN","VPRDJ08",50,0)
 .. S DOC("nationalTitle"_$P(I,U,2),"vuid")=$$VUID^VPRD(Y,FNUM)
"RTN","VPRDJ08",51,0)
 .. S DOC("nationalTitle"_$P(I,U,2),NAME)=$G(TIU(8926.1,IENS,+I,"E"))
"RTN","VPRDJ08",52,0)
B ; other TIU data
"RTN","VPRDJ08",53,0)
 D:TIU EXTRACT^TIULQ(IEN,"VPRTIU",,".01:.05;.09;1201;1202;1208;1209;1301;1501:1508",,1,,1) ;".01:.04;1501:1508")
"RTN","VPRDJ08",54,0)
 S X=$G(VPRTIU(IEN,1201,"I")) S:X DOC("enteredDateTime")=$$JSONDT^VPRUTILS(X)
"RTN","VPRDJ08",55,0)
 S X=$G(VPRTIU(IEN,.09,"E")) S:$L(X) DOC("urgency")=X
"RTN","VPRDJ08",56,0)
 S X=TIU I TIU S X=+$G(VPRTIU(IEN,.01,"I")),X=$$CATG^VPRDTIU(X) ;2U type code
"RTN","VPRDJ08",57,0)
 S DOC("documentTypeCode")=X,DOC("documentTypeName")=$$TYPE^VPRDTIUX(X)
"RTN","VPRDJ08",58,0)
 S DOC("documentClass")=$S(X="LR":"LR LABORATORY REPORTS",X="SR":"SURGICAL REPORTS",X="CP":"CLINICAL PROCEDURES",X="RA":"RADIOLOGY REPORTS",X="DS":"DISCHARGE SUMMARY",1:"PROGRESS NOTES")
"RTN","VPRDJ08",59,0)
 S X=$S(TIU:$G(VPRTIU(IEN,.03,"I")),1:$P(VPRX,U,8))
"RTN","VPRDJ08",60,0)
 S:X DOC("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,X,""),DOC("encounterName")=$$NAME^VPRDJ04(X)
"RTN","VPRDJ08",61,0)
C ; text blocks, signatures
"RTN","VPRDJ08",62,0)
 N VPRT,VPRA,VPRADD
"RTN","VPRDJ08",63,0)
 S DOC("text",1,"dateTime")=DOC("referenceDateTime")
"RTN","VPRDJ08",64,0)
 S DOC("text",1,"status")=$G(DOC("status"))
"RTN","VPRDJ08",65,0)
 S DOC("text",1,"uid")=DOC("uid")
"RTN","VPRDJ08",66,0)
 S VPRT=1,X=$P(VPRX,U,5),I=0
"RTN","VPRDJ08",67,0)
 I X D USER(.I,+X,$P(X,";",3),"A")    ;author
"RTN","VPRDJ08",68,0)
 M ES=VPRTIU(IEN) S X=$P(VPRX,"//",2) ;non-TIU, put into ES for use:
"RTN","VPRDJ08",69,0)
 I $L(X) S ES(1502,"I")=+X,ES(1502,"E")=$P(X,";",2),ES(1501,"I")=$P(X,";",3)
"RTN","VPRDJ08",70,0)
 I $G(ES(1501,"I")) D USER(.I,ES(1502,"I"),ES(1502,"E"),"S",ES(1501,"I")) ;signer
"RTN","VPRDJ08",71,0)
 I $G(ES(1507,"I")) D USER(.I,ES(1508,"I"),ES(1508,"E"),"C",ES(1507,"I")) ;cosigner
"RTN","VPRDJ08",72,0)
 I $G(ES(1208,"I")) D USER(.I,ES(1208,"I"),ES(1208,"E"),"X")     ;expected cosigner
"RTN","VPRDJ08",73,0)
 S X=+$G(ES(1209,"I")) I X D
"RTN","VPRDJ08",74,0)
 . S DOC("attendingUid")=$$SETUID^VPRUTILS("user","",X,"")
"RTN","VPRDJ08",75,0)
 . S DOC("attendingName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08",76,0)
 S X=$S(TIU:$NA(VPRTIU(IEN,"TEXT")),1:$NA(^TMP("VPRTEXT",$J,IEN)))
"RTN","VPRDJ08",77,0)
 K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",78,0)
 D SETTEXT^VPRUTILS(X,$NA(^TMP($J,"VPR TIU TEXT")))
"RTN","VPRDJ08",79,0)
 M DOC("text",1,"content","\")=^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",80,0)
D ; addenda
"RTN","VPRDJ08",81,0)
 S VPRA=0 F  S VPRA=$O(VPRTIU(IEN,"ZADD",VPRA)) Q:VPRA<1  D
"RTN","VPRDJ08",82,0)
 . S VPRT=VPRT+1,I=0 K VPRADD M VPRADD=VPRTIU(IEN,"ZADD",VPRA)
"RTN","VPRDJ08",83,0)
 . S DOC("text",VPRT,"status")=$G(VPRADD(.05,"E"))
"RTN","VPRDJ08",84,0)
 . S DOC("text",VPRT,"uid")=$$SETUID^VPRUTILS("tiu",DFN,VPRA,"")
"RTN","VPRDJ08",85,0)
 . S DOC("text",VPRT,"dateTime")=$$JSONDT^VPRUTILS($G(VPRADD(1301,"I")))
"RTN","VPRDJ08",86,0)
 . I $G(VPRADD(1202,"I")) D USER(.I,VPRADD(1202,"I"),VPRADD(1202,"E"),"A")
"RTN","VPRDJ08",87,0)
 . I $G(VPRADD(1501,"I")) D USER(.I,VPRADD(1502,"I"),VPRADD(1502,"E"),"S",VPRADD(1501,"I"))
"RTN","VPRDJ08",88,0)
 . I $G(VPRADD(1507,"I")) D USER(.I,VPRADD(1508,"I"),VPRADD(1508,"E"),"C",VPRADD(1507,"I"))
"RTN","VPRDJ08",89,0)
 . S X=$NA(VPRTIU(IEN,"ZADD",VPRA,"TEXT")) K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",90,0)
 . D SETTEXT^VPRUTILS(X,$NA(^TMP($J,"VPR TIU TEXT")))
"RTN","VPRDJ08",91,0)
 . M DOC("text",VPRT,"content","\")=^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",92,0)
ENQ ; end
"RTN","VPRDJ08",93,0)
 K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",94,0)
 D ADD^VPRDJ("DOC")
"RTN","VPRDJ08",95,0)
 Q
"RTN","VPRDJ08",96,0)
 ;
"RTN","VPRDJ08",97,0)
ZC ; providers &/or signatures
"RTN","VPRDJ08",98,0)
 S X=$P(VPRX,U,5),I=0
"RTN","VPRDJ08",99,0)
 I X D USER(.I,+X,$P(X,";",3),"A") ;author
"RTN","VPRDJ08",100,0)
 M ES=VPRTIU(IEN) S X=$P(VPRX,"//",2) ;non-TIU es
"RTN","VPRDJ08",101,0)
 I $L(X) S ES(1502,"I")=+X,ES(1502,"E")=$P(X,";",2),ES(1501,"I")=$P(X,";",3)
"RTN","VPRDJ08",102,0)
 I $G(ES(1501,"I")) D USER(.I,ES(1502,"I"),ES(1502,"E"),"S",ES(1501,"I")) ;signer
"RTN","VPRDJ08",103,0)
 I $G(ES(1507,"I")) D USER(.I,ES(1508,"I"),ES(1508,"E"),"C",ES(1507,"I")) ;cosigner
"RTN","VPRDJ08",104,0)
 I $G(VPRTEXT) D
"RTN","VPRDJ08",105,0)
 . S X=$S(TIU:$$TEXT^VPRDTIU(IEN),1:$NA(^TMP("VPRTEXT",$J,IEN)))
"RTN","VPRDJ08",106,0)
 . K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",107,0)
 . K DOC("content")
"RTN","VPRDJ08",108,0)
 . D SETTEXT^VPRUTILS(X,$NA(^TMP($J,"VPR TIU TEXT"))) M DOC("content","\")=^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",109,0)
 . K ^TMP($J,"VPR TIU TEXT")
"RTN","VPRDJ08",110,0)
 .;M DOC("content","\")=@X
"RTN","VPRDJ08",111,0)
 D ADD^VPRDJ("DOC")
"RTN","VPRDJ08",112,0)
 Q
"RTN","VPRDJ08",113,0)
 ;
"RTN","VPRDJ08",114,0)
USER(N,IEN,NAME,ROLE,DATE) ; -- set author, signer(s)
"RTN","VPRDJ08",115,0)
 Q:'$G(IEN)  S N=+$G(N)+1
"RTN","VPRDJ08",116,0)
 S DOC("text",VPRT,"clinicians",N,"uid")=$$SETUID^VPRUTILS("user","",IEN,"")
"RTN","VPRDJ08",117,0)
 S DOC("text",VPRT,"clinicians",N,"name")=$S($L($G(NAME)):NAME,1:$P($G(^VA(200,IEN,0)),U))
"RTN","VPRDJ08",118,0)
 S DOC("text",VPRT,"clinicians",N,"role")=$G(ROLE)
"RTN","VPRDJ08",119,0)
 Q:'$G(DATE)  ;not co/signed
"RTN","VPRDJ08",120,0)
 S DOC("text",VPRT,"clinicians",N,"signedDateTime")=$$JSONDT^VPRUTILS(DATE)
"RTN","VPRDJ08",121,0)
 S DOC("text",VPRT,"clinicians",N,"signature")=$$SIG^VPRDTIU(IEN)
"RTN","VPRDJ08",122,0)
 Q
"RTN","VPRDJ08",123,0)
 ;
"RTN","VPRDJ08",124,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08",125,0)
 ; documentClass = CLINICAL PROCEDURES
"RTN","VPRDJ08",126,0)
 ; nationalTitle = 4696566^PROCEDURE REPORT
"RTN","VPRDJ08",127,0)
 ;       Service = 4696471^PROCEDURE
"RTN","VPRDJ08",128,0)
 ;          Type = 4696123^REPORT
"RTN","VPRDJ08",129,0)
 ;
"RTN","VPRDJ08",130,0)
CP(DFN,BEG,END,MAX) ; -- Medicine reports
"RTN","VPRDJ08",131,0)
 N VPRN,VPRX,RTN,TIUN,CONS,VPRD,I,DA,X,Y,%DT,DATE,GBL,RES
"RTN","VPRDJ08",132,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDJ08",133,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999),RES=""
"RTN","VPRDJ08",134,0)
 K ^TMP("MDHSP",$J) D EN1^MDPS1(RES,DFN,BEG,END,MAX,"",0)
"RTN","VPRDJ08",135,0)
 S VPRN=0 F  S VPRN=$O(^TMP("MDHSP",$J,VPRN)) Q:VPRN<1  S VPRX=$G(^(VPRN)) D
"RTN","VPRDJ08",136,0)
 . S RTN=$P(VPRX,U,3,4) ;Q:RTN="PRPRO^MDPS4"  ;skip non-CP items
"RTN","VPRDJ08",137,0)
 . S TIUN=+$P(VPRX,U,14)
"RTN","VPRDJ08",138,0)
 . I TIUN D EN1(TIUN,38)                      ;38=TIU Clinical Document
"RTN","VPRDJ08",139,0)
 . S CONS=+$P(VPRX,U,13) D:CONS DOCLIST^GMRCGUIB(.VPRD,CONS)
"RTN","VPRDJ08",140,0)
 . K DA S I=0 F  S I=$O(VPRD(50,I)) Q:I<1  D
"RTN","VPRDJ08",141,0)
 .. S DA=+VPRD(50,I) Q:DA=TIUN
"RTN","VPRDJ08",142,0)
 .. D EN1(DA,38)
"RTN","VPRDJ08",143,0)
 . Q:TIUN!$G(DA)                              ;done [got TIU note(s)]
"RTN","VPRDJ08",144,0)
 . Q:RTN="PR702^MDPS1"                        ;CP, but no TIU note yet
"RTN","VPRDJ08",145,0)
 . Q:RTN="PRPRO^MDPS4"                        ;non-CP procedure
"RTN","VPRDJ08",146,0)
 . ; find ID for pre-TIU report
"RTN","VPRDJ08",147,0)
 . S X=$P(VPRX,U,6),%DT="TX" D ^%DT S:Y>0 DATE=Y
"RTN","VPRDJ08",148,0)
 . S GBL=+$P(VPRX,U,2)_";"_$$ROOT^VPRDMC(DFN,$P(VPRX,U,11),DATE)
"RTN","VPRDJ08",149,0)
 . I GBL S X=$$CP1(DFN,GBL) D EN1(X,"CP")
"RTN","VPRDJ08",150,0)
 K ^TMP("MDHSP",$J),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08",151,0)
 Q
"RTN","VPRDJ08",152,0)
 ;
"RTN","VPRDJ08",153,0)
CP1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08",154,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08",155,0)
 N Y,VPRY,VPRFN,X,NAME,DATE,STS,USER,SIGN,TEXT
"RTN","VPRDJ08",156,0)
 S VPRFN=+$P(ID,"(",2),ERRMSG=$$ERRMSG^VPRDJ0("TIU/CP report")
"RTN","VPRDJ08",157,0)
 D MEDLKUP^MCARUTL3(.VPRY,VPRFN,+ID)
"RTN","VPRDJ08",158,0)
 I VPRY<1 Q ""  ;error in CP
"RTN","VPRDJ08",159,0)
 S NAME=$P(VPRY,U,9),DATE=$P(VPRY,U,6)
"RTN","VPRDJ08",160,0)
 S X=$$GET1^DIQ(VPRFN,+ID_",",1506)
"RTN","VPRDJ08",161,0)
 S STS=$S($L(X):X,1:"COMPLETED")
"RTN","VPRDJ08",162,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",701,"I"),(USER,SIGN)=""
"RTN","VPRDJ08",163,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08",164,0)
 S X=+$$GET1^DIQ(VPRFN,+ID_",",1503,"I")
"RTN","VPRDJ08",165,0)
 S:X SIGN="//"_X_";"_$P($G(^VA(200,X,0)),U)_";"_$$GET1^DIQ(VPRFN,+ID_",",1505,"I")
"RTN","VPRDJ08",166,0)
 ; VST=$$GET1^DIQ(VPRFN,+ID_",",900,"I")
"RTN","VPRDJ08",167,0)
 S Y=ID_U_NAME_U_DATE_U_U_USER_U_U_STS_"^^^2461^"_SIGN
"RTN","VPRDJ08",168,0)
 S:$G(VPRTEXT) TEXT=$$TEXT^VPRDMC(DFN,ID,NAME)
"RTN","VPRDJ08",169,0)
 Q Y
"RTN","VPRDJ08",170,0)
 ;
"RTN","VPRDJ08",171,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08",172,0)
 ; documentClass = LR LABORATORY REPORTS
"RTN","VPRDJ08",173,0)
 ; nationalTitle = 4697105^LABORATORY NOTE
"RTN","VPRDJ08",174,0)
 ;       Subject = 4697104^LABORATORY
"RTN","VPRDJ08",175,0)
 ;          Type = 4696120^NOTE
"RTN","VPRDJ08",176,0)
 ;
"RTN","VPRDJ08",177,0)
LR(DFN,BEG,END,MAX) ; -- Lab reports
"RTN","VPRDJ08",178,0)
 N VPRSUB,VPRIDT,VPRITM,VPRTIU,VPRXID,LRDFN,IVDT,VPRN,DA
"RTN","VPRDJ08",179,0)
 S DFN=+$G(DFN) Q:$G(DFN)<1
"RTN","VPRDJ08",180,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","VPRDJ08",181,0)
 S LRDFN=+$G(^DPT(DFN,"LR")),IVDT=9999999-+$G(^LR(LRDFN,"AU")) ;LR7OB63D error
"RTN","VPRDJ08",182,0)
 K ^TMP("LRRR",$J,DFN) D RR^LR7OR1(DFN,,BEG,END,"AP",,,MAX)
"RTN","VPRDJ08",183,0)
 S VPRSUB="" F  S VPRSUB=$O(^TMP("LRRR",$J,DFN,VPRSUB)) Q:VPRSUB=""  D
"RTN","VPRDJ08",184,0)
 . S VPRIDT=0 F  S VPRIDT=$O(^TMP("LRRR",$J,DFN,VPRSUB,VPRIDT)) Q:VPRIDT<1  I $O(^(VPRIDT,0)) D
"RTN","VPRDJ08",185,0)
 .. S VPRTIU=$S(VPRSUB="AU":$NA(^LR(LRDFN,101)),1:$NA(^LR(LRDFN,VPRSUB,VPRIDT,.05)))
"RTN","VPRDJ08",186,0)
 .. K VPRITM S VPRXID=VPRSUB_";"_VPRIDT
"RTN","VPRDJ08",187,0)
 .. I '$O(@VPRTIU@(0)) S VPRX=$$LR1(DFN,VPRXID) D EN1(VPRX,"LR") Q
"RTN","VPRDJ08",188,0)
 .. S VPRN=0 F  S VPRN=$O(@VPRTIU@(VPRN)) Q:VPRN<1  D  ;38=TIU Clin Doc
"RTN","VPRDJ08",189,0)
 ... S DA=+$P($G(@VPRTIU@(VPRN,0)),U,2)
"RTN","VPRDJ08",190,0)
 ... D:DA EN1(DA,38)
"RTN","VPRDJ08",191,0)
 K ^TMP("LRRR",$J,DFN),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08",192,0)
 Q
"RTN","VPRDJ08",193,0)
 ;
"RTN","VPRDJ08",194,0)
LR1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08",195,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08",196,0)
 N Y,SUB,IDT,LRDFN,LR0,NAME,LOC,USER,VST,SIGN,TEXT
"RTN","VPRDJ08",197,0)
 K ^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08",198,0)
 S ERRMSG=$$ERRMSG^VPRDJ0("TIU/Lab report")
"RTN","VPRDJ08",199,0)
 S SUB=$P(ID,";"),IDT=+$P(ID,";",2),LRDFN=$G(^DPT(DFN,"LR"))
"RTN","VPRDJ08",200,0)
 S LR0=$S(SUB="AU":$G(^LR(LRDFN,"AU")),1:$G(^LR(LRDFN,SUB,IDT,0)))
"RTN","VPRDJ08",201,0)
 S NAME="LR "_$$NAME^VPRDLRA(SUB)_" REPORT"
"RTN","VPRDJ08",202,0)
 S LOC=$P(LR0,U,$S(SUB="AU":5,1:8)) D  ;look-up visit
"RTN","VPRDJ08",203,0)
 . N CDT,SC S CDT=9999999-IDT,SC="",X=0
"RTN","VPRDJ08",204,0)
 . S:$L(LOC) SC=+$O(^SC("B",LOC,0))
"RTN","VPRDJ08",205,0)
 . I CDT,LOC S X=$$GETENC^PXAPI(DFN,CDT,SC)
"RTN","VPRDJ08",206,0)
 . S:X VST=+X
"RTN","VPRDJ08",207,0)
 S X=+$P(LR0,U,$S(SUB="AU":10,1:2)) ;pathologist[author]
"RTN","VPRDJ08",208,0)
 S USER=$S(X:X_";;"_$P($G(^VA(200,X,0)),U),1:""),SIGN=""
"RTN","VPRDJ08",209,0)
 S X=$S(SUB="AU":$P(LR0,U,15,16),1:$P(LR0,U,11)_U_$P(LR0,U,13)) ;released
"RTN","VPRDJ08",210,0)
 S:X SIGN="//"_+$P(X,U,2)_";"_$P($G(^VA(200,+$P(X,U,2),0)),U)_";"_+X
"RTN","VPRDJ08",211,0)
 S Y=ID_U_NAME_U_(9999999-IDT)_U_U_USER_U_LOC_"^COMPLETED^"_$G(VST)_"^^2753^"_SIGN
"RTN","VPRDJ08",212,0)
 S:$G(VPRTEXT) TEXT=$$TEXT^VPRDLRA(DFN,SUB,IDT)
"RTN","VPRDJ08",213,0)
 Q Y
"RTN","VPRDJ08",214,0)
 ;
"RTN","VPRDJ08",215,0)
 ; ------------------------------------------------------------------
"RTN","VPRDJ08",216,0)
 ; nationalTitle = 4695068^RADIOLOGY REPORT
"RTN","VPRDJ08",217,0)
 ;       Subject = 4693357^RADIOLOGY
"RTN","VPRDJ08",218,0)
 ;          Type = 4696123^REPORT
"RTN","VPRDJ08",219,0)
 ;
"RTN","VPRDJ08",220,0)
RA(DFN,BEG,END,MAX) ; -- Radiology reports
"RTN","VPRDJ08",221,0)
 N VPRXID,STS,PSET
"RTN","VPRDJ08",222,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRDJ08",223,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)_"P"
"RTN","VPRDJ08",224,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","VPRDJ08",225,0)
 S VPRXID="" F  S VPRXID=$O(^TMP($J,"RAE1",DFN,VPRXID)) Q:VPRXID=""  D
"RTN","VPRDJ08",226,0)
 . S STS=$P($G(^TMP($J,"RAE1",DFN,VPRXID)),U,3),PSET=$G(^(VPRXID,"CPRS"))
"RTN","VPRDJ08",227,0)
 . Q:STS="No Report"!(STS="Deleted")  ;!(STS["Draft") ??
"RTN","VPRDJ08",228,0)
 . I +PSET=2,$G(PSET(+VPRXID,$P(PSET,U,2))) Q  ;already have report
"RTN","VPRDJ08",229,0)
 . S VPRX=$$RA1(DFN,VPRXID) D EN1(VPRX,"RA")
"RTN","VPRDJ08",230,0)
 . I +PSET=2 S PSET(+VPRXID,$P(PSET,U,2))=$P(VPRXID,"-",2) ;parent
"RTN","VPRDJ08",231,0)
 K ^TMP($J,"RAE1"),^TMP("VPRTEXT",$J)
"RTN","VPRDJ08",232,0)
 Q
"RTN","VPRDJ08",233,0)
 ;
"RTN","VPRDJ08",234,0)
RA1(DFN,ID) ; -- return report data as TIU string [$$RESOLVE]
"RTN","VPRDJ08",235,0)
 S DFN=+$G(DFN),ID=$G(ID) I DFN<1!'$L(ID) Q ""
"RTN","VPRDJ08",236,0)
 N EXAM,CASE,PROC,RAE3,RAE1,TEXT,I,X,Y,DATE,LOC,STS,IENS,VST,USER,SIGN
"RTN","VPRDJ08",237,0)
 K RPT,^TMP("VPRTEXT",$J,ID)
"RTN","VPRDJ08",238,0)
 S ERRMSG=$$ERRMSG^VPRDJ0("TIU/Radiology report")
"RTN","VPRDJ08",239,0)
 S EXAM=DFN_U_$TR(ID,"-","^") D
"RTN","VPRDJ08",240,0)
 . N DFN D EN3^RAO7PC3(EXAM) ;report
"RTN","VPRDJ08",241,0)
 . D EN3^RAO7PC1(EXAM)       ;add'l values
"RTN","VPRDJ08",242,0)
 S CASE=$O(^TMP($J,"RAE3",DFN,0)),PROC=$O(^(CASE,"")),RAE3=$G(^(PROC))
"RTN","VPRDJ08",243,0)
 S RAE1=$G(^TMP($J,"RAE1",DFN,ID))
"RTN","VPRDJ08",244,0)
 I $G(VPRTEXT) D
"RTN","VPRDJ08",245,0)
 . S TEXT=$NA(^TMP("VPRTEXT",$J,ID))
"RTN","VPRDJ08",246,0)
 . S I=0 F  S I=$O(^TMP($J,"RAE3",DFN,CASE,PROC,I)) Q:I<1  S X=^(I),@TEXT@(I)=X
"RTN","VPRDJ08",247,0)
 S DATE=9999999.9999-(+ID),LOC=$P(RAE1,U,7),STS=$P(RAE3,U)
"RTN","VPRDJ08",248,0)
 S IENS=$P(ID,"-",2)_","_+ID_","_DFN_","
"RTN","VPRDJ08",249,0)
 S VST=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","VPRDJ08",250,0)
 S X=+$G(^TMP($J,"RAE2",DFN,CASE,PROC,"P")),(USER,SIGN)=""
"RTN","VPRDJ08",251,0)
 S:X USER=X_";;"_$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ08",252,0)
 S X=$G(^TMP($J,"RAE2",DFN,CASE,PROC,"V"))
"RTN","VPRDJ08",253,0)
 S:X SIGN="//"_+X_";"_$P($G(^VA(200,+X,0)),U)_";"_$$GET1^DIQ(74,+$P(RAE1,U,5)_",",7,"I")
"RTN","VPRDJ08",254,0)
 I $D(^TMP($J,"RAE3",DFN,"PRINT_SET")) S PROC=$G(^("ORD")) ;use parent, if printset
"RTN","VPRDJ08",255,0)
 S Y=ID_U_PROC_U_DATE_U_U_USER_U_LOC_U_STS_U_VST_"^^1901^"_SIGN
"RTN","VPRDJ08",256,0)
 K ^TMP($J,"RAE3",DFN),^TMP($J,"RAE2",DFN)
"RTN","VPRDJ08",257,0)
 Q Y
"RTN","VPRDJ09")
0^12^B32658400
"RTN","VPRDJ09",1,0)
VPRDJ09 ;SLC/MKB -- PCE, Mental Health ;8/2/11  15:29
"RTN","VPRDJ09",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDJ09",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDJ09",4,0)
 ;
"RTN","VPRDJ09",5,0)
 ; All tags expect DFN, ID, [VPRSTART, VPRSTOP, VPRMAX, VPRTEXT]
"RTN","VPRDJ09",6,0)
 ;
"RTN","VPRDJ09",7,0)
 ;
"RTN","VPRDJ09",8,0)
PXA(ID) ; -- find ID in ^PXRMINDX(FNUM), fall thru to PX1 if successful
"RTN","VPRDJ09",9,0)
 N N,ROOT,IDX,P,ITEM,DATE,VPRIDT
"RTN","VPRDJ09",10,0)
 S N=+$P(FNUM,".",2) K ^TMP("VPRPX",$J)
"RTN","VPRDJ09",11,0)
 I N=7!(N=18) S ROOT="^PXRMINDX("_FNUM_",""PPI"","_+$G(DFN)
"RTN","VPRDJ09",12,0)
 E  S ROOT="^PXRMINDX("_FNUM_",""PI"","_+$G(DFN)
"RTN","VPRDJ09",13,0)
 S IDX=ROOT_")" F  S IDX=$Q(@IDX) Q:$P(IDX,",",1,3)'=ROOT  D
"RTN","VPRDJ09",14,0)
 . S P=$L(IDX,",") Q:ID'=+$P(IDX,",",P)  ;last subscript
"RTN","VPRDJ09",15,0)
 . S DATE=+$P(IDX,",",P-1),ITEM=+$P(IDX,",",P-2)
"RTN","VPRDJ09",16,0)
 . S VPRIDT=9999999-DATE,^TMP("VPRPX",$J,VPRIDT,ID)=ITEM_U_DATE
"RTN","VPRDJ09",17,0)
 Q:'$D(^TMP("VPRPX",$J))  ;not found
"RTN","VPRDJ09",18,0)
PX1 ; -- PCE ^TMP("VPRPX",$J,VPRIDT,ID)=ITM^DATE for FNUM
"RTN","VPRDJ09",19,0)
 N N,TAG,VPRF,FLD,TMP,VISIT,X0,X12,FAC,LOC,X,Y,PCE
"RTN","VPRDJ09",20,0)
 S N=+$P(FNUM,".",2),TAG=$S(N=7:"VPOV",N=11:"VIMM",N=12:"VSKIN",N=13:"VXAM",N=16:"VPEDU",N=18:"VCPT",1:"VHF")
"RTN","VPRDJ09",21,0)
 D @(TAG_"^PXPXRM(ID,.VPRF)")
"RTN","VPRDJ09",22,0)
 K ERRARRY M ERRARRY=VPRF
"RTN","VPRDJ09",23,0)
 ;
"RTN","VPRDJ09",24,0)
 S PCE("localId")=ID,TMP=$G(^TMP("VPRPX",$J,VPRIDT,ID))
"RTN","VPRDJ09",25,0)
 S TAG=$S(N=7:"pov",N=11:"imm",N=12:"skin",N=13:"exam",N=16:"ed",N=18:"cpt",1:"hf")
"RTN","VPRDJ09",26,0)
 S PCE("uid")=$$SETUID^VPRUTILS(TAG,DFN,ID,"")
"RTN","VPRDJ09",27,0)
 S TAG=$S(N=23:"recorded",N=11:"administeredDateTime",1:"dateTimeEntered")
"RTN","VPRDJ09",28,0)
 S PCE(TAG)=$$JSONDT^VPRUTILS($P(TMP,U,2))
"RTN","VPRDJ09",29,0)
 S PCE("name")=$$EXTERNAL^DILFD(FNUM,.01,,+TMP)
"RTN","VPRDJ09",30,0)
 S VISIT=+$G(VPRF("VISIT")),PCE("encounterUid")=$$SETUID^VPRUTILS("visit",DFN,VISIT,"")
"RTN","VPRDJ09",31,0)
 S PCE("encounterName")=$$NAME^VPRDJ04(VISIT)
"RTN","VPRDJ09",32,0)
 S X0=$G(^AUPNVSIT(+VISIT,0)),FAC=+$P(X0,U,6),LOC=+$P(X0,U,22)
"RTN","VPRDJ09",33,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","VPRDJ09",34,0)
 S:'FAC X=$$FAC^VPRD(LOC)
"RTN","VPRDJ09",35,0)
 D FACILITY^VPRUTILS(X,"PCE")
"RTN","VPRDJ09",36,0)
 S:LOC PCE("location")=$P($G(^SC(LOC,0)),U)
"RTN","VPRDJ09",37,0)
 S X=$G(VPRF("COMMENTS")) S:$L(X) PCE("comment")=X
"RTN","VPRDJ09",38,0)
POV I FNUM=9000010.07 D  G PXQ
"RTN","VPRDJ09",39,0)
 . S X=$G(VPRF("PRIMARY/SECONDARY")),PCE("type")=$S($L(X):X,1:"U")
"RTN","VPRDJ09",40,0)
 . S X=PCE("name"),PCE("icdCode")=$$SETNCS^VPRUTILS("icd",X)
"RTN","VPRDJ09",41,0)
 . S X=$G(VPRF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","VPRDJ09",42,0)
CPT I FNUM=9000010.18 D  G PXQ
"RTN","VPRDJ09",43,0)
 . S X=$G(VPRF("PRINCIPAL PROCEDURE")),PCE("type")=$S($L(X):X,1:"U")
"RTN","VPRDJ09",44,0)
 . S X=PCE("name"),PCE("cptCode")=$$SETNCS^VPRUTILS("cpt",X)
"RTN","VPRDJ09",45,0)
 . S X=$G(VPRF("PROVIDER NARRATIVE")),PCE("name")=$$EXTERNAL^DILFD(9000010.18,.04,,X)
"RTN","VPRDJ09",46,0)
 . S PCE("quantity")=VPRF("QUANTITY")
"RTN","VPRDJ09",47,0)
 S X=$G(VPRF("VALUE")),FLD=$S(FNUM=9000010.16:.06,1:.04)
"RTN","VPRDJ09",48,0)
 S Y=$$EXTERNAL^DILFD(FNUM,FLD,,X)
"RTN","VPRDJ09",49,0)
IM I FNUM=9000010.11 D  G PXQ ;immunization
"RTN","VPRDJ09",50,0)
 . S:$L(Y) PCE("seriesName")=Y,PCE("seriesCode")=$$SETUID^VPRUTILS("series",DFN,Y,"")
"RTN","VPRDJ09",51,0)
 . S X=$G(VPRF("REACTION")) I $L(X) D
"RTN","VPRDJ09",52,0)
 .. S PCE("reactionName")=$$EXTERNAL^DILFD(9000010.11,.06,,X)
"RTN","VPRDJ09",53,0)
 .. S PCE("reactionCode")=$$SETUID^VPRUTILS("reaction",DFN,X,"")
"RTN","VPRDJ09",54,0)
 . S PCE("contraindicated")=$S(+$G(VPRF("CONTRAINDICATED")):"true",1:"false")
"RTN","VPRDJ09",55,0)
 . I '$D(^TMP("PXKENC",$J,VISIT)) D ENCEVENT^PXAPI(VISIT,1)
"RTN","VPRDJ09",56,0)
 . S X12=$G(^TMP("PXKENC",$J,VISIT,"IMM",ID,12))
"RTN","VPRDJ09",57,0)
 . S X=$P(X12,U,4) S:'X X=$P(X12,U,2)
"RTN","VPRDJ09",58,0)
 . I 'X S I=0 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  I $P($G(^(I,0)),U,4)="P" S X=+^(0) Q
"RTN","VPRDJ09",59,0)
 . S:X PCE("performerUid")=$$SETUID^VPRUTILS("user",DFN,+X,""),PCE("performerName")=$P($G(^VA(200,X,0)),U)
"RTN","VPRDJ09",60,0)
 . ; X=$G(VPRF("COMMENTS")) S:$L(X) PCE("comments")=X
"RTN","VPRDJ09",61,0)
 . ; CPT mapping
"RTN","VPRDJ09",62,0)
 . N IMM S IMM=$P($G(^AUPNVIMM(ID,0)),U) Q:IMM'>0
"RTN","VPRDJ09",63,0)
 . S X=+$$FIND1^DIC(811.1,,"QX",IMM_";AUTTIMM(","B") I X>0 D
"RTN","VPRDJ09",64,0)
 .. S Y=$$GET1^DIQ(811.1,X_",",.02,"I") Q:Y<1
"RTN","VPRDJ09",65,0)
 .. N CPT S CPT=$G(@(U_$P(Y,";",2)_+Y_",0)"))
"RTN","VPRDJ09",66,0)
 .. S PCE("cptCode")=$$SETNCS^VPRUTILS("cpt",+CPT)
"RTN","VPRDJ09",67,0)
 .. S (PCE("summary"),PCE("cptName"))=$P(CPT,U,2)
"RTN","VPRDJ09",68,0)
HF I FNUM=9000010.23 D  G PXQ ;health factor
"RTN","VPRDJ09",69,0)
 . S:$L(X) PCE("severity","uid")=$$SETVURN^VPRUTILS("factor-severity",X),PCE("severity","name")=$$LOWER^VALM1(Y)
"RTN","VPRDJ09",70,0)
 . S X=$$GET1^DIQ(9999999.64,+TMP_",",.03)
"RTN","VPRDJ09",71,0)
 . S:$L(X) PCE("category","uid")=$$SETVURN^VPRUTILS("factor-category",X),PCE("category","name")=X
"RTN","VPRDJ09",72,0)
 . S PCE("kind")="Health Factor",PCE("summary")=PCE("name")
"RTN","VPRDJ09",73,0)
 S:$L(Y) PCE("result")=Y
"RTN","VPRDJ09",74,0)
PXQ ;finish
"RTN","VPRDJ09",75,0)
 D ADD^VPRDJ("PCE")
"RTN","VPRDJ09",76,0)
 Q
"RTN","VPRDJ09",77,0)
 ;
"RTN","VPRDJ09",78,0)
YT1(ID) ; -- MH Administration
"RTN","VPRDJ09",79,0)
 N VPRY,MH,X2,X,Y
"RTN","VPRDJ09",80,0)
 D ENDAS71^YTQPXRM6(.VPRY,ID)
"RTN","VPRDJ09",81,0)
 K ERRARRY M ERRARRY=VPRY
"RTN","VPRDJ09",82,0)
 ;
"RTN","VPRDJ09",83,0)
 S MH("localId")=ID,X2=$G(VPRY(2))
"RTN","VPRDJ09",84,0)
 S MH("uid")=$$SETUID^VPRUTILS("mha",DFN,ID,"")
"RTN","VPRDJ09",85,0)
 S MH("displayName")=$P(X2,U,2),MH("name")=$P(X2,U,3)
"RTN","VPRDJ09",86,0)
 S MH("administeredDateTime")=$$JSONDT^VPRUTILS($P(X2,U,4))
"RTN","VPRDJ09",87,0)
 S X=$P(X2,U,6) I $L(X) D  ;ordered by
"RTN","VPRDJ09",88,0)
 . S Y=+$O(^VA(200,"B",X,0)),MH("providerName")=X
"RTN","VPRDJ09",89,0)
 . S:Y MH("providerUid")=$$SETUID^VPRUTILS("user",DFN,Y,"")
"RTN","VPRDJ09",90,0)
 ; anything else?
"RTN","VPRDJ09",91,0)
 D ADD^VPRDJ("MH")
"RTN","VPRDJ09",92,0)
 Q
"RTN","VPRDJ09",93,0)
 ;
"RTN","VPRDJ09",94,0)
SORT ; -- build ^TMP("VPRPX",$J,9999999-DATE,DA)=ITEM^DATE in range
"RTN","VPRDJ09",95,0)
 N TYPE,ITEM,DATE,DA,IDT K ^TMP("VPRPX",$J)
"RTN","VPRDJ09",96,0)
 I FNUM=9000010.07!(FNUM=9000010.18) G PPI
"RTN","VPRDJ09",97,0)
PI ; from ^PXRMINDX(FNUM,"PI",DFN,ITEM,DATE,DA)
"RTN","VPRDJ09",98,0)
 S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",99,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",100,0)
 .. Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",101,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PI",+$G(DFN),ITEM,DATE,DA)) Q:DA<1  S ^TMP("VPRPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","VPRDJ09",102,0)
 Q
"RTN","VPRDJ09",103,0)
PPI ; from ^PXRMINDX(FNUM,"PPI",DFN,TYPE,ITEM,DATE,DA)
"RTN","VPRDJ09",104,0)
 S TYPE="" F  S TYPE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE)) Q:TYPE=""  D
"RTN","VPRDJ09",105,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",106,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",107,0)
 ... Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",108,0)
 ... S DA=0 F  S DA=$O(^PXRMINDX(FNUM,"PPI",+$G(DFN),TYPE,ITEM,DATE,DA)) Q:DA<1  S ^TMP("VPRPX",$J,IDT,DA)=ITEM_U_DATE
"RTN","VPRDJ09",109,0)
 Q
"RTN","VPRDJ09",110,0)
PTF ; from ^PXRMINDX(45,"ICD9","PNI",DFN,TYPE,ITEM,DATE,DA)
"RTN","VPRDJ09",111,0)
 S TYPE="" F  S TYPE=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE)) Q:TYPE=""  D
"RTN","VPRDJ09",112,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM)) Q:ITEM<1  D
"RTN","VPRDJ09",113,0)
 .. S DATE=0 F  S DATE=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM,DATE)) Q:DATE<1  D
"RTN","VPRDJ09",114,0)
 ... Q:DATE<VPRSTART  Q:DATE>VPRSTOP  S IDT=9999999-DATE
"RTN","VPRDJ09",115,0)
 ... S DA="" F  S DA=$O(^PXRMINDX(45,"ICD9","PNI",+$G(DFN),TYPE,ITEM,DATE,DA)) Q:DA=""  S ^TMP("VPRPX",$J,IDT,DA_";"_TYPE)=ITEM_U_DATE
"RTN","VPRDJ09",116,0)
 Q
"RTN","VPRDTIUX")
0^13^B21288595
"RTN","VPRDTIUX",1,0)
VPRDTIUX ;SLC/MKB -- TIU search utilities ;8/2/11  15:29
"RTN","VPRDTIUX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRDTIUX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRDTIUX",4,0)
 ;
"RTN","VPRDTIUX",5,0)
 ; External References          DBIA#
"RTN","VPRDTIUX",6,0)
 ; -------------------          -----
"RTN","VPRDTIUX",7,0)
 ; ^TIU(8925.1              2321,5677
"RTN","VPRDTIUX",8,0)
 ; ^TIU(8926.1                   5678
"RTN","VPRDTIUX",9,0)
 ; DIQ                           2056
"RTN","VPRDTIUX",10,0)
 ; TIUCNSLT                      5546
"RTN","VPRDTIUX",11,0)
 ; TIUCP                         3568
"RTN","VPRDTIUX",12,0)
 ; TIULQ                         2693
"RTN","VPRDTIUX",13,0)
 ; TIULX                         3058
"RTN","VPRDTIUX",14,0)
 ; TIUSROI                       5676
"RTN","VPRDTIUX",15,0)
 ; XLFSTR                       10104
"RTN","VPRDTIUX",16,0)
 ;
"RTN","VPRDTIUX",17,0)
 ;
"RTN","VPRDTIUX",18,0)
 ; ------------ Get/apply search criteria ------------
"RTN","VPRDTIUX",19,0)
 ;                  [from EN^VPRDTIU]
"RTN","VPRDTIUX",20,0)
 ;
"RTN","VPRDTIUX",21,0)
SETUP ; -- convert FILTER("attribute") = value to TIU criteria
"RTN","VPRDTIUX",22,0)
 ; Expects: FILTER("category") = code (see $$CATG)
"RTN","VPRDTIUX",23,0)
 ;          FILTER("loinc")    = LOINC
"RTN","VPRDTIUX",24,0)
 ;          FILTER("status")   = 'all','completed','unsigned'
"RTN","VPRDTIUX",25,0)
 ; Returns: CLASS,[SUBCLASS,TITLE,SERVICE,SUBJECT,STATUS]
"RTN","VPRDTIUX",26,0)
 ;
"RTN","VPRDTIUX",27,0)
 N LOINC,TYPE,STS,CP
"RTN","VPRDTIUX",28,0)
 S LOINC=+$G(FILTER("loinc")),TYPE=$$UP^XLFSTR($G(FILTER("category")))
"RTN","VPRDTIUX",29,0)
 S CLASS="3^244",(SUBCLASS,TITLE,SERVICE,SUBJECT,NOTSUBJ,STATUS)=""
"RTN","VPRDTIUX",30,0)
 ;
"RTN","VPRDTIUX",31,0)
 ; status [default='complete']
"RTN","VPRDTIUX",32,0)
 S STS=$$LOW^XLFSTR($G(FILTER("status")))
"RTN","VPRDTIUX",33,0)
 S STATUS=$S(STS?1"unsig".E:2,STS="all":"5^2",1:5)  ;TIUSRVLO statuses
"RTN","VPRDTIUX",34,0)
 ;
"RTN","VPRDTIUX",35,0)
 ; all documents
"RTN","VPRDTIUX",36,0)
 I TYPE="ALL" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","VPRDTIUX",37,0)
 I 'LOINC,TYPE="" S CLASS="3^244^"_+$$CLASS^TIUSROI("SURGICAL REPORTS")_"^CP^LR^RA" Q
"RTN","VPRDTIUX",38,0)
 ;
"RTN","VPRDTIUX",39,0)
 ; progress notes
"RTN","VPRDTIUX",40,0)
 I TYPE="PN" S CLASS=3 Q
"RTN","VPRDTIUX",41,0)
 I TYPE="CR"!(LOINC=11488) S CLASS=3,SUBCLASS=+$$CLASS^TIUCNSLT Q
"RTN","VPRDTIUX",42,0)
 ; LOINC=26442 S CLASS=3,SUBJECT="^114^" Q         ;OB/GYN
"RTN","VPRDTIUX",43,0)
 I LOINC=34117 S CLASS=3,SERVICE="^88^" Q          ;H&P
"RTN","VPRDTIUX",44,0)
 I TYPE="CWAD" S CLASS=3,SUBCLASS="25^27^30^31" Q  ;CWAD
"RTN","VPRDTIUX",45,0)
 I TYPE="C" S CLASS=3,SUBCLASS=30 Q                ;Crisis Note
"RTN","VPRDTIUX",46,0)
 I TYPE="W" S CLASS=3,SUBCLASS=31 Q                ;Clinical Warning
"RTN","VPRDTIUX",47,0)
 I TYPE="A" S CLASS=3,SUBCLASS=25 Q                ;Allergy Note
"RTN","VPRDTIUX",48,0)
 I TYPE="D"!(LOINC=42348) S CLASS=3,SUBCLASS=27 Q  ;Advance Directive
"RTN","VPRDTIUX",49,0)
 ;
"RTN","VPRDTIUX",50,0)
 ; discharge summaries
"RTN","VPRDTIUX",51,0)
 I TYPE="DS"!(LOINC=18842) S CLASS=244 Q
"RTN","VPRDTIUX",52,0)
 ;
"RTN","VPRDTIUX",53,0)
 ; procedures
"RTN","VPRDTIUX",54,0)
 I TYPE="SR"!(LOINC=29752) S CLASS=+$$CLASS^TIUSROI("SURGICAL REPORTS") Q
"RTN","VPRDTIUX",55,0)
 D CPCLASS^TIUCP(.CP)
"RTN","VPRDTIUX",56,0)
 I TYPE="CP" S CLASS=$S(STATUS=2:CP,1:"CP") Q       ;CLINICAL PROCEDURES
"RTN","VPRDTIUX",57,0)
 I LOINC=26441 D  Q                                 ;CARDIOLOGY
"RTN","VPRDTIUX",58,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",59,0)
 . S SUBJECT="^18^142^174^",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",60,0)
 I LOINC=27896 D  Q                                 ;PULMONARY
"RTN","VPRDTIUX",61,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",62,0)
 . S SUBJECT="^23^142^",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",63,0)
 I LOINC=27895 D  Q                                 ;GASTROENTEROLOGY
"RTN","VPRDTIUX",64,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",65,0)
 . S SUBJECT="^20^",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",66,0)
 I LOINC=27897 D  Q                                 ;NEUROLOGY
"RTN","VPRDTIUX",67,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",68,0)
 . S SUBJECT="^44^45^52^111^112^143^146^",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",69,0)
 I LOINC=28619 D  Q                                 ;OPHTH/OPTOMETRY
"RTN","VPRDTIUX",70,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",71,0)
 . S SUBJECT="^13^14^103^",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",72,0)
 I LOINC=28634 D  Q                                 ;MISC/ALL OTHERS
"RTN","VPRDTIUX",73,0)
 . S CLASS=CP_"^3",SERVICE="^75^76^115^"
"RTN","VPRDTIUX",74,0)
 . S NOTSUBJ="^18^142^174^23^142^20^44^45^52^111^112^143^146^13^14^103^"
"RTN","VPRDTIUX",75,0)
 I LOINC=28570 D  Q                                 ;UNSPECIFIED/ALL
"RTN","VPRDTIUX",76,0)
 . S CLASS=CP_"^3"
"RTN","VPRDTIUX",77,0)
 . S SERVICE="^75^76^115^"
"RTN","VPRDTIUX",78,0)
 ;
"RTN","VPRDTIUX",79,0)
 ; pathology/lab
"RTN","VPRDTIUX",80,0)
 I TYPE="LR"!(LOINC=27898) S CLASS=$S(STATUS=2:$$LR,1:"LR") Q
"RTN","VPRDTIUX",81,0)
 ;
"RTN","VPRDTIUX",82,0)
 ; radiology
"RTN","VPRDTIUX",83,0)
 I TYPE="RA"!(LOINC=18726) S CLASS="RA" Q
"RTN","VPRDTIUX",84,0)
 ;
"RTN","VPRDTIUX",85,0)
 ; unknown
"RTN","VPRDTIUX",86,0)
 I $L(TYPE)!LOINC S CLASS=0
"RTN","VPRDTIUX",87,0)
 Q
"RTN","VPRDTIUX",88,0)
 ;
"RTN","VPRDTIUX",89,0)
LR() ; -- Return ien of Lab class
"RTN","VPRDTIUX",90,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","VPRDTIUX",91,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","VPRDTIUX",92,0)
 Q Y
"RTN","VPRDTIUX",93,0)
 ;
"RTN","VPRDTIUX",94,0)
MATCH(DOC,STS) ; -- Return 1 or 0, if document DA matches search criteria
"RTN","VPRDTIUX",95,0)
 N Y,DA,LOCAL,NATL,X0,OK S Y=0
"RTN","VPRDTIUX",96,0)
 S DA=+$G(DOC) G:DA<1 MQ
"RTN","VPRDTIUX",97,0)
 ; include addenda if pulling only unsigned items
"RTN","VPRDTIUX",98,0)
 I $P(DOC,U,2)?1"Addendum ".E,STATUS'=2 G MQ
"RTN","VPRDTIUX",99,0)
 ; TIU unsigned list can include completed parent notes
"RTN","VPRDTIUX",100,0)
 I $G(STS)=2,$P(DOC,U,7)'="unsigned" G MQ
"RTN","VPRDTIUX",101,0)
 S LOCAL=$$GET1^DIQ(8925,DA_",",.01,"I") ;local Title 8925.1 ien
"RTN","VPRDTIUX",102,0)
 I $L(SUBCLASS) D  G:'OK MQ
"RTN","VPRDTIUX",103,0)
 . N I,X S OK=0
"RTN","VPRDTIUX",104,0)
 . F I=1:1:$L(SUBCLASS,"^") S X=$P(SUBCLASS,U,I) I $$ISA^TIULX(LOCAL,X) S OK=1 Q
"RTN","VPRDTIUX",105,0)
 S NATL=+$$GET1^DIQ(8925.1,LOCAL_",",1501,"I") ;Natl Title 8926.1 ien
"RTN","VPRDTIUX",106,0)
 I $L(TITLE) G:TITLE'[(U_+NATL_U) MQ
"RTN","VPRDTIUX",107,0)
 S X0=$G(^TIU(8926.1,NATL,0))
"RTN","VPRDTIUX",108,0)
 I $L(SERVICE) G:SERVICE'[(U_+$P(X0,U,7)_U) MQ
"RTN","VPRDTIUX",109,0)
 I $L(SUBJECT) G:SUBJECT'[(U_+$P(X0,U,4)_U) MQ
"RTN","VPRDTIUX",110,0)
 I $L(NOTSUBJ) G:NOTSUBJ[(U_+$P(X0,U,4)_U) MQ
"RTN","VPRDTIUX",111,0)
 S Y=1
"RTN","VPRDTIUX",112,0)
MQ Q Y
"RTN","VPRDTIUX",113,0)
 ;
"RTN","VPRDTIUX",114,0)
TYPE(X) ; -- Return name of category type X
"RTN","VPRDTIUX",115,0)
 S X=$G(X)
"RTN","VPRDTIUX",116,0)
 I X="PN" Q "Progress Note"
"RTN","VPRDTIUX",117,0)
 I X="DS" Q "Discharge Summary"
"RTN","VPRDTIUX",118,0)
 I X="CP" Q "Clinical Procedure"
"RTN","VPRDTIUX",119,0)
 I X="SR" Q "Surgery Report"
"RTN","VPRDTIUX",120,0)
 I X="LR" Q "Laboratory Report"
"RTN","VPRDTIUX",121,0)
 I X="RA" Q "Radiology Report"
"RTN","VPRDTIUX",122,0)
 I X="CR" Q "Consult Report"
"RTN","VPRDTIUX",123,0)
 I X="C"  Q "Crisis Note"
"RTN","VPRDTIUX",124,0)
 I X="W"  Q "Clinical Warning"
"RTN","VPRDTIUX",125,0)
 I X="A"  Q "Allergy/Adverse Reaction"
"RTN","VPRDTIUX",126,0)
 I X="D"  Q "Advance Directive"
"RTN","VPRDTIUX",127,0)
 Q ""
"RTN","VPRJSON")
0^14^B11235996
"RTN","VPRJSON",1,0)
VPRJSON ;SLC/KCM -- Decode/Encode JSON
"RTN","VPRJSON",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRJSON",3,0)
 ;
"RTN","VPRJSON",4,0)
 ; Note:  Since the routines use closed array references, VVROOT and VVERR
"RTN","VPRJSON",5,0)
 ;        are used to reduce risk of naming conflicts on the closed array.
"RTN","VPRJSON",6,0)
 ;
"RTN","VPRJSON",7,0)
DECODE(VVJSON,VVROOT,VVERR)  ; Set JSON object into closed array ref VVROOT
"RTN","VPRJSON",8,0)
 ; Examples: D DECODE^VPRJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","VPRJSON",9,0)
 ;           D DECODE^VPRJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","VPRJSON",10,0)
 ;
"RTN","VPRJSON",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","VPRJSON",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSON",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSON",14,0)
 ;
"RTN","VPRJSON",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","VPRJSON",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","VPRJSON",17,0)
 ;  VVPROP: true if next string is property name, otherwise treat as value
"RTN","VPRJSON",18,0)
 ;
"RTN","VPRJSON",19,0)
 G DIRECT^VPRJSOND
"RTN","VPRJSON",20,0)
 ;
"RTN","VPRJSON",21,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","VPRJSON",22,0)
 ; Examples:  D ENCODE^VPRJSON("^GLO(99,2)","^TMP($J)")
"RTN","VPRJSON",23,0)
 ;            D ENCODE^VPRJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","VPRJSON",24,0)
 ;
"RTN","VPRJSON",25,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSON",26,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","VPRJSON",27,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSON",28,0)
 ;
"RTN","VPRJSON",29,0)
 G DIRECT^VPRJSONE
"RTN","VPRJSON",30,0)
 ;
"RTN","VPRJSON",31,0)
 ;
"RTN","VPRJSON",32,0)
ESC(X) ; Escape string for JSON
"RTN","VPRJSON",33,0)
 Q $$ESC^VPRJSONE(X)
"RTN","VPRJSON",34,0)
 ;
"RTN","VPRJSON",35,0)
UES(X) ; Unescape JSON string
"RTN","VPRJSON",36,0)
 Q $$UES^VPRJSOND(X)
"RTN","VPRJSON",37,0)
 ;
"RTN","VPRJSON",38,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSON",39,0)
 ; switch (ID) -- XERRX ends statement
"RTN","VPRJSON",40,0)
 N ERRMSG
"RTN","VPRJSON",41,0)
 ;
"RTN","VPRJSON",42,0)
 ; Decode Error Messages
"RTN","VPRJSON",43,0)
 ;
"RTN","VPRJSON",44,0)
 I ID="STL{" S ERRMSG="Stack too large for new object." G XERRX
"RTN","VPRJSON",45,0)
 I ID="SUF}" S ERRMSG="Stack Underflow - extra } found" G XERRX
"RTN","VPRJSON",46,0)
 I ID="STL[" S ERRMSG="Stack too large for new array." G XERRX
"RTN","VPRJSON",47,0)
 I ID="SUF]" S ERRMSG="Stack Underflow - extra ] found." G XERRX
"RTN","VPRJSON",48,0)
 I ID="OBM" S ERRMSG="Array mismatch - expected ] got }." G XERRX
"RTN","VPRJSON",49,0)
 I ID="ARM" S ERRMSG="Object mismatch - expected } got ]." G XERRX
"RTN","VPRJSON",50,0)
 I ID="MPN" S ERRMSG="Missing property name." G XERRX
"RTN","VPRJSON",51,0)
 I ID="EXT" S ERRMSG="Expected true, got "_VAL G XERRX
"RTN","VPRJSON",52,0)
 I ID="EXF" S ERRMSG="Expected false, got "_VAL G XERRX
"RTN","VPRJSON",53,0)
 I ID="EXN" S ERRMSG="Expected null, got "_VAL G XERRX
"RTN","VPRJSON",54,0)
 I ID="TKN" S ERRMSG="Unable to identify type of token, value was "_VAL G XERRX
"RTN","VPRJSON",55,0)
 I ID="SCT" S ERRMSG="Stack mismatch - exit stack level was  "_VAL G XERRX
"RTN","VPRJSON",56,0)
 I ID="EIQ" S ERRMSG="Close quote not found before end of input." G XERRX
"RTN","VPRJSON",57,0)
 I ID="EIU" S ERRMSG="Unexpected end of input while unescaping." G XERRX
"RTN","VPRJSON",58,0)
 I ID="RSB" S ERRMSG="Reverse search for \ past beginning of input." G XERRX
"RTN","VPRJSON",59,0)
 I ID="ORN" S ERRMSG="Overrun while scanning name." G XERRX
"RTN","VPRJSON",60,0)
 I ID="OR#" S ERRMSG="Overrun while scanning number." G XERRX
"RTN","VPRJSON",61,0)
 I ID="ORB" S ERRMSG="Overrun while scanning boolean." G XERRX
"RTN","VPRJSON",62,0)
 I ID="ESC" S ERRMSG="Escaped character not recognized"_VAL G XERRX
"RTN","VPRJSON",63,0)
 ;
"RTN","VPRJSON",64,0)
 ; Encode Error Messages
"RTN","VPRJSON",65,0)
 ;
"RTN","VPRJSON",66,0)
 I ID="SOB" S ERRMSG="Unable to serialize node as object, value was "_VAL G XERRX
"RTN","VPRJSON",67,0)
 I ID="SAR" S ERRMSG="Unable to serialize node as array, value was "_VAL G XERRX
"RTN","VPRJSON",68,0)
 S ERRMSG="Unspecified error "_ID_" "_$G(VAL)
"RTN","VPRJSON",69,0)
XERRX ; end switch
"RTN","VPRJSON",70,0)
 S @VVERR@(0)=$G(@VVERR@(0))+1
"RTN","VPRJSON",71,0)
 S @VVERR@(@VVERR@(0))=ERRMSG
"RTN","VPRJSON",72,0)
 S VVERRORS=VVERRORS+1
"RTN","VPRJSON",73,0)
 Q
"RTN","VPRJSOND")
0^15^B59103320
"RTN","VPRJSOND",1,0)
VPRJSOND ;SLC/KCM -- Decode JSON
"RTN","VPRJSOND",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRJSOND",3,0)
 ;
"RTN","VPRJSOND",4,0)
DECODE(VVJSON,VVROOT,VVERR) ; Set JSON object into closed array ref VVROOT
"RTN","VPRJSOND",5,0)
 ;
"RTN","VPRJSOND",6,0)
DIRECT ; TAG for use by DECODE^VPRJSON
"RTN","VPRJSOND",7,0)
 ;
"RTN","VPRJSOND",8,0)
 ; Examples: D DECODE^VPRJSON("MYJSON","LOCALVAR","LOCALERR")
"RTN","VPRJSOND",9,0)
 ;           D DECODE^VPRJSON("^MYJSON(1)","^GLO(99)","^TMP($J)")
"RTN","VPRJSOND",10,0)
 ;
"RTN","VPRJSOND",11,0)
 ; VVJSON: string/array containing serialized JSON object
"RTN","VPRJSOND",12,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSOND",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSOND",14,0)
 ;
"RTN","VPRJSOND",15,0)
 ;   VVIDX: points to next character in JSON string to process
"RTN","VPRJSOND",16,0)
 ; VVSTACK: manages stack of subscripts
"RTN","VPRJSOND",17,0)
 ;  VVPROP: true if next string is property name, otherwise treat as value
"RTN","VPRJSOND",18,0)
 ;
"RTN","VPRJSOND",19,0)
 N VVMAX S VVMAX=4000 ; limit document lines to 4000 characters
"RTN","VPRJSOND",20,0)
 S VVERR=$G(VVERR,"^TMP(""VPRJERR"",$J)")
"RTN","VPRJSOND",21,0)
 ; If a simple string is passed in, move it to an temp array (VVINPUT)
"RTN","VPRJSOND",22,0)
 ; so that the processing is consistently on an array.
"RTN","VPRJSOND",23,0)
 I $D(@VVJSON)=1 N VVINPUT S VVINPUT(1)=@VVJSON,VVJSON="VVINPUT"
"RTN","VPRJSOND",24,0)
 S VVROOT=$NA(@VVROOT@("Z")),VVROOT=$E(VVROOT,1,$L(VVROOT)-4) ; make open array ref
"RTN","VPRJSOND",25,0)
 N VVLINE,VVIDX,VVSTACK,VVPROP,VVTYPE,VVERRORS
"RTN","VPRJSOND",26,0)
 S VVLINE=$O(@VVJSON@("")),VVIDX=1,VVSTACK=0,VVPROP=0,VVERRORS=0
"RTN","VPRJSOND",27,0)
 F  S VVTYPE=$$NXTKN() Q:VVTYPE=""  D  I VVERRORS Q
"RTN","VPRJSOND",28,0)
 . I VVTYPE="{" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)="",VVPROP=1 D:VVSTACK>64 ERRX("STL{") Q
"RTN","VPRJSOND",29,0)
 . I VVTYPE="}" D:VVSTACK(VVSTACK) ERRX("OBM") S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF}") Q
"RTN","VPRJSOND",30,0)
 . I VVTYPE="[" S VVSTACK=VVSTACK+1,VVSTACK(VVSTACK)=1 D:VVSTACK>64 ERRX("STL[") Q
"RTN","VPRJSOND",31,0)
 . I VVTYPE="]" D:'VVSTACK(VVSTACK) ERRX("ARM") S VVSTACK=VVSTACK-1 D:VVSTACK<0 ERRX("SUF]") Q
"RTN","VPRJSOND",32,0)
 . I VVTYPE="," D  Q
"RTN","VPRJSOND",33,0)
 . . I VVSTACK(VVSTACK) S VVSTACK(VVSTACK)=VVSTACK(VVSTACK)+1  ; next in array
"RTN","VPRJSOND",34,0)
 . . E  S VVPROP=1                                   ; or next property name
"RTN","VPRJSOND",35,0)
 . I VVTYPE=":" S VVPROP=0 D:'$L($G(VVSTACK(VVSTACK))) ERRX("MPN") Q
"RTN","VPRJSOND",36,0)
 . I VVTYPE="""" D  Q
"RTN","VPRJSOND",37,0)
 . . I VVPROP S VVSTACK(VVSTACK)=$$NAMPARS() I 1
"RTN","VPRJSOND",38,0)
 . . E  D ADDSTR
"RTN","VPRJSOND",39,0)
 . S VVTYPE=$TR(VVTYPE,"TFN","tfn")
"RTN","VPRJSOND",40,0)
 . I VVTYPE="t" D SETBOOL("t") Q
"RTN","VPRJSOND",41,0)
 . I VVTYPE="f" D SETBOOL("f") Q
"RTN","VPRJSOND",42,0)
 . I VVTYPE="n" D SETBOOL("n") Q
"RTN","VPRJSOND",43,0)
 . I "0123456789+-.eE"[VVTYPE S @$$CURNODE()=$$NUMPARS(VVTYPE) Q
"RTN","VPRJSOND",44,0)
 . D ERRX("TKN",VVTYPE)
"RTN","VPRJSOND",45,0)
 I VVSTACK'=0 D ERRX("SCT",VVSTACK)
"RTN","VPRJSOND",46,0)
 Q
"RTN","VPRJSOND",47,0)
NXTKN() ; Move the pointers to the beginning of the next token
"RTN","VPRJSOND",48,0)
 N VVDONE,VVEOF,VVTOKEN
"RTN","VPRJSOND",49,0)
 S VVDONE=0,VVEOF=0 F  D  Q:VVDONE!VVEOF  ; eat spaces & new lines until next visible char
"RTN","VPRJSOND",50,0)
 . I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=$O(@VVJSON@(VVLINE)),VVIDX=1 I 'VVLINE S VVEOF=1 Q
"RTN","VPRJSOND",51,0)
 . I $A(@VVJSON@(VVLINE),VVIDX)>32 S VVDONE=1 Q
"RTN","VPRJSOND",52,0)
 . S VVIDX=VVIDX+1
"RTN","VPRJSOND",53,0)
 Q:VVEOF ""  ; we're at the end of input
"RTN","VPRJSOND",54,0)
 S VVTOKEN=$E(@VVJSON@(VVLINE),VVIDX),VVIDX=VVIDX+1
"RTN","VPRJSOND",55,0)
 Q VVTOKEN
"RTN","VPRJSOND",56,0)
 ;
"RTN","VPRJSOND",57,0)
ADDSTR ; Add string value to current node, escaping text along the way
"RTN","VPRJSOND",58,0)
 ; Expects VVLINE,VVIDX to reference that starting point of the index
"RTN","VPRJSOND",59,0)
 ; TODO: add a mechanism to specify names that should not be escaped
"RTN","VPRJSOND",60,0)
 ;       just store as ":")= and ":",n)=
"RTN","VPRJSOND",61,0)
 ;
"RTN","VPRJSOND",62,0)
 ; Happy path -- we find the end quote in the same line
"RTN","VPRJSOND",63,0)
 N VVEND,VVX
"RTN","VPRJSOND",64,0)
 S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","VPRJSOND",65,0)
 I VVEND,($E(@VVJSON@(VVLINE),VVEND-2)'="\") D SETSTR  QUIT  ;normal
"RTN","VPRJSOND",66,0)
 I VVEND,$$ISCLOSEQ(VVLINE) D SETSTR QUIT  ;close quote preceded by escaped \
"RTN","VPRJSOND",67,0)
 ;
"RTN","VPRJSOND",68,0)
 ; Less happy path -- first quote wasn't close quote
"RTN","VPRJSOND",69,0)
 N VVDONE,VVTLINE
"RTN","VPRJSOND",70,0)
 S VVDONE=0,VVTLINE=VVLINE ; VVTLINE for temporary increment of VVLINE
"RTN","VPRJSOND",71,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",72,0)
 . ;if no quote on current line advance line, scan again
"RTN","VPRJSOND",73,0)
 . I 'VVEND S VVTLINE=VVTLINE+1,VVEND=1 I '$D(@VVJSON@(VVTLINE)) D ERRX("EIQ") Q
"RTN","VPRJSOND",74,0)
 . S VVEND=$F(@VVJSON@(VVTLINE),"""",VVEND)
"RTN","VPRJSOND",75,0)
 . I VVEND,$E(@VVJSON@(VVTLINE),VVEND-2)'="\" S VVDONE=1 Q  ; found quote position
"RTN","VPRJSOND",76,0)
 . S VVDONE=$$ISCLOSEQ(VVTLINE) ; see if this is an escaped quote or closing quote
"RTN","VPRJSOND",77,0)
 Q:VVERRORS
"RTN","VPRJSOND",78,0)
 ; unescape from VVIDX to VVEND, using \-extension nodes as necessary
"RTN","VPRJSOND",79,0)
 D UESEXT
"RTN","VPRJSOND",80,0)
 ; now we need to move VVLINE and VVIDX to next parsing point
"RTN","VPRJSOND",81,0)
 S VVLINE=VVTLINE,VVIDX=VVEND
"RTN","VPRJSOND",82,0)
 Q
"RTN","VPRJSOND",83,0)
SETSTR ; Set simple string value from within same line
"RTN","VPRJSOND",84,0)
 ; expects VVJSON, VVLINE, VVINX, VVEND
"RTN","VPRJSOND",85,0)
 N VVX
"RTN","VPRJSOND",86,0)
 S VVX=$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND
"RTN","VPRJSOND",87,0)
 S @$$CURNODE()=$$UES(VVX)
"RTN","VPRJSOND",88,0)
 I +VVX=VVX S @$$CURNODE()@("\s")=""
"RTN","VPRJSOND",89,0)
 ;S vX=$S(+vX=vX:$C(186)_vX,1:$$UES(vX))
"RTN","VPRJSOND",90,0)
 ;S @$$CURNODE()=vX
"RTN","VPRJSOND",91,0)
 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1
"RTN","VPRJSOND",92,0)
 Q
"RTN","VPRJSOND",93,0)
UESEXT ; unescape from VVLINE,VVIDX to VVTLINE,VVEND & extend (\) if necessary
"RTN","VPRJSOND",94,0)
 ; expects VVLINE,VVIDX,VVTLINE,VVEND
"RTN","VPRJSOND",95,0)
 N VVI,VVY,VVSTART,VVSTOP,VVDONE,VVBUF,VVNODE,VVMORE,VVTO
"RTN","VPRJSOND",96,0)
 S VVNODE=$$CURNODE(),VVBUF="",VVMORE=0,VVSTOP=VVEND-2
"RTN","VPRJSOND",97,0)
 S VVI=VVIDX,VVY=VVLINE,VVDONE=0
"RTN","VPRJSOND",98,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",99,0)
 . S VVSTART=VVI,VVI=$F(@VVJSON@(VVY),"\",VVI)
"RTN","VPRJSOND",100,0)
 . ; if we are on the last line, don't extract past VVSTOP
"RTN","VPRJSOND",101,0)
 . I (VVY=VVTLINE) S VVTO=$S('VVI:VVSTOP,VVI>VVSTOP:VVSTOP,1:VVI-2) I 1
"RTN","VPRJSOND",102,0)
 . E  S VVTO=$S('VVI:99999,1:VVI-2)
"RTN","VPRJSOND",103,0)
 . D ADDBUF($E(@VVJSON@(VVY),VVSTART,VVTO))
"RTN","VPRJSOND",104,0)
 . I (VVY'<VVTLINE),(('VVI)!(VVI>VVSTOP)) S VVDONE=1 QUIT  ; now past close quote
"RTN","VPRJSOND",105,0)
 . I 'VVI S VVY=VVY+1,VVI=1 QUIT  ; nothing escaped, go to next line
"RTN","VPRJSOND",106,0)
 . I VVI>$L(@VVJSON@(VVY)) S VVY=VVY+1,VVI=1 I '$D(@VVJSON@(VVY)) D ERRX("EIU")
"RTN","VPRJSOND",107,0)
 . D ADDBUF($$REALCHAR($E(@VVJSON@(VVY),VVI)))
"RTN","VPRJSOND",108,0)
 . S VVI=VVI+1
"RTN","VPRJSOND",109,0)
 . I (VVY'<VVTLINE),(VVI>VVSTOP) S VVDONE=1 ; VVI incremented past stop
"RTN","VPRJSOND",110,0)
 Q:VVERRORS
"RTN","VPRJSOND",111,0)
 D SAVEBUF
"RTN","VPRJSOND",112,0)
 Q
"RTN","VPRJSOND",113,0)
ADDBUF(VVX) ; add buffer of characters to destination
"RTN","VPRJSOND",114,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","VPRJSOND",115,0)
 ; used directly by ADDSTR
"RTN","VPRJSOND",116,0)
 I $L(VVX)+$L(VVBUF)>VVMAX D SAVEBUF
"RTN","VPRJSOND",117,0)
 S VVBUF=VVBUF_VVX
"RTN","VPRJSOND",118,0)
 Q
"RTN","VPRJSOND",119,0)
SAVEBUF ; write out buffer to destination
"RTN","VPRJSOND",120,0)
 ; expects VVBUF,VVMAX,VVNODE,VVMORE to be defined
"RTN","VPRJSOND",121,0)
 ; used directly by ADDSTR,ADDBUF
"RTN","VPRJSOND",122,0)
 I 'VVMORE S @VVNODE=VVBUF S:+VVBUF=VVBUF @VVNODE@("\s")="" I 1 ;$S(+VVBUF=VVBUF:$C(186)_VVBUF,1:VVBUF)
"RTN","VPRJSOND",123,0)
 E  S @VVNODE@("\",VVMORE)=VVBUF
"RTN","VPRJSOND",124,0)
 S VVMORE=VVMORE+1,VVBUF=""
"RTN","VPRJSOND",125,0)
 Q
"RTN","VPRJSOND",126,0)
ISCLOSEQ(VVBLINE) ; return true if this is a closing, rather than escaped, quote
"RTN","VPRJSOND",127,0)
 ; expects VVJSON, VVIDX, VVEND
"RTN","VPRJSOND",128,0)
 ; always called directly from ADDSTR
"RTN","VPRJSOND",129,0)
 N VVBACK,VVBIDX
"RTN","VPRJSOND",130,0)
 S VVBACK=0,VVBIDX=VVEND-2
"RTN","VPRJSOND",131,0)
 ; starting at VVEND-2 means looking at the char right before the \
"RTN","VPRJSOND",132,0)
 ; if it is not \, then the \ was escaping the quote
"RTN","VPRJSOND",133,0)
 F  D  Q:$E(@VVJSON@(VVBLINE),VVBIDX)'="\"  Q:VVERRORS
"RTN","VPRJSOND",134,0)
 . S VVBACK=VVBACK+1,VVBIDX=VVBIDX-1
"RTN","VPRJSOND",135,0)
 . I (VVBLINE=VVLINE),(VVBIDX=VVIDX) Q  ; back at the open quote
"RTN","VPRJSOND",136,0)
 . Q:VVBIDX
"RTN","VPRJSOND",137,0)
 . ; when VVBIDX<1 go back a line
"RTN","VPRJSOND",138,0)
 . S VVBLINE=VVBLINE-1 I VVBLINE<VVLINE D ERRX("RSB") Q
"RTN","VPRJSOND",139,0)
 . S VVBIDX=$L(@VVJSON@(VVBLINE))
"RTN","VPRJSOND",140,0)
 Q VVBACK#2=0  ; VVBACK is even if this is a close quote
"RTN","VPRJSOND",141,0)
 ;
"RTN","VPRJSOND",142,0)
NAMPARS() ; Return parsed name, advancing index past the close quote
"RTN","VPRJSOND",143,0)
 ; -- This assumes no embedded quotes are in the name itself --
"RTN","VPRJSOND",144,0)
 N VVEND,VVDONE,VVNAME
"RTN","VPRJSOND",145,0)
 S VVDONE=0,VVNAME=""
"RTN","VPRJSOND",146,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",147,0)
 . S VVEND=$F(@VVJSON@(VVLINE),"""",VVIDX)
"RTN","VPRJSOND",148,0)
 . I VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,VVEND-2),VVIDX=VVEND,VVDONE=1
"RTN","VPRJSOND",149,0)
 . I 'VVEND S VVNAME=VVNAME_$E(@VVJSON@(VVLINE),VVIDX,$L(@VVJSON@(VVLINE)))
"RTN","VPRJSOND",150,0)
 . I 'VVEND!(VVEND>$L(@VVJSON@(VVLINE))) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORN")
"RTN","VPRJSOND",151,0)
 Q VVNAME
"RTN","VPRJSOND",152,0)
 ;
"RTN","VPRJSOND",153,0)
NUMPARS(VVDIGIT) ; Return parsed number, advancing index past the end of the number
"RTN","VPRJSOND",154,0)
 ; VVIDX intially references the second digit
"RTN","VPRJSOND",155,0)
 N VVDONE,VVNUM
"RTN","VPRJSOND",156,0)
 S VVDONE=0,VVNUM=VVDIGIT
"RTN","VPRJSOND",157,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",158,0)
 . I '("0123456789+-.eE"[$E(@VVJSON@(VVLINE),VVIDX)) S VVDONE=1 Q
"RTN","VPRJSOND",159,0)
 . S VVNUM=VVNUM_$E(@VVJSON@(VVLINE),VVIDX)
"RTN","VPRJSOND",160,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("OR#")
"RTN","VPRJSOND",161,0)
 Q VVNUM
"RTN","VPRJSOND",162,0)
 ;
"RTN","VPRJSOND",163,0)
SETBOOL(VVLTR) ; Return parsed value, advancing index past the end of the value
"RTN","VPRJSOND",164,0)
 N VVDONE,VVBOOL,VVX
"RTN","VPRJSOND",165,0)
 S VVDONE=0,VVBOOL=VVLTR
"RTN","VPRJSOND",166,0)
 F  D  Q:VVDONE  Q:VVERRORS
"RTN","VPRJSOND",167,0)
 . S VVX=$TR($E(@VVJSON@(VVLINE),VVIDX),"TRUEFALSN","truefalsn")
"RTN","VPRJSOND",168,0)
 . I '("truefalsn"[VVX) S VVDONE=1 Q
"RTN","VPRJSOND",169,0)
 . S VVBOOL=VVBOOL_VVX
"RTN","VPRJSOND",170,0)
 . S VVIDX=VVIDX+1 I VVIDX>$L(@VVJSON@(VVLINE)) S VVLINE=VVLINE+1,VVIDX=1 I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","VPRJSOND",171,0)
 I VVLTR="t",(VVBOOL'="true") D ERRX("EXT",VVTYPE)
"RTN","VPRJSOND",172,0)
 I VVLTR="f",(VVBOOL'="false") D ERRX("EXF",VVTYPE)
"RTN","VPRJSOND",173,0)
 I VVLTR="n",(VVBOOL'="null") D ERRX("EXN",VVTYPE)
"RTN","VPRJSOND",174,0)
 S @$$CURNODE()=VVBOOL
"RTN","VPRJSOND",175,0)
 Q
"RTN","VPRJSOND",176,0)
 ;
"RTN","VPRJSOND",177,0)
OSETBOOL(VVX) ; set a value and increment VVIDX
"RTN","VPRJSOND",178,0)
 S @$$CURNODE()=VVX
"RTN","VPRJSOND",179,0)
 S VVIDX=VVIDX+$L(VVX)-1
"RTN","VPRJSOND",180,0)
 N VVDIFF S VVDIFF=VVIDX-$L(@VVJSON@(VVLINE))  ; in case VVIDX moves to next line
"RTN","VPRJSOND",181,0)
 I VVDIFF>0 S VVLINE=VVLINE+1,VVIDX=VVDIFF I '$D(@VVJSON@(VVLINE)) D ERRX("ORB")
"RTN","VPRJSOND",182,0)
 Q
"RTN","VPRJSOND",183,0)
CURNODE() ; Return a global/local variable name based on VVSTACK
"RTN","VPRJSOND",184,0)
 ; Expects VVSTACK to be defined already
"RTN","VPRJSOND",185,0)
 N VVI,VVSUBS
"RTN","VPRJSOND",186,0)
 S VVSUBS=""
"RTN","VPRJSOND",187,0)
 F VVI=1:1:VVSTACK S:VVI>1 VVSUBS=VVSUBS_"," D
"RTN","VPRJSOND",188,0)
 . I VVSTACK(VVI) S VVSUBS=VVSUBS_VVSTACK(VVI)
"RTN","VPRJSOND",189,0)
 . E  S VVSUBS=VVSUBS_""""_VVSTACK(VVI)_""""
"RTN","VPRJSOND",190,0)
 Q VVROOT_VVSUBS_")"
"RTN","VPRJSOND",191,0)
 ;
"RTN","VPRJSOND",192,0)
UES(X) ; Unescape JSON string
"RTN","VPRJSOND",193,0)
 ; copy segments from START to POS-2 (right before \)
"RTN","VPRJSOND",194,0)
 ; translate target character (which is at $F position)
"RTN","VPRJSOND",195,0)
 N POS,Y,START
"RTN","VPRJSOND",196,0)
 S POS=0,Y=""
"RTN","VPRJSOND",197,0)
 F  S START=POS+1 D  Q:START>$L(X)
"RTN","VPRJSOND",198,0)
 . S POS=$F(X,"\",POS+1) ; find next position
"RTN","VPRJSOND",199,0)
 . I 'POS S Y=Y_$E(X,START,$L(X)),POS=$L(X) I 1
"RTN","VPRJSOND",200,0)
 . E  S Y=Y_$E(X,START,POS-2)_$$REALCHAR($E(X,POS))
"RTN","VPRJSOND",201,0)
 . ;S:'POS POS=$L(X)+2  ; get the rest of the string
"RTN","VPRJSOND",202,0)
 . ;S Y=Y_$E(X,START,POS-2)_$$REALCHAR($E(X,POS))
"RTN","VPRJSOND",203,0)
 Q Y
"RTN","VPRJSOND",204,0)
 ;
"RTN","VPRJSOND",205,0)
REALCHAR(C) ; Return actual character from escaped
"RTN","VPRJSOND",206,0)
 I C="""" Q """"
"RTN","VPRJSOND",207,0)
 I C="/" Q "/"
"RTN","VPRJSOND",208,0)
 I C="\" Q "\"
"RTN","VPRJSOND",209,0)
 I C="b" Q $C(8)
"RTN","VPRJSOND",210,0)
 I C="f" Q $C(12)
"RTN","VPRJSOND",211,0)
 I C="n" Q $C(10)
"RTN","VPRJSOND",212,0)
 I C="r" Q $C(13)
"RTN","VPRJSOND",213,0)
 I C="t" Q $C(9)
"RTN","VPRJSOND",214,0)
 I C="u" ;TODO add case for 4-hex-digits (U000A, for example)
"RTN","VPRJSOND",215,0)
 ;otherwise
"RTN","VPRJSOND",216,0)
 I $L($G(VVERR)) D ERRX("ESC",C)
"RTN","VPRJSOND",217,0)
 Q C
"RTN","VPRJSOND",218,0)
 ;
"RTN","VPRJSOND",219,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSOND",220,0)
 D ERRX^VPRJSON(ID,$G(VAL))
"RTN","VPRJSOND",221,0)
 Q
"RTN","VPRJSONE")
0^16^B16192054
"RTN","VPRJSONE",1,0)
VPRJSONE ;SLC/KCM -- Encode JSON
"RTN","VPRJSONE",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRJSONE",3,0)
 ;
"RTN","VPRJSONE",4,0)
ENCODE(VVROOT,VVJSON,VVERR) ; VVROOT (M structure) --> VVJSON (array of strings)
"RTN","VPRJSONE",5,0)
 ;
"RTN","VPRJSONE",6,0)
DIRECT ; TAG for use by ENCODE^VPRJSON
"RTN","VPRJSONE",7,0)
 ;
"RTN","VPRJSONE",8,0)
 ; Examples:  D ENCODE^VPRJSON("^GLO(99,2)","^TMP($J)")
"RTN","VPRJSONE",9,0)
 ;            D ENCODE^VPRJSON("LOCALVAR","MYJSON","LOCALERR")
"RTN","VPRJSONE",10,0)
 ;
"RTN","VPRJSONE",11,0)
 ; VVROOT: closed array reference for M representation of object
"RTN","VPRJSONE",12,0)
 ; VVJSON: destination variable for the string array formatted as JSON
"RTN","VPRJSONE",13,0)
 ;  VVERR: contains error messages, defaults to ^TMP("VPRJERR",$J)
"RTN","VPRJSONE",14,0)
 ;
"RTN","VPRJSONE",15,0)
 S VVERR=$G(VVERR,"^TMP(""VPRJERR"",$J)")
"RTN","VPRJSONE",16,0)
 I '$L($G(VVROOT)) ; set error info
"RTN","VPRJSONE",17,0)
 I '$L($G(VVJSON)) ; set error info
"RTN","VPRJSONE",18,0)
 N VVLINE,VVMAX,VVERRORS
"RTN","VPRJSONE",19,0)
 S VVLINE=1,VVMAX=4000,VVERRORS=0  ; 96 more bytes of wiggle room
"RTN","VPRJSONE",20,0)
 S @VVJSON@(VVLINE)=""
"RTN","VPRJSONE",21,0)
 D SEROBJ(VVROOT)
"RTN","VPRJSONE",22,0)
 Q
"RTN","VPRJSONE",23,0)
 ;
"RTN","VPRJSONE",24,0)
SEROBJ(VVROOT) ; Serialize into a JSON object
"RTN","VPRJSONE",25,0)
 N VVFIRST,VVSUB,VVNXT
"RTN","VPRJSONE",26,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"{"
"RTN","VPRJSONE",27,0)
 S VVFIRST=1
"RTN","VPRJSONE",28,0)
 S VVSUB="" F  S VVSUB=$O(@VVROOT@(VVSUB)) Q:VVSUB=""  D
"RTN","VPRJSONE",29,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","VPRJSONE",30,0)
 . ; get the name part
"RTN","VPRJSONE",31,0)
 . D SERNAME(VVSUB)
"RTN","VPRJSONE",32,0)
 . ; if this is a value, serialize it
"RTN","VPRJSONE",33,0)
 . I $$ISVALUE(VVROOT,VVSUB) D SERVAL(VVROOT,VVSUB) Q
"RTN","VPRJSONE",34,0)
 . ; otherwise navigate to the next child object or array
"RTN","VPRJSONE",35,0)
 . I $D(@VVROOT@(VVSUB))=10 S VVNXT=$O(@VVROOT@(VVSUB,"")) D  Q
"RTN","VPRJSONE",36,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVSUB))) I 1
"RTN","VPRJSONE",37,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVSUB)))
"RTN","VPRJSONE",38,0)
 . D ERRX("SOB",VVSUB)  ; should quit loop before here
"RTN","VPRJSONE",39,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"}"
"RTN","VPRJSONE",40,0)
 Q
"RTN","VPRJSONE",41,0)
SERARY(VVROOT) ; Serialize into a JSON array
"RTN","VPRJSONE",42,0)
 N VVFIRST,VVI,VVNXT
"RTN","VPRJSONE",43,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"["
"RTN","VPRJSONE",44,0)
 S VVFIRST=1
"RTN","VPRJSONE",45,0)
 S VVI=0 F  S VVI=$O(@VVROOT@(VVI)) Q:'VVI  D
"RTN","VPRJSONE",46,0)
 . S:'VVFIRST @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"," S VVFIRST=0
"RTN","VPRJSONE",47,0)
 . I $$ISVALUE(VVROOT,VVI) D SERVAL(VVROOT,VVI) Q  ; write value
"RTN","VPRJSONE",48,0)
 . I $D(@VVROOT@(VVI))=10 S VVNXT=$O(@VVROOT@(VVI,"")) D  Q
"RTN","VPRJSONE",49,0)
 . . I +VVNXT D SERARY($NA(@VVROOT@(VVI))) I 1
"RTN","VPRJSONE",50,0)
 . . E  D SEROBJ($NA(@VVROOT@(VVI)))
"RTN","VPRJSONE",51,0)
 . D ERRX("SAR",VVI)  ; should quit loop before here
"RTN","VPRJSONE",52,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_"]"
"RTN","VPRJSONE",53,0)
 Q
"RTN","VPRJSONE",54,0)
SERNAME(VVSUB) ; Serialize the object name into JSON string
"RTN","VPRJSONE",55,0)
 I ($L(VVSUB)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","VPRJSONE",56,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_""""_VVSUB_""""_":"
"RTN","VPRJSONE",57,0)
 Q
"RTN","VPRJSONE",58,0)
SERVAL(VVROOT,VVSUB) ; Serialize X into appropriate JSON representation
"RTN","VPRJSONE",59,0)
 N VVX,VVI
"RTN","VPRJSONE",60,0)
 ; if the node is already in JSON format, just add it
"RTN","VPRJSONE",61,0)
 I $D(@VVROOT@(VVSUB,":")) D  QUIT  ; <-- jump out here if preformatted
"RTN","VPRJSONE",62,0)
 . S VVX=$G(@VVROOT@(VVSUB,":")) D:$L(VVX) CONCAT
"RTN","VPRJSONE",63,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,":",VVI)) Q:'VVI  S VVX=@VVROOT@(VVSUB,":",VVI) D CONCAT
"RTN","VPRJSONE",64,0)
 ;
"RTN","VPRJSONE",65,0)
 S VVX=$G(@VVROOT@(VVSUB))
"RTN","VPRJSONE",66,0)
 ; handle the numeric, boolean, and null types
"RTN","VPRJSONE",67,0)
 I '$D(@VVROOT@(VVSUB,"\s")),$$NUMERIC(VVX) D CONCAT QUIT
"RTN","VPRJSONE",68,0)
 I (VVX="true")!(VVX="false")!(VVX="null") D CONCAT QUIT
"RTN","VPRJSONE",69,0)
 ;I $E(vX)=$C(186) S vX=$E(vX,2,$L(vX)) ; remove the "string-forcing" char
"RTN","VPRJSONE",70,0)
 ; otherwise treat it as a string type
"RTN","VPRJSONE",71,0)
 S VVX=""""_$$ESC(VVX) ; open quote
"RTN","VPRJSONE",72,0)
 D CONCAT
"RTN","VPRJSONE",73,0)
 I $D(@VVROOT@(VVSUB,"\")) D  ; handle continuation nodes
"RTN","VPRJSONE",74,0)
 . S VVI=0 F  S VVI=$O(@VVROOT@(VVSUB,"\",VVI)) Q:'VVI   D
"RTN","VPRJSONE",75,0)
 . . S VVX=$$ESC(@VVROOT@(VVSUB,"\",VVI))
"RTN","VPRJSONE",76,0)
 . . D CONCAT
"RTN","VPRJSONE",77,0)
 S VVX="""" D CONCAT    ; close quote
"RTN","VPRJSONE",78,0)
 Q
"RTN","VPRJSONE",79,0)
CONCAT ; come here to concatenate to JSON string
"RTN","VPRJSONE",80,0)
 I ($L(VVX)+$L(@VVJSON@(VVLINE)))>VVMAX S VVLINE=VVLINE+1,@VVJSON@(VVLINE)=""
"RTN","VPRJSONE",81,0)
 S @VVJSON@(VVLINE)=@VVJSON@(VVLINE)_VVX
"RTN","VPRJSONE",82,0)
 Q
"RTN","VPRJSONE",83,0)
ISVALUE(VVROOT,VVSUB) ; Return true if this is a value node
"RTN","VPRJSONE",84,0)
 I $D(@VVROOT@(VVSUB))#2 Q 1
"RTN","VPRJSONE",85,0)
 N VVX S VVX=$O(@VVROOT@(VVSUB,""))
"RTN","VPRJSONE",86,0)
 Q:VVX="\" 1
"RTN","VPRJSONE",87,0)
 Q:VVX=":" 1
"RTN","VPRJSONE",88,0)
 Q 0
"RTN","VPRJSONE",89,0)
 ;
"RTN","VPRJSONE",90,0)
NUMERIC(X) ; Return true if the numeric
"RTN","VPRJSONE",91,0)
 I X=0 Q 1        ; numeric (value is zero)
"RTN","VPRJSONE",92,0)
 I +X=0 Q 0       ; string
"RTN","VPRJSONE",93,0)
 I X?1"."1.N Q 0  ; string (value begins with decimal)
"RTN","VPRJSONE",94,0)
 I +X=X Q 1       ; numeric
"RTN","VPRJSONE",95,0)
 S X=$TR(X,"e","E")
"RTN","VPRJSONE",96,0)
 I X?.1"-"1.N.1".".N1"E".1"+"1.N Q 1
"RTN","VPRJSONE",97,0)
 I X?.1"-"1.N.1".".N1"E-"1.N Q 1
"RTN","VPRJSONE",98,0)
 Q 0
"RTN","VPRJSONE",99,0)
 ;
"RTN","VPRJSONE",100,0)
ESC(X) ; Escape string for JSON
"RTN","VPRJSONE",101,0)
 N Y,I,PAIR,FROM,TO
"RTN","VPRJSONE",102,0)
 S Y=X
"RTN","VPRJSONE",103,0)
 F PAIR="\\","""""","//",$C(8,98),$C(12,102),$C(10,110),$C(13,114),$C(9,116) D
"RTN","VPRJSONE",104,0)
 . S FROM=$E(PAIR),TO=$E(PAIR,2)
"RTN","VPRJSONE",105,0)
 . S X=Y,Y=$P(X,FROM) F I=2:1:$L(X,FROM) S Y=Y_"\"_TO_$P(X,FROM,I)
"RTN","VPRJSONE",106,0)
 Q Y
"RTN","VPRJSONE",107,0)
 ;
"RTN","VPRJSONE",108,0)
ERRX(ID,VAL) ; Set the appropriate error message
"RTN","VPRJSONE",109,0)
 D ERRX^VPRJSON(ID,$G(VAL))
"RTN","VPRJSONE",110,0)
 Q
"RTN","VPRLIST")
0^19^B60561312
"RTN","VPRLIST",1,0)
VPRLIST ;HINES OIFO/DP - List Manager;02 Nov 2012
"RTN","VPRLIST",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRLIST",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPRLIST",4,0)
 ;
"RTN","VPRLIST",5,0)
EN(TARGET,NAME,FORMAT,PARAMS) ; OlD sKOoL entry point
"RTN","VPRLIST",6,0)
 Kill @TARGET
"RTN","VPRLIST",7,0)
 New VPRLIST,VPRROOT,VPRXECUTE
"RTN","VPRLIST",8,0)
 If NAME="*" Do
"RTN","VPRLIST",9,0)
 . Do ALL(TARGET)
"RTN","VPRLIST",10,0)
 Else  Do
"RTN","VPRLIST",11,0)
 . Set VPRLIST=$$LIST(NAME) If 'VPRLIST Set Y=$$ADD("-1^No Such List '"_NAME_"'") Quit
"RTN","VPRLIST",12,0)
 . If $Piece(VPRLIST,U,3)=0 Do  ; Static list
"RTN","VPRLIST",13,0)
 . . Set X=$$GET1^DIQ(560.2,+VPRLIST_",",.9,"",TARGET)
"RTN","VPRLIST",14,0)
 . Else  Set VPRXECUTE=$$GET1^DIQ(560.2,VPRLIST_",",.11,"I") Xecute:VPRXECUTE]"" VPRXECUTE
"RTN","VPRLIST",15,0)
 . Set @TARGET@(0)=NAME_U_$Order(@TARGET@(""),-1)_U_$$COLS(+VPRLIST)
"RTN","VPRLIST",16,0)
 ; Process alternate format before leaving
"RTN","VPRLIST",17,0)
 Set FORMAT=$Get(FORMAT,"DEFAULT")
"RTN","VPRLIST",18,0)
 Do @$Select(FORMAT="XML":"XML",FORMAT="JSON":"JSON",FORMAT="DEFAULT":"DEFAULT",1:"UNKNOWN")
"RTN","VPRLIST",19,0)
 Quit
"RTN","VPRLIST",20,0)
 ;
"RTN","VPRLIST",21,0)
RPC(RESULT,NAME,FORMAT,PARAMS) ; Accessed via VPR LIST Remote Procedure
"RTN","VPRLIST",22,0)
 Set RESULT=$Name(^TMP($J)) Kill @RESULT
"RTN","VPRLIST",23,0)
 If $Data(PARAMS) Do EN(RESULT,NAME,$Get(FORMAT,"DEFAULT"),.PARAMS)
"RTN","VPRLIST",24,0)
 Else  Do EN(RESULT,NAME,$Get(FORMAT,"DEFAULT"))
"RTN","VPRLIST",25,0)
 Quit
"RTN","VPRLIST",26,0)
 ;
"RTN","VPRLIST",27,0)
VALUE(NAME,ID) ; Return the item from a list by ID
"RTN","VPRLIST",28,0)
 New VPRLIST
"RTN","VPRLIST",29,0)
 Set VPRLIST=$$LIST(NAME) If 'VPRLIST Quit "^No Such List"
"RTN","VPRLIST",30,0)
 For X=0:0 Set X=$Order(^VPRD(560.2,+VPRLIST,9,X)) Quit:'X  Quit:$Piece(^(X,0),U)=ID
"RTN","VPRLIST",31,0)
 Quit $Select(X:^VPRD(560.2,+VPRLIST,9,X,0),1:"^No Such ID")
"RTN","VPRLIST",32,0)
 ;
"RTN","VPRLIST",33,0)
EDIT ; Edit a list definition
"RTN","VPRLIST",34,0)
 New DDSFILE,DA,DR
"RTN","VPRLIST",35,0)
 Do HOME^%ZIS Write @IOF
"RTN","VPRLIST",36,0)
 Set DDSFILE=560.2,DR="[VPR LIST]"
"RTN","VPRLIST",37,0)
 Do ^DDS
"RTN","VPRLIST",38,0)
 Quit
"RTN","VPRLIST",39,0)
 ;
"RTN","VPRLIST",40,0)
DISPLAY ; Display a list definition
"RTN","VPRLIST",41,0)
 New DIC,VPR,BY,FR,TO,FLDS
"RTN","VPRLIST",42,0)
 Set DIC=560.2,DIC(0)="AEQM",DIC("A")="Select List Definition to Display: " Do ^DIC Quit:+Y<1
"RTN","VPRLIST",43,0)
 Set BY="@NUMBER",FR=+Y,TO=+Y,FLDS="[VPR LIST DISPLAY]" Do EN1^DIP
"RTN","VPRLIST",44,0)
 Quit
"RTN","VPRLIST",45,0)
 ;
"RTN","VPRLIST",46,0)
DEFAULT ; Just return as is, a simple array
"RTN","VPRLIST",47,0)
 Quit
"RTN","VPRLIST",48,0)
 ;
"RTN","VPRLIST",49,0)
UNKNOWN ; You've got no idea, and neither do I
"RTN","VPRLIST",50,0)
 Quit
"RTN","VPRLIST",51,0)
 ;
"RTN","VPRLIST",52,0)
JSON ; Convert @TARGET@(1..n) to JSON
"RTN","VPRLIST",53,0)
 New VPRCOLS,VPRX,VPRY
"RTN","VPRLIST",54,0)
 Set VPRCOLS=$Piece(@TARGET@(0),U,3),VPRX=@TARGET@(0)
"RTN","VPRLIST",55,0)
 Set @TARGET@(0)="{ name : """_$Piece(VPRX,U,1)_""", count : """_$Piece(VPRX,U,2)_""""_$Select($Order(@TARGET@(0)):", [",1:"}")
"RTN","VPRLIST",56,0)
 For X=0:0 Set X=$Order(@TARGET@(X)) Quit:'X  Do
"RTN","VPRLIST",57,0)
 . Set VPRX=@TARGET@(X),VPRY="{ "
"RTN","VPRLIST",58,0)
 . For Y=1:1:$Length(VPRCOLS,";") Set VPRY=VPRY_""""_$Piece(VPRCOLS,";",Y)_""":"""_$Piece(VPRX,U,Y)_""""_$Select(Y<$Length(VPRCOLS,";"):", ",1:" ")
"RTN","VPRLIST",59,0)
 . Set VPRY=VPRY_"}"
"RTN","VPRLIST",60,0)
 . If $Order(@TARGET@(X)) Set @TARGET@(X)=VPRY_"," Quit
"RTN","VPRLIST",61,0)
 . Set @TARGET@(X)=VPRY
"RTN","VPRLIST",62,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)="]}"
"RTN","VPRLIST",63,0)
 Quit
"RTN","VPRLIST",64,0)
 ;
"RTN","VPRLIST",65,0)
XML ; Convert @TARGET@(1..n) to XML
"RTN","VPRLIST",66,0)
 New VPRCOLD,VPRX,VPRY
"RTN","VPRLIST",67,0)
 Set VPRCOLS=$Piece(@TARGET@(0),U,3)
"RTN","VPRLIST",68,0)
 For X=0:0 Set X=$Order(@TARGET@(X)) Quit:'X  Do
"RTN","VPRLIST",69,0)
 . Set VPRX=@TARGET@(X),VPRY="<item "
"RTN","VPRLIST",70,0)
 . For Y=1:1:$Length(VPRCOLS,";") Set VPRY=VPRY_$Piece(VPRCOLS,";",Y)_"="""_$Piece(VPRX,U,Y)_""" "
"RTN","VPRLIST",71,0)
 . Set VPRY=VPRY_"/>"
"RTN","VPRLIST",72,0)
 . Set @TARGET@(X)=VPRY
"RTN","VPRLIST",73,0)
 Set VPRX=@TARGET@(0)
"RTN","VPRLIST",74,0)
 Set @TARGET@(0)="<list name="""_$Piece(VPRX,U,1)_""" count="""_$Piece(VPRX,U,2)_""">"
"RTN","VPRLIST",75,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)="</list>"
"RTN","VPRLIST",76,0)
 Quit
"RTN","VPRLIST",77,0)
 ;
"RTN","VPRLIST",78,0)
XMLSAFE(X) ; Transform X into XML safe data
"RTN","VPRLIST",79,0)
 ; Strip off the spaces and make life easier
"RTN","VPRLIST",80,0)
 For  Quit:$Extract(X)'=" "  Set X=$Extract(X,2,$Length(X))
"RTN","VPRLIST",81,0)
 For  Quit:$Extract(X,$Length(X))'=" "  Set X=$Extract(X,1,$Length(X)-1)
"RTN","VPRLIST",82,0)
 Set X=$$TRNSLT(X,"&","&amp;")
"RTN","VPRLIST",83,0)
 Set X=$$TRNSLT(X,"<","&lt;")
"RTN","VPRLIST",84,0)
 Set X=$$TRNSLT(X,">","&gt;")
"RTN","VPRLIST",85,0)
 Set X=$$TRNSLT(X,"'","&apos;")
"RTN","VPRLIST",86,0)
 Set X=$$TRNSLT(X,"""","&quot;")
"RTN","VPRLIST",87,0)
 Set X=$$TRNSLT(X,":","&#58;")
"RTN","VPRLIST",88,0)
 Quit X
"RTN","VPRLIST",89,0)
 ;
"RTN","VPRLIST",90,0)
JSONSAFE(X) ; Transform X into JSON safe data
"RTN","VPRLIST",91,0)
 ; Strip the spaces
"RTN","VPRLIST",92,0)
 For  Quit:$Extract(X)'=" "  Set X=$Extract(X,2,$Length(X))
"RTN","VPRLIST",93,0)
 For  Quit:$Extract(X,$Length(X))'=" "  Set X=$Extract(X,1,$Length(X)-1)
"RTN","VPRLIST",94,0)
 Set X=$$TRNSLT(X,"""","\""")
"RTN","VPRLIST",95,0)
 Quit X
"RTN","VPRLIST",96,0)
 ;
"RTN","VPRLIST",97,0)
TRNSLT(X,X1,X2) ; Translate every Y to Z in X
"RTN","VPRLIST",98,0)
 New Y
"RTN","VPRLIST",99,0)
 Quit:X'[X1 X  ; Nothing to translate
"RTN","VPRLIST",100,0)
 Set Y="" For  Quit:X=""  Do
"RTN","VPRLIST",101,0)
 . If X[X1 Set Y=Y_$Piece(X,X1)_X2,X=$Piece(X,X1,2,250) Quit
"RTN","VPRLIST",102,0)
 . Set Y=Y_X,X=""
"RTN","VPRLIST",103,0)
 Quit Y
"RTN","VPRLIST",104,0)
 ;
"RTN","VPRLIST",105,0)
LIST(NAME) ; Return List by name
"RTN","VPRLIST",106,0)
 Set X=$$FIND1^DIC(560.2,,"KX",NAME) Quit:X<1 X
"RTN","VPRLIST",107,0)
 Quit X_U_^VPRD(560.2,X,0)
"RTN","VPRLIST",108,0)
 ;
"RTN","VPRLIST",109,0)
ALL(RETURN) ; Return All lists in RETURN()
"RTN","VPRLIST",110,0)
 Kill @RETURN
"RTN","VPRLIST",111,0)
 Do LIST^DIC(560.2,,"@;.01;.02","P")
"RTN","VPRLIST",112,0)
 For X=0:0 Set X=$Order(^TMP("DILIST",$J,X)) Quit:'X  Set @RETURN@(X)=^TMP("DILIST",$J,X,0)
"RTN","VPRLIST",113,0)
 Set @RETURN@(0)="ALL LISTS^"_+$Order(@RETURN@(""),-1)_"^ID;name;type"
"RTN","VPRLIST",114,0)
 Kill ^TMP("DILIST",$J)
"RTN","VPRLIST",115,0)
 Quit
"RTN","VPRLIST",116,0)
 ;
"RTN","VPRLIST",117,0)
COLS(LIST) ; Return the col names (ID^Name) + any custom col specs
"RTN","VPRLIST",118,0)
 New RESULT,X,Y
"RTN","VPRLIST",119,0)
 Set RESULT="ID;name"
"RTN","VPRLIST",120,0)
 For X=0:0 Set X=$Order(^VPRD(560.2,+LIST,2,X)) Quit:'X  Set Y=^(X,0) Do
"RTN","VPRLIST",121,0)
 . Set $Piece(RESULT,";",$Piece(Y,U,2))=$Piece(Y,U,1)
"RTN","VPRLIST",122,0)
 Quit RESULT
"RTN","VPRLIST",123,0)
 ;
"RTN","VPRLIST",124,0)
CODE(LIST) ; Return Generation Code for a list
"RTN","VPRLIST",125,0)
 Quit $Get(^VPRD(560.2,+LIST,.11))
"RTN","VPRLIST",126,0)
 ;
"RTN","VPRLIST",127,0)
SET(DD,FLD) ; Build a list from a Set Of Codes DD and Field number combination
"RTN","VPRLIST",128,0)
 Kill @TARGET
"RTN","VPRLIST",129,0)
 Quit:$$GET1^DID(DD,FLD,,"TYPE")'="SET"
"RTN","VPRLIST",130,0)
 Set X=$$GET1^DID(DD,FLD,,"POINTER")
"RTN","VPRLIST",131,0)
 For Y=1:1:$Length(X,";")-1 Set @TARGET@(Y)=$Translate($Piece(X,";",Y),":","^")
"RTN","VPRLIST",132,0)
 Quit
"RTN","VPRLIST",133,0)
 ;
"RTN","VPRLIST",134,0)
REBUILD(NAME) ;
"RTN","VPRLIST",135,0)
 New LIST,ALL,CODE,FDA,VPRFDA,VPRX
"RTN","VPRLIST",136,0)
 ;
"RTN","VPRLIST",137,0)
 If NAME="?" Do  Quit
"RTN","VPRLIST",138,0)
 . Set DIC=560.2,DIC(0)="AEQMZ",DIC("A")="Rebuild List: ",DIC("S")="I '$P(^(0),U,2)"
"RTN","VPRLIST",139,0)
 . Do ^DIC Do:+Y REBUILD(Y(0,0))
"RTN","VPRLIST",140,0)
 ;
"RTN","VPRLIST",141,0)
 If +NAME=NAME Do  Quit  ; Rebuild all for a DD number
"RTN","VPRLIST",142,0)
 . For VPRX=0:0 Set VPRX=$Order(^VPRD(560.2,"ADD",NAME,VPRX)) Quit:'VPRX  Do REBUILD($Piece(^VPRD(560.2,VPRX,0),U))
"RTN","VPRLIST",143,0)
 ;
"RTN","VPRLIST",144,0)
 If NAME="*" Do  Quit  ; Rebuild all
"RTN","VPRLIST",145,0)
 . For VPRX=0:0 Set VPRX=$Order(^VPRD(560.2,VPRX)) Quit:'VPRX  Do REBUILD($Piece(^VPRD(560.2,VPRX,0),U))
"RTN","VPRLIST",146,0)
 ;
"RTN","VPRLIST",147,0)
 Set LIST=$$LIST(NAME) Quit:+LIST<1  ; No Such List
"RTN","VPRLIST",148,0)
 ;
"RTN","VPRLIST",149,0)
 If $Piece(LIST,U,2) Quit  ; Dynamic list - fired everytime
"RTN","VPRLIST",150,0)
 Set CODE=$$CODE(LIST) Quit:CODE=""  ; No rebuild code, must be manual
"RTN","VPRLIST",151,0)
 ;
"RTN","VPRLIST",152,0)
 Set TARGET=$Name(^TMP($J))
"RTN","VPRLIST",153,0)
 Set FDA=$Name(VPRFDA(560.2,(+LIST)_","))
"RTN","VPRLIST",154,0)
 Kill @TARGET
"RTN","VPRLIST",155,0)
 Xecute CODE
"RTN","VPRLIST",156,0)
 Set @FDA@(.09)="NOW"
"RTN","VPRLIST",157,0)
 Set @FDA@(.9)=TARGET
"RTN","VPRLIST",158,0)
 Do FILE^DIE("E","VPRFDA")
"RTN","VPRLIST",159,0)
 Quit
"RTN","VPRLIST",160,0)
 ;
"RTN","VPRLIST",161,0)
DQ ; Called via Taskman to build any list that has expired
"RTN","VPRLIST",162,0)
 New VPRNOW,VPRLIST,VPRMIN
"RTN","VPRLIST",163,0)
 ; Nothing set to refresh automatically
"RTN","VPRLIST",164,0)
 Quit:'$Order(^VPRD(560.2,"AREFRESH",0))
"RTN","VPRLIST",165,0)
 Do NOW^%DTC Set VPRNOW=%
"RTN","VPRLIST",166,0)
 For VPRLIST=0:0 Set VPRLIST=$Order(^VPRD(560.2,VPRLIST)) Quit:'VPRLIST  Do:'$Piece(^VPRD(560.2,VPRLIST,0),U,2)  ; Not Dynamic
"RTN","VPRLIST",167,0)
 . Quit:'$Piece(^VPRD(560.2,VPRLIST,0),U,8)  ; Doesn't have a refresh limit
"RTN","VPRLIST",168,0)
 . New $ESTACK,$ETRAP Set $ETRAP="D ERR^VPRLIST" ; Will prevent a list error from cratering the entire build
"RTN","VPRLIST",169,0)
 . Set VPRMIN=$Piece(^VPRD(560.2,VPRLIST,0),U,8)
"RTN","VPRLIST",170,0)
 . Set VPRLAST=$$GET1^DIQ(560.2,VPRLIST_",",.09,"I")
"RTN","VPRLIST",171,0)
 . Set VPRNEXT=$$FMADD^XLFDT(VPRLAST,0,0,VPRMIN,0)
"RTN","VPRLIST",172,0)
 . Quit:VPRNEXT>VPRNOW
"RTN","VPRLIST",173,0)
 . Quit:($$FMADD^XLFDT(VPRNOW,0,0,VPRMIN*-1,0)<$Piece(^VPRD(560.2,VPRLIST,0),U,9))  ; Not yet stale :)
"RTN","VPRLIST",174,0)
 . Do REBUILD($Piece(^VPRD(560.2,VPRLIST,0),U))
"RTN","VPRLIST",175,0)
 ; Get the shortest refresh threshold and reschedule for that
"RTN","VPRLIST",176,0)
 Set VPRNEXT=$$FMADD^XLFDT(+$Extract(VPRNOW,1,12),0,0,$Order(^VPRD(560.2,"AREFRESH",0)),0)
"RTN","VPRLIST",177,0)
 Set ZTREQ=$$FMTH^XLFDT(VPRNEXT)
"RTN","VPRLIST",178,0)
 Quit
"RTN","VPRLIST",179,0)
 ;
"RTN","VPRLIST",180,0)
ADD(X) ; Adds an item to the list automagically
"RTN","VPRLIST",181,0)
 Set @TARGET@($Order(@TARGET@(""),-1)+1)=X
"RTN","VPRLIST",182,0)
 Quit $Order(@TARGET@(""),-1)
"RTN","VPRLIST",183,0)
 ;
"RTN","VPRLIST",184,0)
WARDS ; Get list of wards, clinics and non-stops
"RTN","VPRLIST",185,0)
 Do LOC("W")
"RTN","VPRLIST",186,0)
 Quit
"RTN","VPRLIST",187,0)
 ;
"RTN","VPRLIST",188,0)
CLINICS ; Get Active Clinics
"RTN","VPRLIST",189,0)
 Do LOC("NC")
"RTN","VPRLIST",190,0)
 Quit
"RTN","VPRLIST",191,0)
 ;
"RTN","VPRLIST",192,0)
LOC(TYPES) ; Build list of locations by type
"RTN","VPRLIST",193,0)
 New VPRDT,VPRNOW
"RTN","VPRLIST",194,0)
 Do NOW^%DTC Set VPRNOW=%
"RTN","VPRLIST",195,0)
 For X=0:0 Set X=$Order(^SC(X)) Quit:'X  Do:TYPES[$Piece(^(X,0),U,3)
"RTN","VPRLIST",196,0)
 . Set VPRDT=$Get(^SC(X,"I"),U) ; Deactivation and Reactivation dates
"RTN","VPRLIST",197,0)
 . If +VPRDT Quit:(+VPRDT<VPRNOW&('$Piece(VPRDT,U,2)))!(+VPRDT<VPRNOW&($Piece(VPRDT,U,2)>VPRNOW))
"RTN","VPRLIST",198,0)
 . Set Y=$$ADD^VPRLIST(X_U_$Piece(^SC(X,0),U,1,3)) ; Full tag^rtn used for demonstration purposes
"RTN","VPRLIST",199,0)
 Quit
"RTN","VPRLIST",200,0)
 ;
"RTN","VPRLIST",201,0)
INPT ; Rebuild the inpatient list
"RTN","VPRLIST",202,0)
 Do LIST^DIC(2,,"@;.01;.02;.03;.09;.1;.101","P",,,,"CN")
"RTN","VPRLIST",203,0)
 For X=0:0 Set X=$Order(^TMP("DILIST",$J,X)) Quit:'X  Set Y=$$ADD(^(X,0))
"RTN","VPRLIST",204,0)
 Do CLEAN^DILF
"RTN","VPRLIST",205,0)
 Quit
"RTN","VPRLIST",206,0)
 ;
"RTN","VPRLIST",207,0)
ERR ; This is the application specific error trap for the DQ loop
"RTN","VPRLIST",208,0)
 Do ^%ZTER ; record the error
"RTN","VPRLIST",209,0)
 Do UNWIND^%ZTER ; unwind the stack, return to caller.
"RTN","VPRLIST",210,0)
 Quit
"RTN","VPRLIST",211,0)
 ;
"RTN","VPRPRODC")
0^^B2553308
"RTN","VPRPRODC",1,0)
VPRPRODC ;SLC/AGP - Environmental check for installations ;02/02/12
"RTN","VPRPRODC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2,3**;Sep 01, 2011;Build 102
"RTN","VPRPRODC",3,0)
 ;
"RTN","VPRPRODC",4,0)
 ;This routine will check to see if the user is in a production account
"RTN","VPRPRODC",5,0)
 ;if they are then the user will not be allowed to install this
"RTN","VPRPRODC",6,0)
 ;patch/build/bundle
"RTN","VPRPRODC",7,0)
 ;
"RTN","VPRPRODC",8,0)
ENV ;
"RTN","VPRPRODC",9,0)
 I $$PROD^XUPROD D
"RTN","VPRPRODC",10,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","VPRPRODC",11,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","VPRPRODC",12,0)
 .S XPDABORT=1
"RTN","VPRPRODC",13,0)
 Q
"RTN","VPRUTILS")
0^17^B6380658
"RTN","VPRUTILS",1,0)
VPRUTILS ;SLC/AGP - VPR utilities routine ; 5/25/12
"RTN","VPRUTILS",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**2**;Sep 01, 2011;Build 102
"RTN","VPRUTILS",3,0)
 ;
"RTN","VPRUTILS",4,0)
 ;
"RTN","VPRUTILS",5,0)
 Q
"RTN","VPRUTILS",6,0)
 ;
"RTN","VPRUTILS",7,0)
GETDOM(X) ;
"RTN","VPRUTILS",8,0)
 I X["accession" Q "lab"
"RTN","VPRUTILS",9,0)
 I X["allerg" Q "art"
"RTN","VPRUTILS",10,0)
 I X["appointment" Q "appt"
"RTN","VPRUTILS",11,0)
 I X["consult" Q "cons"
"RTN","VPRUTILS",12,0)
 I X["document" Q "tiu"
"RTN","VPRUTILS",13,0)
 I X["factor" Q "hf"
"RTN","VPRUTILS",14,0)
 I X["immunization" Q "imm"
"RTN","VPRUTILS",15,0)
 ;I X["skin"         S Y="VPRDPXSK"
"RTN","VPRUTILS",16,0)
 ;I X?1"exam".E      S Y="VPRDPXAM"
"RTN","VPRUTILS",17,0)
 ;I X["educat"       S Y="VPRDPXED"
"RTN","VPRUTILS",18,0)
 ; X["insur"        S Y="VPRDIB"
"RTN","VPRUTILS",19,0)
 ; X["polic"        S Y="VPRDIB"
"RTN","VPRUTILS",20,0)
 ; X["lab"          S Y="VPRDLR"
"RTN","VPRUTILS",21,0)
 ; X["panel"        S Y="VPRDLRO"
"RTN","VPRUTILS",22,0)
 I X["pharm" Q "med"
"RTN","VPRUTILS",23,0)
 I X["observ" Q "obs"
"RTN","VPRUTILS",24,0)
 I X["problem"  Q "prob"
"RTN","VPRUTILS",25,0)
 I X["reaction" Q "art"
"RTN","VPRUTILS",26,0)
 I X["vital" Q "vs"
"RTN","VPRUTILS",27,0)
 I X["xray" Q "rad"
"RTN","VPRUTILS",28,0)
 Q X
"RTN","VPRUTILS",29,0)
 ;
"RTN","VPRUTILS",30,0)
SETTEXT(X,VALUE) ;
"RTN","VPRUTILS",31,0)
 N FIRST,I,LINE
"RTN","VPRUTILS",32,0)
 S FIRST=1
"RTN","VPRUTILS",33,0)
 S I=0 F  S I=$O(@X@(I)) Q:I<1  D
"RTN","VPRUTILS",34,0)
 .S LINE=$S($D(@X@(I,0)):@X@(I,0),1:@X@(I))
"RTN","VPRUTILS",35,0)
 .; FIRST=1 S @VALUE@(I)=LINE,FIRST=0 Q
"RTN","VPRUTILS",36,0)
 .S @VALUE@(I)=LINE_$C(13)_$C(10)
"RTN","VPRUTILS",37,0)
 Q
"RTN","VPRUTILS",38,0)
 ;
"RTN","VPRUTILS",39,0)
SPLITVAL(NODE,ARRAY) ;
"RTN","VPRUTILS",40,0)
 N CNT,NAME,VALUE
"RTN","VPRUTILS",41,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","VPRUTILS",42,0)
 .S CNT=+ARRAY(NAME)
"RTN","VPRUTILS",43,0)
 .S VALUE=$P($G(NODE),U,CNT)
"RTN","VPRUTILS",44,0)
 .I NAME="Code" S FIELD=$P(ARRAY(NAME),U,2) S VALUE=$$SETVURN(FIELD,VALUE)
"RTN","VPRUTILS",45,0)
 .S ARRAY(NAME)=VALUE
"RTN","VPRUTILS",46,0)
 Q
"RTN","VPRUTILS",47,0)
 ;
"RTN","VPRUTILS",48,0)
SETPROV(NODE,PROV) ;
"RTN","VPRUTILS",49,0)
 S PROV("providerUid")=$$SETUID("user","",+NODE,"")
"RTN","VPRUTILS",50,0)
 S PROV("providerName")=$P(NODE,U,2)
"RTN","VPRUTILS",51,0)
 Q
"RTN","VPRUTILS",52,0)
 ;
"RTN","VPRUTILS",53,0)
SETUID(DOMAIN,PAT,ID,ADDDATA) ;
"RTN","VPRUTILS",54,0)
 N RESULT,SYS,TEXT
"RTN","VPRUTILS",55,0)
 S SYS=$$SYS(),TEXT="urn:va:",RESULT=""
"RTN","VPRUTILS",56,0)
 S RESULT=$S(DOMAIN="user":TEXT_DOMAIN_":"_SYS_":"_ID,1:TEXT_SYS_":"_PAT_":"_DOMAIN_":"_ID)
"RTN","VPRUTILS",57,0)
 I $L(ADDDATA) S RESULT=RESULT_":"_ADDDATA
"RTN","VPRUTILS",58,0)
 Q RESULT
"RTN","VPRUTILS",59,0)
 ;
"RTN","VPRUTILS",60,0)
SETFCURN(DOMAIN,FACILITY,VALUE) ;
"RTN","VPRUTILS",61,0)
 Q "urn:va:"_DOMAIN_":"_FACILITY_":"_VALUE
"RTN","VPRUTILS",62,0)
 ;
"RTN","VPRUTILS",63,0)
SETVURN(DOMAIN,VALUE) ;
"RTN","VPRUTILS",64,0)
 N RESULT S RESULT=""
"RTN","VPRUTILS",65,0)
 S RESULT="urn:va:"_DOMAIN_":"_VALUE
"RTN","VPRUTILS",66,0)
 Q RESULT
"RTN","VPRUTILS",67,0)
 ;
"RTN","VPRUTILS",68,0)
SYS() ; -- return hashed system name
"RTN","VPRUTILS",69,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","VPRUTILS",70,0)
 ;
"RTN","VPRUTILS",71,0)
SETNCS(CODESET,VALUE) ;return national codeset JSON structure
"RTN","VPRUTILS",72,0)
 Q "urn:"_CODESET_":"_VALUE
"RTN","VPRUTILS",73,0)
 ;
"RTN","VPRUTILS",74,0)
JSONDT(X) ;SET FILEMAN DT TO HL7 DT FOR JSON
"RTN","VPRUTILS",75,0)
 Q $P($$FMTHL7^XLFDT(X),"-")
"RTN","VPRUTILS",76,0)
 ;
"RTN","VPRUTILS",77,0)
FACILITY(X,Y) ; X=STATION NUMBER^STATION NAME, Y=Variable array name.  For Example D FACILITY^VPRUTILS("500^CAMP MASTER","REAC")
"RTN","VPRUTILS",78,0)
 S @Y@("facilityCode")=$P(X,"^")
"RTN","VPRUTILS",79,0)
 S @Y@("facilityName")=$P(X,"^",2)
"RTN","VPRUTILS",80,0)
 Q
"RTN","VPRUTILS",81,0)
 ;
"SEC","^DIC",560.2,560.2,0,"AUDIT")
@
"SEC","^DIC",560.2,560.2,0,"DD")
@
"SEC","^DIC",560.2,560.2,0,"DEL")
@
"SEC","^DIC",560.2,560.2,0,"LAYGO")
@
"SEC","^DIC",560.2,560.2,0,"RD")
@
"SEC","^DIC",560.2,560.2,0,"WR")
@
"SEC","^DIC",560.21,560.21,0,"AUDIT")
@
"SEC","^DIC",560.21,560.21,0,"DD")
@
"SEC","^DIC",560.21,560.21,0,"DEL")
@
"SEC","^DIC",560.21,560.21,0,"LAYGO")
@
"SEC","^DIC",560.21,560.21,0,"RD")
@
"SEC","^DIC",560.21,560.21,0,"WR")
@
"SEC","^DIC",560.22,560.22,0,"AUDIT")
@
"SEC","^DIC",560.22,560.22,0,"DD")
@
"SEC","^DIC",560.22,560.22,0,"DEL")
@
"SEC","^DIC",560.22,560.22,0,"LAYGO")
@
"SEC","^DIC",560.22,560.22,0,"RD")
@
"SEC","^DIC",560.22,560.22,0,"WR")
@
"VER")
8.0^22.0
"^DD",560.2,560.2,0)
FIELD^^.3^11
"^DD",560.2,560.2,0,"DT")
3121107
"^DD",560.2,560.2,0,"IX","ADD",560.2,.03)

"^DD",560.2,560.2,0,"IX","AREFRESH",560.2,.08)

"^DD",560.2,560.2,0,"IX","B",560.2,.01)

"^DD",560.2,560.2,0,"NM","VPR LIST")

"^DD",560.2,560.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",560.2,560.2,.01,1,0)
^.1
"^DD",560.2,560.2,.01,1,1,0)
560.2^B
"^DD",560.2,560.2,.01,1,1,1)
S ^VPRD(560.2,"B",$E(X,1,30),DA)=""
"^DD",560.2,560.2,.01,1,1,2)
K ^VPRD(560.2,"B",$E(X,1,30),DA)
"^DD",560.2,560.2,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",560.2,560.2,.02,0)
TYPE^S^0:STATIC;1:DYNAMIC;^0;2^Q
"^DD",560.2,560.2,.02,"DT")
3121011
"^DD",560.2,560.2,.03,0)
DD NUMBER^NJ14,5^^0;3^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."6N.N) X
"^DD",560.2,560.2,.03,1,0)
^.1
"^DD",560.2,560.2,.03,1,1,0)
560.2^ADD
"^DD",560.2,560.2,.03,1,1,1)
S ^VPRD(560.2,"ADD",$E(X,1,30),DA)=""
"^DD",560.2,560.2,.03,1,1,2)
K ^VPRD(560.2,"ADD",$E(X,1,30),DA)
"^DD",560.2,560.2,.03,1,1,"DT")
3121022
"^DD",560.2,560.2,.03,3)
Type a number between 1 and 99999999, 5 decimal digits.
"^DD",560.2,560.2,.03,"DT")
3121022
"^DD",560.2,560.2,.04,0)
DOMAIN^RP560.21'^VPRD(560.21,^0;4^Q
"^DD",560.2,560.2,.04,3)

"^DD",560.2,560.2,.04,"DT")
3121031
"^DD",560.2,560.2,.05,0)
ATTRIBUTE^RP560.22'^VPRD(560.22,^0;5^Q
"^DD",560.2,560.2,.05,3)

"^DD",560.2,560.2,.05,"DT")
3121107
"^DD",560.2,560.2,.08,0)
REFRESH THRESHOLD^NJ4,0^^0;8^K:+X'=X!(X>1440)!(X<0)!(X?.E1"."1N.N) X
"^DD",560.2,560.2,.08,1,0)
^.1
"^DD",560.2,560.2,.08,1,1,0)
560.2^AREFRESH
"^DD",560.2,560.2,.08,1,1,1)
S ^VPRD(560.2,"AREFRESH",$E(X,1,30),DA)=""
"^DD",560.2,560.2,.08,1,1,2)
K ^VPRD(560.2,"AREFRESH",$E(X,1,30),DA)
"^DD",560.2,560.2,.08,1,1,"DT")
3121031
"^DD",560.2,560.2,.08,3)
Type a number between 0 and 1440, 0 decimal digits.
"^DD",560.2,560.2,.08,"DT")
3121031
"^DD",560.2,560.2,.09,0)
NEXT REFRESH^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",560.2,560.2,.09,"DT")
3121101
"^DD",560.2,560.2,.11,0)
GENERATION CODE^K^^.11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",560.2,560.2,.11,3)
This is Standard MUMPS code.
"^DD",560.2,560.2,.11,9)
@
"^DD",560.2,560.2,.11,"DT")
3121011
"^DD",560.2,560.2,.2,0)
COLUMNS^560.202^^2;0
"^DD",560.2,560.2,.3,0)
DESCRIPTION^560.203^^3;0
"^DD",560.2,560.2,.9,0)
DATA^560.209^^9;0
"^DD",560.2,560.202,0)
COLUMNS SUB-FIELD^^.02^2
"^DD",560.2,560.202,0,"DT")
3121030
"^DD",560.2,560.202,0,"IX","AORD",560.202,.02)

"^DD",560.2,560.202,0,"IX","B",560.202,.01)

"^DD",560.2,560.202,0,"NM","COLUMNS")

"^DD",560.2,560.202,0,"UP")
560.2
"^DD",560.2,560.202,.01,0)
COLUMN NAME^MF^^0;1^K:$L(X)>30!($L(X)<3)!'(X?1UL.29ULN) X
"^DD",560.2,560.202,.01,1,0)
^.1
"^DD",560.2,560.202,.01,1,1,0)
560.202^B
"^DD",560.2,560.202,.01,1,1,1)
S ^VPRD(560.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",560.2,560.202,.01,1,1,2)
K ^VPRD(560.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",560.2,560.202,.01,3)
Answer must be 3-30 characters in length.
"^DD",560.2,560.202,.01,"DT")
3121030
"^DD",560.2,560.202,.02,0)
ORDER^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<3)!(X?.E1"."1N.N) X
"^DD",560.2,560.202,.02,1,0)
^.1
"^DD",560.2,560.202,.02,1,1,0)
560.202^AORD
"^DD",560.2,560.202,.02,1,1,1)
S ^VPRD(560.2,DA(1),2,"AORD",$E(X,1,30),DA)=""
"^DD",560.2,560.202,.02,1,1,2)
K ^VPRD(560.2,DA(1),2,"AORD",$E(X,1,30),DA)
"^DD",560.2,560.202,.02,1,1,"DT")
3121031
"^DD",560.2,560.202,.02,3)
Type a number between 3 and 99, 0 decimal digits.
"^DD",560.2,560.202,.02,"DT")
3121031
"^DD",560.2,560.203,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",560.2,560.203,0,"DT")
3121031
"^DD",560.2,560.203,0,"NM","DESCRIPTION")

"^DD",560.2,560.203,0,"UP")
560.2
"^DD",560.2,560.203,.01,0)
DESCRIPTION^WLx^^0;1^Q
"^DD",560.2,560.203,.01,"DT")
3121031
"^DD",560.2,560.209,0)
DATA SUB-FIELD^^.01^1
"^DD",560.2,560.209,0,"DT")
3121030
"^DD",560.2,560.209,0,"NM","DATA")

"^DD",560.2,560.209,0,"UP")
560.2
"^DD",560.2,560.209,.01,0)
DATA^WLx^^0;1^Q
"^DD",560.2,560.209,.01,"DT")
3121030
"^DD",560.21,560.21,0)
FIELD^^.03^3
"^DD",560.21,560.21,0,"DT")
3121031
"^DD",560.21,560.21,0,"IX","B",560.21,.01)

"^DD",560.21,560.21,0,"NM","VPR LIST DOMAIN")

"^DD",560.21,560.21,0,"PT",560.2,.04)

"^DD",560.21,560.21,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",560.21,560.21,.01,1,0)
^.1
"^DD",560.21,560.21,.01,1,1,0)
560.21^B
"^DD",560.21,560.21,.01,1,1,1)
S ^VPRD(560.21,"B",$E(X,1,30),DA)=""
"^DD",560.21,560.21,.01,1,1,2)
K ^VPRD(560.21,"B",$E(X,1,30),DA)
"^DD",560.21,560.21,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",560.21,560.21,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",560.21,560.21,.02,3)
Answer must be 1-10 characters in length.
"^DD",560.21,560.21,.02,"DT")
3121031
"^DD",560.21,560.21,.03,0)
DISPLAY NAME^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",560.21,560.21,.03,3)
Answer must be 1-50 characters in length.
"^DD",560.21,560.21,.03,"DT")
3121031
"^DD",560.22,560.22,0)
FIELD^^.01^3
"^DD",560.22,560.22,0,"DT")
3121107
"^DD",560.22,560.22,0,"IX","B",560.22,.01)

"^DD",560.22,560.22,0,"NM","VPR LIST ATTRIBUTE")

"^DD",560.22,560.22,0,"PT",560.2,.05)

"^DD",560.22,560.22,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",560.22,560.22,.01,1,0)
^.1
"^DD",560.22,560.22,.01,1,1,0)
560.22^B
"^DD",560.22,560.22,.01,1,1,1)
S ^VPRD(560.22,"B",$E(X,1,30),DA)=""
"^DD",560.22,560.22,.01,1,1,2)
K ^VPRD(560.22,"B",$E(X,1,30),DA)
"^DD",560.22,560.22,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",560.22,560.22,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",560.22,560.22,.02,3)
Answer must be 1-10 characters in length.
"^DD",560.22,560.22,.02,"DT")
3121031
"^DD",560.22,560.22,.03,0)
DISPLAY NAME^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",560.22,560.22,.03,3)
Answer must be 1-50 characters in length.
"^DD",560.22,560.22,.03,"DT")
3121031
"^DIC",560.2,560.2,0)
VPR LIST^560.2
"^DIC",560.2,560.2,0,"GL")
^VPRD(560.2,
"^DIC",560.2,"B","VPR LIST",560.2)

"^DIC",560.21,560.21,0)
VPR LIST DOMAIN^560.21
"^DIC",560.21,560.21,0,"GL")
^VPRD(560.21,
"^DIC",560.21,"B","VPR LIST DOMAIN",560.21)

"^DIC",560.22,560.22,0)
VPR LIST ATTRIBUTE^560.22
"^DIC",560.22,560.22,0,"GL")
^VPRD(560.22,
"^DIC",560.22,"B","VPR LIST ATTRIBUTE",560.22)

**END**
**END**
